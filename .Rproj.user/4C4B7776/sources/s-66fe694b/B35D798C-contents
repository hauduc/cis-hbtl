---
title: "Cohort-wide Jaccard and Spearman Clustering/Heatmapping"
output: html_notebook
---
```{r}
#!/gsc/software/linux-x86_64-centos7/R-4.1.3/lib64/R/bin/R
# R 4.1.3
# x86_64-centos7-linux-gnu
library(plyranges)
library(VariantAnnotation)
library(MutationalPatterns)
library(genomation)
library(Gviz)
library(BSgenome.Hsapiens.UCSC.hg38)
library(TxDb.Hsapiens.UCSC.hg38.knownGene)
library(systemPipeR)
library(biomaRt)
library(LDlinkR)
library(AllelicImbalance)
library(broom)
library(gt)
library(gtsummary)
library(UpSetR)
library(tidyverse)
library(ggdendro)

const_canonical_chromosomes <- str_c("chr", c(1:22, "X"))

vector_marks <- c("H3K4me3", "H3K4me1", "H3K27ac", "H3K9me3", "H3K27me3", "H3K36me3")
vector_celltypes <- c("BC", "LP", "LC", "SC")
vector_individuals <- c("Individual_14_17_LP_DNA",
                        "Individual_14_18_BC__356K_RNA",
                        "Individual_11_18_BC_RNA_DNA",
                        "Individual_22_18_BC_RNA_DNA",
                        "Individual_24_18_BC_RNA_DNA",
                        "Individual_38_18_LC_RNA_DNA",
                        "Individual_30_18_LC_RNA_DNA",
                        "Individual_15_18_LC_RNA_DNA")

vector_individuals_encoded <- c("Individual_1",
                                "Individual_2",
                                "Individual_3",
                                "Individual_4",
                                "Individual_5",
                                "Individual_6",
                                "Individual_7",
                                "Individual_8")
```

Set up functions for dendrograms and clustering
```{r}
# Inverse Jaccard similarity index
jaccard_similarity <- function(gr1, gr2) {
  HelloRanges::do_bedtools_jaccard(gr1, gr2)$jaccard
}

# Inverse Jaccard similarity index
jaccard_distance <- function(gr1, gr2) {
  1 - HelloRanges::do_bedtools_jaccard(gr1, gr2)$jaccard
}

# Non-redundant 2-individual combinations
individual_combos <- combn(vector_individuals, 2) %>% t()

# Non-redundant 2-individual combinations
individual_combos_encoded <- combn(vector_individuals_encoded, 2) %>% t()
```

Jaccard cluster of VCFs - dendrogram and heatmap
```{r}
# Instantiate dataframe
cluster_matrix_long_variants <- data.frame()

# Test every combination of individuals for jaccard and build distances into a labelled dataframe
for (COMBINATION_ROW in 1:nrow(individual_combos_encoded)) {
  
  current_frame <- data.frame(individual1 = individual_combos_encoded[COMBINATION_ROW, 1],
                              individual2 = individual_combos_encoded[COMBINATION_ROW, 2],
                              jaccard_dist = jaccard_distance(list_variant_calls[[individual_combos[COMBINATION_ROW, 1]]],
                                                              list_variant_calls[[individual_combos[COMBINATION_ROW, 2]]]))
  
  cluster_matrix_long_variants <- bind_rows(cluster_matrix_long_variants, current_frame)
    
}

# Create a distance matrix from long dataframe
cluster_matrix_short_variants <- cluster_matrix_long_variants %>% 
  mutate(individual1 = individual1 %>% factor(vector_individuals_encoded),
         individual2 = individual2 %>% factor(vector_individuals_encoded)) %>%
  arrange(desc(individual1), desc(individual2)) %>% 
  pivot_wider(names_from = individual2, values_from = jaccard_dist) %>% 
  column_to_rownames("individual1") %>% 
  as.dist()

# Plot cluster distance
png("plots/hclust_jaccard_variants.png",
    height = 7,
    width = 10,
    units = "in",
    res = 300)
plot(hclust(cluster_matrix_short_variants, method = "complete"))
dev.off()

# Plot heatmap on ggplot2
# Switch to Jaccard Similarity index and add same-sample combination values (i.e. 1)
cluster_matrix_long_variants_heatmap <- 
  cluster_matrix_long_variants %>% 
  mutate(jaccard_sim = 1 - jaccard_dist) %>% 
  select(-jaccard_dist) %>% 
  bind_rows(data.frame(individual1 = vector_individuals_encoded,
                       individual2 = vector_individuals_encoded,
                       jaccard_sim = 1))

cluster_matrix_short_variants_heatmap <- 
  cluster_matrix_long_variants_heatmap %>% 
  pivot_wider(names_from = individual2, values_from = jaccard_sim) %>% 
  column_to_rownames("individual1") %>% 
  relocate(8, 1:7) %>% 
  as.matrix()

# Create a distance matrix from long dataframe
cluster_matrix_short_variants_heatmap %>% 
  reshape2::melt(na.rm = TRUE) %>% 
  ggplot(aes(Var2, Var1, fill = value)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "white", 
                       high = "red", 
                       limit = c(0, 1), 
                       space = "Lab", 
                       name = "Variants\nJaccard Correlations") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, 
                                   size = 8, hjust = 1),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        panel.grid.major = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text.y = element_text(size = 8),
        legend.justification = c(1, 0),
        legend.position = c(0.6, 0.7),
        legend.direction = "horizontal") +
  coord_fixed() + 
  geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 3) +
  guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
                title.position = "top", title.hjust = 0.5))
ggsave("plots/heatmap_variants_jaccard_cor.png")

```

Build all-modality histone Jaccard distance matrix and plot
```{r}
# Instantiate dataframe
cluster_matrix_long_histones <- data.frame()

# Test every combination of individuals for jaccard and build distances into a labelled dataframe
for (MODALITY in names(list_peak_wasp)) {
  for (COMBINATION_ROW in 1:nrow(individual_combos_encoded)) {
    
    current_frame <- data.frame(modality = MODALITY,
                                individual1 = individual_combos_encoded[COMBINATION_ROW, 1],
                                individual2 = individual_combos_encoded[COMBINATION_ROW, 2],
                                jaccard_dist = jaccard_distance(list_peak_wasp[[MODALITY]][[individual_combos[COMBINATION_ROW, 1]]],
                                                                list_peak_wasp[[MODALITY]][[individual_combos[COMBINATION_ROW, 2]]]))
    
    cluster_matrix_long_histones <- bind_rows(cluster_matrix_long_histones, current_frame)
    
  }
}

# Summarize means across Individual comparisons and create a distance matrix from long dataframe
cluster_matrix_short_histones <- cluster_matrix_long_histones %>% 
  group_by(individual1, individual2) %>% 
  summarize(mean_jaccard = mean(jaccard_dist)) %>%
  mutate(individual1 = individual1 %>% factor(vector_individuals_encoded),
         individual2 = individual2 %>% factor(vector_individuals_encoded)) %>%
  arrange(desc(individual1), desc(individual2)) %>% 
  pivot_wider(names_from = individual2, values_from = mean_jaccard) %>% 
  column_to_rownames("individual1") %>% 
  as.dist()

# Plot
png("plots/hclust_jaccard_histones.png",
    height = 7,
    width = 10,
    units = "in",
    res = 300)
plot(hclust(cluster_matrix_short_histones, method = "complete"))
dev.off()

# Plot heatmap on ggplot2
# Switch to Jaccard Similarity index and add same-sample combination values (i.e. 1)
cluster_matrix_long_histones_heatmap <- 
  cluster_matrix_long_histones %>% 
  group_by(individual1, individual2) %>% 
  summarize(mean_jaccard = mean(jaccard_dist)) %>%
  mutate(individual1 = individual1 %>% factor(vector_individuals_encoded),
         individual2 = individual2 %>% factor(vector_individuals_encoded)) %>%
  arrange(desc(individual1), desc(individual2)) %>% 
  mutate(mean_jaccard_sim = 1 - mean_jaccard) %>% 
  select(-mean_jaccard) %>% 
  bind_rows(data.frame(individual1 = vector_individuals_encoded,
                       individual2 = vector_individuals_encoded,
                       mean_jaccard_sim = 1))

cluster_matrix_short_histones_heatmap <- 
  cluster_matrix_long_histones_heatmap %>% 
  pivot_wider(names_from = individual2, values_from = mean_jaccard_sim) %>% 
  column_to_rownames("individual1") %>% 
  slice(8, 1:7) %>% 
  arrange(8:1) %>% 
  select(8:1) %>% 
  as.matrix()

# Create a distance matrix from long dataframe
cluster_matrix_short_histones_heatmap %>% 
  reshape2::melt(na.rm = TRUE) %>% 
  ggplot(aes(Var2, Var1, fill = value)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "white", 
                       high = "red", 
                       limit = c(0, 1), 
                       space = "Lab", 
                       name = "All Histones\nMean Jaccard Correlations") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, 
                                   size = 8, hjust = 1),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        panel.grid.major = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text.y = element_text(size = 8),
        legend.justification = c(1, 0),
        legend.position = c(0.6, 0.7),
        legend.direction = "horizontal") +
  coord_fixed() + 
  geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 3) +
  guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
                title.position = "top", title.hjust = 0.5))
ggsave("plots/heatmap_histones_mean_jaccard_cor.png")

```

=====================================================================================================================================================================
# Create your histone mark peak Jaccard correlation dataframes/matrices, then print and save using ggplot

Jaccard cluster for H3K4me3
```{r}
# Create new object for H3K4me3 peaks organized by individual-celltype combo
list_peak_H3K4me3 <- GRangesList()

# Copy over corresponding GRanges
list_peak_H3K4me3$Individual_1_BC <- list_peak_wasp$H3K4me3_BC[[1]]
list_peak_H3K4me3$Individual_2_BC <- list_peak_wasp$H3K4me3_BC[[2]] 
list_peak_H3K4me3$Individual_3_BC <- list_peak_wasp$H3K4me3_BC[[3]] 
list_peak_H3K4me3$Individual_4_BC <- list_peak_wasp$H3K4me3_BC[[4]] 
list_peak_H3K4me3$Individual_5_BC <- list_peak_wasp$H3K4me3_BC[[5]] 
list_peak_H3K4me3$Individual_6_BC <- list_peak_wasp$H3K4me3_BC[[6]] 
list_peak_H3K4me3$Individual_7_BC <- list_peak_wasp$H3K4me3_BC[[7]] 
list_peak_H3K4me3$Individual_8_BC <- list_peak_wasp$H3K4me3_BC[[8]] 
list_peak_H3K4me3$Individual_1_LP <- list_peak_wasp$H3K4me3_LP[[1]]
list_peak_H3K4me3$Individual_2_LP <- list_peak_wasp$H3K4me3_LP[[2]]
list_peak_H3K4me3$Individual_3_LP <- list_peak_wasp$H3K4me3_LP[[3]]
list_peak_H3K4me3$Individual_4_LP <- list_peak_wasp$H3K4me3_LP[[4]]
list_peak_H3K4me3$Individual_5_LP <- list_peak_wasp$H3K4me3_LP[[5]]
list_peak_H3K4me3$Individual_6_LP <- list_peak_wasp$H3K4me3_LP[[6]]
list_peak_H3K4me3$Individual_7_LP <- list_peak_wasp$H3K4me3_LP[[7]]
list_peak_H3K4me3$Individual_8_LP <- list_peak_wasp$H3K4me3_LP[[8]]
list_peak_H3K4me3$Individual_1_LC <- list_peak_wasp$H3K4me3_LC[[1]]
list_peak_H3K4me3$Individual_2_LC <- list_peak_wasp$H3K4me3_LC[[2]]
list_peak_H3K4me3$Individual_3_LC <- list_peak_wasp$H3K4me3_LC[[3]]
list_peak_H3K4me3$Individual_4_LC <- list_peak_wasp$H3K4me3_LC[[4]]
list_peak_H3K4me3$Individual_5_LC <- list_peak_wasp$H3K4me3_LC[[5]]
list_peak_H3K4me3$Individual_6_LC <- list_peak_wasp$H3K4me3_LC[[6]]
list_peak_H3K4me3$Individual_7_LC <- list_peak_wasp$H3K4me3_LC[[7]]
list_peak_H3K4me3$Individual_8_LC <- list_peak_wasp$H3K4me3_LC[[8]]
list_peak_H3K4me3$Individual_1_SC <- list_peak_wasp$H3K4me3_SC[[1]]
list_peak_H3K4me3$Individual_2_SC <- list_peak_wasp$H3K4me3_SC[[2]]
list_peak_H3K4me3$Individual_3_SC <- list_peak_wasp$H3K4me3_SC[[3]]
list_peak_H3K4me3$Individual_4_SC <- list_peak_wasp$H3K4me3_SC[[4]]
list_peak_H3K4me3$Individual_5_SC <- list_peak_wasp$H3K4me3_SC[[5]]
list_peak_H3K4me3$Individual_6_SC <- list_peak_wasp$H3K4me3_SC[[6]]
list_peak_H3K4me3$Individual_7_SC <- list_peak_wasp$H3K4me3_SC[[7]]
list_peak_H3K4me3$Individual_8_SC <- list_peak_wasp$H3K4me3_SC[[8]]

# Create new combos for all possible individual-celltypes
# Non-redundant pair combinations
individual_celltype_combos <- combn(names(list_peak_H3K4me3), 2) %>% t()

# Instantiate dataframes
cluster_matrix_long_individuals_celltypes <- data.frame()
cluster_matrix_short_individuals_celltypes <- list()

# Test every combination of individuals for jaccard and build distances into a labelled dataframe
for (COMBINATION_ROW in 1:nrow(individual_celltype_combos)) {
  
  current_frame <- data.frame(sample1 = individual_celltype_combos[COMBINATION_ROW, 1],
                              sample2 = individual_celltype_combos[COMBINATION_ROW, 2],
                              jaccard_sim = jaccard_similarity(list_peak_H3K4me3[[individual_celltype_combos[COMBINATION_ROW, 1]]],
                                                               list_peak_H3K4me3[[individual_celltype_combos[COMBINATION_ROW, 2]]]))
  
  cluster_matrix_long_individuals_celltypes <- bind_rows(cluster_matrix_long_individuals_celltypes, current_frame)
    
}

# Add same sample matches
cluster_matrix_long_individuals_celltypes <- 
  cluster_matrix_long_individuals_celltypes %>% 
  bind_rows(data.frame(sample1 = names(list_peak_H3K4me3),
                       sample2 = names(list_peak_H3K4me3),
                       jaccard_sim = 1))

cluster_matrix_short_individuals_celltypes$H3K4me3 <- 
  cluster_matrix_long_individuals_celltypes %>% 
  pivot_wider(names_from = sample2, values_from = jaccard_sim) %>% 
  column_to_rownames("sample1") %>% 
  relocate(32, 1:31) %>% 
  as.matrix()

# Create a distance matrix from long dataframe
cluster_matrix_short_individuals_celltypes$H3K4me3 %>% 
  reshape2::melt(na.rm = TRUE) %>% 
  ggplot(aes(Var2, Var1, fill = value)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "white", 
                       high = "red", 
                       limit = c(0, 1), 
                       space = "Lab", 
                       name = "H3K4me3 Peak\nJaccard Correlations") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, 
                                   size = 3, hjust = 1),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        panel.grid.major = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text.y = element_text(size = 3),
        legend.justification = c(1, 0),
        legend.position = c(0.6, 0.7),
        legend.direction = "horizontal") +
  coord_fixed() + 
  geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 1) +
  guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
                title.position = "top", title.hjust = 0.5))
ggsave("plots/heatmap_jaccard_individual_celltype_H3K4me3.png")
```

Jaccard cluster for H3K27ac
```{r}
# Create new object for H3K27ac peaks organized by individual-celltype combo
list_peak_H3K27ac <- GRangesList()

# Copy over corresponding GRanges
list_peak_H3K27ac$Individual_1_BC <- list_peak_wasp$H3K27ac_BC[[1]]
list_peak_H3K27ac$Individual_2_BC <- list_peak_wasp$H3K27ac_BC[[2]] 
list_peak_H3K27ac$Individual_3_BC <- list_peak_wasp$H3K27ac_BC[[3]] 
list_peak_H3K27ac$Individual_4_BC <- list_peak_wasp$H3K27ac_BC[[4]] 
list_peak_H3K27ac$Individual_5_BC <- list_peak_wasp$H3K27ac_BC[[5]] 
list_peak_H3K27ac$Individual_6_BC <- list_peak_wasp$H3K27ac_BC[[6]] 
list_peak_H3K27ac$Individual_7_BC <- list_peak_wasp$H3K27ac_BC[[7]] 
list_peak_H3K27ac$Individual_8_BC <- list_peak_wasp$H3K27ac_BC[[8]] 
list_peak_H3K27ac$Individual_1_LP <- list_peak_wasp$H3K27ac_LP[[1]]
list_peak_H3K27ac$Individual_2_LP <- list_peak_wasp$H3K27ac_LP[[2]]
list_peak_H3K27ac$Individual_3_LP <- list_peak_wasp$H3K27ac_LP[[3]]
list_peak_H3K27ac$Individual_4_LP <- list_peak_wasp$H3K27ac_LP[[4]]
list_peak_H3K27ac$Individual_5_LP <- list_peak_wasp$H3K27ac_LP[[5]]
list_peak_H3K27ac$Individual_6_LP <- list_peak_wasp$H3K27ac_LP[[6]]
list_peak_H3K27ac$Individual_7_LP <- list_peak_wasp$H3K27ac_LP[[7]]
list_peak_H3K27ac$Individual_8_LP <- list_peak_wasp$H3K27ac_LP[[8]]
list_peak_H3K27ac$Individual_1_LC <- list_peak_wasp$H3K27ac_LC[[1]]
list_peak_H3K27ac$Individual_2_LC <- list_peak_wasp$H3K27ac_LC[[2]]
list_peak_H3K27ac$Individual_3_LC <- list_peak_wasp$H3K27ac_LC[[3]]
list_peak_H3K27ac$Individual_4_LC <- list_peak_wasp$H3K27ac_LC[[4]]
list_peak_H3K27ac$Individual_5_LC <- list_peak_wasp$H3K27ac_LC[[5]]
list_peak_H3K27ac$Individual_6_LC <- list_peak_wasp$H3K27ac_LC[[6]]
list_peak_H3K27ac$Individual_7_LC <- list_peak_wasp$H3K27ac_LC[[7]]
list_peak_H3K27ac$Individual_8_LC <- list_peak_wasp$H3K27ac_LC[[8]]
list_peak_H3K27ac$Individual_1_SC <- list_peak_wasp$H3K27ac_SC[[1]]
list_peak_H3K27ac$Individual_2_SC <- list_peak_wasp$H3K27ac_SC[[2]]
list_peak_H3K27ac$Individual_3_SC <- list_peak_wasp$H3K27ac_SC[[3]]
list_peak_H3K27ac$Individual_4_SC <- list_peak_wasp$H3K27ac_SC[[4]]
list_peak_H3K27ac$Individual_5_SC <- list_peak_wasp$H3K27ac_SC[[5]]
list_peak_H3K27ac$Individual_6_SC <- list_peak_wasp$H3K27ac_SC[[6]]
list_peak_H3K27ac$Individual_7_SC <- list_peak_wasp$H3K27ac_SC[[7]]
list_peak_H3K27ac$Individual_8_SC <- list_peak_wasp$H3K27ac_SC[[8]]

# Create new combos for all possible individual-celltypes
# Non-redundant pair combinations
individual_celltype_combos <- combn(names(list_peak_H3K27ac), 2) %>% t()

# Instantiate dataframe
cluster_matrix_long_individuals_celltypes <- data.frame()

# Test every combination of individuals for jaccard and build distances into a labelled dataframe
for (COMBINATION_ROW in 1:nrow(individual_celltype_combos)) {
  
  current_frame <- data.frame(sample1 = individual_celltype_combos[COMBINATION_ROW, 1],
                              sample2 = individual_celltype_combos[COMBINATION_ROW, 2],
                              jaccard_sim = jaccard_similarity(list_peak_H3K27ac[[individual_celltype_combos[COMBINATION_ROW, 1]]],
                                                               list_peak_H3K27ac[[individual_celltype_combos[COMBINATION_ROW, 2]]]))
  
  cluster_matrix_long_individuals_celltypes <- bind_rows(cluster_matrix_long_individuals_celltypes, current_frame)
    
}

# Add same sample matches
cluster_matrix_long_individuals_celltypes <- 
  cluster_matrix_long_individuals_celltypes %>% 
  bind_rows(data.frame(sample1 = names(list_peak_H3K27ac),
                       sample2 = names(list_peak_H3K27ac),
                       jaccard_sim = 1))

cluster_matrix_short_individuals_celltypes$H3K27ac <- 
  cluster_matrix_long_individuals_celltypes %>% 
  pivot_wider(names_from = sample2, values_from = jaccard_sim) %>% 
  column_to_rownames("sample1") %>% 
  relocate(32, 1:31) %>% 
  as.matrix()

# Create a distance matrix from long dataframe
cluster_matrix_short_individuals_celltypes$H3K27ac %>% 
  reshape2::melt(na.rm = TRUE) %>% 
  ggplot(aes(Var2, Var1, fill = value)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "white", 
                       high = "red", 
                       limit = c(0, 1), 
                       space = "Lab", 
                       name = "H3K27ac Peak\nJaccard Correlations") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, 
                                   size = 3, hjust = 1),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        panel.grid.major = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text.y = element_text(size = 3),
        legend.justification = c(1, 0),
        legend.position = c(0.6, 0.7),
        legend.direction = "horizontal") +
  coord_fixed() + 
  geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 1) +
  guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
                title.position = "top", title.hjust = 0.5))
ggsave("plots/heatmap_jaccard_individual_celltype_H3K27ac.png")
```

Jaccard cluster for H3K4me1
```{r}
# Create new object for H3K4me1 peaks organized by individual-celltype combo
list_peak_H3K4me1 <- GRangesList()

# Copy over corresponding GRanges
list_peak_H3K4me1$Individual_1_BC <- list_peak_wasp$H3K4me1_BC[[1]]
list_peak_H3K4me1$Individual_2_BC <- list_peak_wasp$H3K4me1_BC[[2]] 
list_peak_H3K4me1$Individual_3_BC <- list_peak_wasp$H3K4me1_BC[[3]] 
list_peak_H3K4me1$Individual_4_BC <- list_peak_wasp$H3K4me1_BC[[4]] 
list_peak_H3K4me1$Individual_5_BC <- list_peak_wasp$H3K4me1_BC[[5]] 
list_peak_H3K4me1$Individual_6_BC <- list_peak_wasp$H3K4me1_BC[[6]] 
list_peak_H3K4me1$Individual_7_BC <- list_peak_wasp$H3K4me1_BC[[7]] 
list_peak_H3K4me1$Individual_8_BC <- list_peak_wasp$H3K4me1_BC[[8]] 
list_peak_H3K4me1$Individual_1_LP <- list_peak_wasp$H3K4me1_LP[[1]]
list_peak_H3K4me1$Individual_2_LP <- list_peak_wasp$H3K4me1_LP[[2]]
list_peak_H3K4me1$Individual_3_LP <- list_peak_wasp$H3K4me1_LP[[3]]
list_peak_H3K4me1$Individual_4_LP <- list_peak_wasp$H3K4me1_LP[[4]]
list_peak_H3K4me1$Individual_5_LP <- list_peak_wasp$H3K4me1_LP[[5]]
list_peak_H3K4me1$Individual_6_LP <- list_peak_wasp$H3K4me1_LP[[6]]
list_peak_H3K4me1$Individual_7_LP <- list_peak_wasp$H3K4me1_LP[[7]]
list_peak_H3K4me1$Individual_8_LP <- list_peak_wasp$H3K4me1_LP[[8]]
list_peak_H3K4me1$Individual_1_LC <- list_peak_wasp$H3K4me1_LC[[1]]
list_peak_H3K4me1$Individual_2_LC <- list_peak_wasp$H3K4me1_LC[[2]]
list_peak_H3K4me1$Individual_3_LC <- list_peak_wasp$H3K4me1_LC[[3]]
list_peak_H3K4me1$Individual_4_LC <- list_peak_wasp$H3K4me1_LC[[4]]
list_peak_H3K4me1$Individual_5_LC <- list_peak_wasp$H3K4me1_LC[[5]]
list_peak_H3K4me1$Individual_6_LC <- list_peak_wasp$H3K4me1_LC[[6]]
list_peak_H3K4me1$Individual_7_LC <- list_peak_wasp$H3K4me1_LC[[7]]
list_peak_H3K4me1$Individual_8_LC <- list_peak_wasp$H3K4me1_LC[[8]]
list_peak_H3K4me1$Individual_1_SC <- list_peak_wasp$H3K4me1_SC[[1]]
list_peak_H3K4me1$Individual_2_SC <- list_peak_wasp$H3K4me1_SC[[2]]
list_peak_H3K4me1$Individual_3_SC <- list_peak_wasp$H3K4me1_SC[[3]]
list_peak_H3K4me1$Individual_4_SC <- list_peak_wasp$H3K4me1_SC[[4]]
list_peak_H3K4me1$Individual_5_SC <- list_peak_wasp$H3K4me1_SC[[5]]
list_peak_H3K4me1$Individual_6_SC <- list_peak_wasp$H3K4me1_SC[[6]]
list_peak_H3K4me1$Individual_7_SC <- list_peak_wasp$H3K4me1_SC[[7]]
list_peak_H3K4me1$Individual_8_SC <- list_peak_wasp$H3K4me1_SC[[8]]

# Create new combos for all possible individual-celltypes
# Non-redundant pair combinations
individual_celltype_combos <- combn(names(list_peak_H3K4me1), 2) %>% t()

# Instantiate dataframe
cluster_matrix_long_individuals_celltypes <- data.frame()

# Test every combination of individuals for jaccard and build distances into a labelled dataframe
for (COMBINATION_ROW in 1:nrow(individual_celltype_combos)) {
  
  current_frame <- data.frame(sample1 = individual_celltype_combos[COMBINATION_ROW, 1],
                              sample2 = individual_celltype_combos[COMBINATION_ROW, 2],
                              jaccard_sim = jaccard_similarity(list_peak_H3K4me1[[individual_celltype_combos[COMBINATION_ROW, 1]]],
                                                               list_peak_H3K4me1[[individual_celltype_combos[COMBINATION_ROW, 2]]]))
  
  cluster_matrix_long_individuals_celltypes <- bind_rows(cluster_matrix_long_individuals_celltypes, current_frame)
    
}

# Add same sample matches
cluster_matrix_long_individuals_celltypes <- 
  cluster_matrix_long_individuals_celltypes %>% 
  bind_rows(data.frame(sample1 = names(list_peak_H3K4me1),
                       sample2 = names(list_peak_H3K4me1),
                       jaccard_sim = 1))

cluster_matrix_short_individuals_celltypes$H3K4me1 <- 
  cluster_matrix_long_individuals_celltypes %>% 
  pivot_wider(names_from = sample2, values_from = jaccard_sim) %>% 
  column_to_rownames("sample1") %>% 
  relocate(32, 1:31) %>% 
  as.matrix()

# Create a distance matrix from long dataframe
cluster_matrix_short_individuals_celltypes$H3K4me1 %>% 
  reshape2::melt(na.rm = TRUE) %>% 
  ggplot(aes(Var2, Var1, fill = value)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "white", 
                       high = "red", 
                       limit = c(0, 1), 
                       space = "Lab", 
                       name = "H3K4me1 Peak\nJaccard Correlations") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, 
                                   size = 3, hjust = 1),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        panel.grid.major = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text.y = element_text(size = 3),
        legend.justification = c(1, 0),
        legend.position = c(0.6, 0.7),
        legend.direction = "horizontal") +
  coord_fixed() + 
  geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 1) +
  guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
                title.position = "top", title.hjust = 0.5))
ggsave("plots/heatmap_jaccard_individual_celltype_H3K4me1.png")
```

Jaccard cluster for H3K9me3
```{r}
# Create new object for H3K9me3 peaks organized by individual-celltype combo
list_peak_H3K9me3 <- GRangesList()

# Copy over corresponding GRanges
list_peak_H3K9me3$Individual_1_BC <- list_peak_wasp$H3K9me3_BC[[1]]
list_peak_H3K9me3$Individual_2_BC <- list_peak_wasp$H3K9me3_BC[[2]] 
list_peak_H3K9me3$Individual_3_BC <- list_peak_wasp$H3K9me3_BC[[3]] 
list_peak_H3K9me3$Individual_4_BC <- list_peak_wasp$H3K9me3_BC[[4]] 
list_peak_H3K9me3$Individual_5_BC <- list_peak_wasp$H3K9me3_BC[[5]] 
list_peak_H3K9me3$Individual_6_BC <- list_peak_wasp$H3K9me3_BC[[6]] 
list_peak_H3K9me3$Individual_7_BC <- list_peak_wasp$H3K9me3_BC[[7]] 
list_peak_H3K9me3$Individual_8_BC <- list_peak_wasp$H3K9me3_BC[[8]] 
list_peak_H3K9me3$Individual_1_LP <- list_peak_wasp$H3K9me3_LP[[1]]
list_peak_H3K9me3$Individual_2_LP <- list_peak_wasp$H3K9me3_LP[[2]]
list_peak_H3K9me3$Individual_3_LP <- list_peak_wasp$H3K9me3_LP[[3]]
list_peak_H3K9me3$Individual_4_LP <- list_peak_wasp$H3K9me3_LP[[4]]
list_peak_H3K9me3$Individual_5_LP <- list_peak_wasp$H3K9me3_LP[[5]]
list_peak_H3K9me3$Individual_6_LP <- list_peak_wasp$H3K9me3_LP[[6]]
list_peak_H3K9me3$Individual_7_LP <- list_peak_wasp$H3K9me3_LP[[7]]
list_peak_H3K9me3$Individual_8_LP <- list_peak_wasp$H3K9me3_LP[[8]]
list_peak_H3K9me3$Individual_1_LC <- list_peak_wasp$H3K9me3_LC[[1]]
list_peak_H3K9me3$Individual_2_LC <- list_peak_wasp$H3K9me3_LC[[2]]
list_peak_H3K9me3$Individual_3_LC <- list_peak_wasp$H3K9me3_LC[[3]]
list_peak_H3K9me3$Individual_4_LC <- list_peak_wasp$H3K9me3_LC[[4]]
list_peak_H3K9me3$Individual_5_LC <- list_peak_wasp$H3K9me3_LC[[5]]
list_peak_H3K9me3$Individual_6_LC <- list_peak_wasp$H3K9me3_LC[[6]]
list_peak_H3K9me3$Individual_7_LC <- list_peak_wasp$H3K9me3_LC[[7]]
list_peak_H3K9me3$Individual_8_LC <- list_peak_wasp$H3K9me3_LC[[8]]
list_peak_H3K9me3$Individual_1_SC <- list_peak_wasp$H3K9me3_SC[[1]]
list_peak_H3K9me3$Individual_2_SC <- list_peak_wasp$H3K9me3_SC[[2]]
list_peak_H3K9me3$Individual_3_SC <- list_peak_wasp$H3K9me3_SC[[3]]
list_peak_H3K9me3$Individual_4_SC <- list_peak_wasp$H3K9me3_SC[[4]]
list_peak_H3K9me3$Individual_5_SC <- list_peak_wasp$H3K9me3_SC[[5]]
list_peak_H3K9me3$Individual_6_SC <- list_peak_wasp$H3K9me3_SC[[6]]
list_peak_H3K9me3$Individual_7_SC <- list_peak_wasp$H3K9me3_SC[[7]]
list_peak_H3K9me3$Individual_8_SC <- list_peak_wasp$H3K9me3_SC[[8]]

# Create new combos for all possible individual-celltypes
# Non-redundant pair combinations
individual_celltype_combos <- combn(names(list_peak_H3K9me3), 2) %>% t()

# Instantiate dataframe
cluster_matrix_long_individuals_celltypes <- data.frame()

# Test every combination of individuals for jaccard and build distances into a labelled dataframe
for (COMBINATION_ROW in 1:nrow(individual_celltype_combos)) {
  
  current_frame <- data.frame(sample1 = individual_celltype_combos[COMBINATION_ROW, 1],
                              sample2 = individual_celltype_combos[COMBINATION_ROW, 2],
                              jaccard_sim = jaccard_similarity(list_peak_H3K9me3[[individual_celltype_combos[COMBINATION_ROW, 1]]],
                                                               list_peak_H3K9me3[[individual_celltype_combos[COMBINATION_ROW, 2]]]))
  
  cluster_matrix_long_individuals_celltypes <- bind_rows(cluster_matrix_long_individuals_celltypes, current_frame)
    
}

# Add same sample matches
cluster_matrix_long_individuals_celltypes <- 
  cluster_matrix_long_individuals_celltypes %>% 
  bind_rows(data.frame(sample1 = names(list_peak_H3K9me3),
                       sample2 = names(list_peak_H3K9me3),
                       jaccard_sim = 1))

cluster_matrix_short_individuals_celltypes$H3K9me3 <- 
  cluster_matrix_long_individuals_celltypes %>% 
  pivot_wider(names_from = sample2, values_from = jaccard_sim) %>% 
  column_to_rownames("sample1") %>% 
  relocate(32, 1:31) %>% 
  as.matrix()

# Create a distance matrix from long dataframe
cluster_matrix_short_individuals_celltypes$H3K9me3 %>% 
  reshape2::melt(na.rm = TRUE) %>% 
  ggplot(aes(Var2, Var1, fill = value)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "white", 
                       high = "red", 
                       limit = c(0, 1), 
                       space = "Lab", 
                       name = "H3K9me3 Peak\nJaccard Correlations") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, 
                                   size = 3, hjust = 1),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        panel.grid.major = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text.y = element_text(size = 3),
        legend.justification = c(1, 0),
        legend.position = c(0.6, 0.7),
        legend.direction = "horizontal") +
  coord_fixed() + 
  geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 1) +
  guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
                title.position = "top", title.hjust = 0.5))
ggsave("plots/heatmap_jaccard_individual_celltype_H3K9me3.png")
```

Jaccard cluster for H3K27me3
```{r}
# Create new object for H3K27me3 peaks organized by individual-celltype combo
list_peak_H3K27me3 <- GRangesList()

# Copy over corresponding GRanges
list_peak_H3K27me3$Individual_1_BC <- list_peak_wasp$H3K27me3_BC[[1]]
list_peak_H3K27me3$Individual_2_BC <- list_peak_wasp$H3K27me3_BC[[2]] 
list_peak_H3K27me3$Individual_3_BC <- list_peak_wasp$H3K27me3_BC[[3]] 
list_peak_H3K27me3$Individual_4_BC <- list_peak_wasp$H3K27me3_BC[[4]] 
list_peak_H3K27me3$Individual_5_BC <- list_peak_wasp$H3K27me3_BC[[5]] 
list_peak_H3K27me3$Individual_6_BC <- list_peak_wasp$H3K27me3_BC[[6]] 
list_peak_H3K27me3$Individual_7_BC <- list_peak_wasp$H3K27me3_BC[[7]] 
list_peak_H3K27me3$Individual_8_BC <- list_peak_wasp$H3K27me3_BC[[8]] 
list_peak_H3K27me3$Individual_1_LP <- list_peak_wasp$H3K27me3_LP[[1]]
list_peak_H3K27me3$Individual_2_LP <- list_peak_wasp$H3K27me3_LP[[2]]
list_peak_H3K27me3$Individual_3_LP <- list_peak_wasp$H3K27me3_LP[[3]]
list_peak_H3K27me3$Individual_4_LP <- list_peak_wasp$H3K27me3_LP[[4]]
list_peak_H3K27me3$Individual_5_LP <- list_peak_wasp$H3K27me3_LP[[5]]
list_peak_H3K27me3$Individual_6_LP <- list_peak_wasp$H3K27me3_LP[[6]]
list_peak_H3K27me3$Individual_7_LP <- list_peak_wasp$H3K27me3_LP[[7]]
list_peak_H3K27me3$Individual_8_LP <- list_peak_wasp$H3K27me3_LP[[8]]
list_peak_H3K27me3$Individual_1_LC <- list_peak_wasp$H3K27me3_LC[[1]]
list_peak_H3K27me3$Individual_2_LC <- list_peak_wasp$H3K27me3_LC[[2]]
list_peak_H3K27me3$Individual_3_LC <- list_peak_wasp$H3K27me3_LC[[3]]
list_peak_H3K27me3$Individual_4_LC <- list_peak_wasp$H3K27me3_LC[[4]]
list_peak_H3K27me3$Individual_5_LC <- list_peak_wasp$H3K27me3_LC[[5]]
list_peak_H3K27me3$Individual_6_LC <- list_peak_wasp$H3K27me3_LC[[6]]
list_peak_H3K27me3$Individual_7_LC <- list_peak_wasp$H3K27me3_LC[[7]]
list_peak_H3K27me3$Individual_8_LC <- list_peak_wasp$H3K27me3_LC[[8]]
list_peak_H3K27me3$Individual_1_SC <- list_peak_wasp$H3K27me3_SC[[1]]
list_peak_H3K27me3$Individual_2_SC <- list_peak_wasp$H3K27me3_SC[[2]]
list_peak_H3K27me3$Individual_3_SC <- list_peak_wasp$H3K27me3_SC[[3]]
list_peak_H3K27me3$Individual_4_SC <- list_peak_wasp$H3K27me3_SC[[4]]
list_peak_H3K27me3$Individual_5_SC <- list_peak_wasp$H3K27me3_SC[[5]]
list_peak_H3K27me3$Individual_6_SC <- list_peak_wasp$H3K27me3_SC[[6]]
list_peak_H3K27me3$Individual_7_SC <- list_peak_wasp$H3K27me3_SC[[7]]
list_peak_H3K27me3$Individual_8_SC <- list_peak_wasp$H3K27me3_SC[[8]]

# Create new combos for all possible individual-celltypes
# Non-redundant pair combinations
individual_celltype_combos <- combn(names(list_peak_H3K27me3), 2) %>% t()

# Instantiate dataframe
cluster_matrix_long_individuals_celltypes <- data.frame()

# Test every combination of individuals for jaccard and build distances into a labelled dataframe
for (COMBINATION_ROW in 1:nrow(individual_celltype_combos)) {
  
  current_frame <- data.frame(sample1 = individual_celltype_combos[COMBINATION_ROW, 1],
                              sample2 = individual_celltype_combos[COMBINATION_ROW, 2],
                              jaccard_sim = jaccard_similarity(list_peak_H3K27me3[[individual_celltype_combos[COMBINATION_ROW, 1]]],
                                                               list_peak_H3K27me3[[individual_celltype_combos[COMBINATION_ROW, 2]]]))
  
  cluster_matrix_long_individuals_celltypes <- bind_rows(cluster_matrix_long_individuals_celltypes, current_frame)
    
}

# Add same sample matches
cluster_matrix_long_individuals_celltypes <- 
  cluster_matrix_long_individuals_celltypes %>% 
  bind_rows(data.frame(sample1 = names(list_peak_H3K27me3),
                       sample2 = names(list_peak_H3K27me3),
                       jaccard_sim = 1))

cluster_matrix_short_individuals_celltypes$H3K27me3 <- 
  cluster_matrix_long_individuals_celltypes %>% 
  pivot_wider(names_from = sample2, values_from = jaccard_sim) %>% 
  column_to_rownames("sample1") %>% 
  relocate(32, 1:31) %>% 
  as.matrix()

# Create a distance matrix from long dataframe
cluster_matrix_short_individuals_celltypes$H3K27me3 %>% 
  reshape2::melt(na.rm = TRUE) %>% 
  ggplot(aes(Var2, Var1, fill = value)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "white", 
                       high = "red", 
                       limit = c(0, 1), 
                       space = "Lab", 
                       name = "H3K27me3 Peak\nJaccard Correlations") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, 
                                   size = 3, hjust = 1),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        panel.grid.major = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text.y = element_text(size = 3),
        legend.justification = c(1, 0),
        legend.position = c(0.6, 0.7),
        legend.direction = "horizontal") +
  coord_fixed() + 
  geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 1) +
  guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
                title.position = "top", title.hjust = 0.5))
ggsave("plots/heatmap_jaccard_individual_celltype_H3K27me3.png")
```

Jaccard cluster for H3K36me3
```{r}
# Create new object for H3K36me3 peaks organized by individual-celltype combo
list_peak_H3K36me3 <- GRangesList()

# Copy over corresponding GRanges
list_peak_H3K36me3$Individual_1_BC <- list_peak_wasp$H3K36me3_BC[[1]]
list_peak_H3K36me3$Individual_2_BC <- list_peak_wasp$H3K36me3_BC[[2]] 
list_peak_H3K36me3$Individual_3_BC <- list_peak_wasp$H3K36me3_BC[[3]] 
list_peak_H3K36me3$Individual_4_BC <- list_peak_wasp$H3K36me3_BC[[4]] 
list_peak_H3K36me3$Individual_5_BC <- list_peak_wasp$H3K36me3_BC[[5]] 
list_peak_H3K36me3$Individual_6_BC <- list_peak_wasp$H3K36me3_BC[[6]] 
list_peak_H3K36me3$Individual_7_BC <- list_peak_wasp$H3K36me3_BC[[7]] 
list_peak_H3K36me3$Individual_8_BC <- list_peak_wasp$H3K36me3_BC[[8]] 
list_peak_H3K36me3$Individual_1_LP <- list_peak_wasp$H3K36me3_LP[[1]]
list_peak_H3K36me3$Individual_2_LP <- list_peak_wasp$H3K36me3_LP[[2]]
list_peak_H3K36me3$Individual_3_LP <- list_peak_wasp$H3K36me3_LP[[3]]
list_peak_H3K36me3$Individual_4_LP <- list_peak_wasp$H3K36me3_LP[[4]]
list_peak_H3K36me3$Individual_5_LP <- list_peak_wasp$H3K36me3_LP[[5]]
list_peak_H3K36me3$Individual_6_LP <- list_peak_wasp$H3K36me3_LP[[6]]
list_peak_H3K36me3$Individual_7_LP <- list_peak_wasp$H3K36me3_LP[[7]]
list_peak_H3K36me3$Individual_8_LP <- list_peak_wasp$H3K36me3_LP[[8]]
list_peak_H3K36me3$Individual_1_LC <- list_peak_wasp$H3K36me3_LC[[1]]
list_peak_H3K36me3$Individual_2_LC <- list_peak_wasp$H3K36me3_LC[[2]]
list_peak_H3K36me3$Individual_3_LC <- list_peak_wasp$H3K36me3_LC[[3]]
list_peak_H3K36me3$Individual_4_LC <- list_peak_wasp$H3K36me3_LC[[4]]
list_peak_H3K36me3$Individual_5_LC <- list_peak_wasp$H3K36me3_LC[[5]]
list_peak_H3K36me3$Individual_6_LC <- list_peak_wasp$H3K36me3_LC[[6]]
list_peak_H3K36me3$Individual_7_LC <- list_peak_wasp$H3K36me3_LC[[7]]
list_peak_H3K36me3$Individual_8_LC <- list_peak_wasp$H3K36me3_LC[[8]]
list_peak_H3K36me3$Individual_1_SC <- list_peak_wasp$H3K36me3_SC[[1]]
list_peak_H3K36me3$Individual_2_SC <- list_peak_wasp$H3K36me3_SC[[2]]
list_peak_H3K36me3$Individual_3_SC <- list_peak_wasp$H3K36me3_SC[[3]]
list_peak_H3K36me3$Individual_4_SC <- list_peak_wasp$H3K36me3_SC[[4]]
list_peak_H3K36me3$Individual_5_SC <- list_peak_wasp$H3K36me3_SC[[5]]
list_peak_H3K36me3$Individual_6_SC <- list_peak_wasp$H3K36me3_SC[[6]]
list_peak_H3K36me3$Individual_7_SC <- list_peak_wasp$H3K36me3_SC[[7]]
list_peak_H3K36me3$Individual_8_SC <- list_peak_wasp$H3K36me3_SC[[8]]

# Create new combos for all possible individual-celltypes
# Non-redundant pair combinations
individual_celltype_combos <- combn(names(list_peak_H3K36me3), 2) %>% t()

# Instantiate dataframe
cluster_matrix_long_individuals_celltypes <- data.frame()

# Test every combination of individuals for jaccard and build distances into a labelled dataframe
for (COMBINATION_ROW in 1:nrow(individual_celltype_combos)) {
  
  current_frame <- data.frame(sample1 = individual_celltype_combos[COMBINATION_ROW, 1],
                              sample2 = individual_celltype_combos[COMBINATION_ROW, 2],
                              jaccard_sim = jaccard_similarity(list_peak_H3K36me3[[individual_celltype_combos[COMBINATION_ROW, 1]]],
                                                               list_peak_H3K36me3[[individual_celltype_combos[COMBINATION_ROW, 2]]]))
  
  cluster_matrix_long_individuals_celltypes <- bind_rows(cluster_matrix_long_individuals_celltypes, current_frame)
    
}

# Add same sample matches
cluster_matrix_long_individuals_celltypes <- 
  cluster_matrix_long_individuals_celltypes %>% 
  bind_rows(data.frame(sample1 = names(list_peak_H3K36me3),
                       sample2 = names(list_peak_H3K36me3),
                       jaccard_sim = 1))

cluster_matrix_short_individuals_celltypes$H3K36me3 <- 
  cluster_matrix_long_individuals_celltypes %>% 
  pivot_wider(names_from = sample2, values_from = jaccard_sim) %>% 
  column_to_rownames("sample1") %>% 
  relocate(32, 1:31) %>% 
  as.matrix()

# Create a distance matrix from long dataframe
cluster_matrix_short_individuals_celltypes$H3K36me3 %>% 
  reshape2::melt(na.rm = TRUE) %>% 
  ggplot(aes(Var2, Var1, fill = value)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "white", 
                       high = "red", 
                       limit = c(0, 1), 
                       space = "Lab", 
                       name = "H3K36me3 Peak\nJaccard Correlations") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, 
                                   size = 3, hjust = 1),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        panel.grid.major = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text.y = element_text(size = 3),
        legend.justification = c(1, 0),
        legend.position = c(0.6, 0.7),
        legend.direction = "horizontal") +
  coord_fixed() + 
  geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 1) +
  guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
                title.position = "top", title.hjust = 0.5))
ggsave("plots/heatmap_jaccard_individual_celltype_H3K36me3.png")
```

=================================================================================================================================================================================

Read in ENCODE ChIP blacklist
```{r}
blacklist_encode <- read_bed("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/genome_data/blacklists/hg38-blacklist.v2.bed")
```

Create function to calculate Pearson/Spearman correlations on bigWigs IN UNION(PEAK1, PEAK2)
```{r}
granges_peak_cor <- function(bw1_path, bw2_path, peaks1_gr, peaks2_gr, blacklist_regions_gr = NULL, cor_method = c("pearson", "kendall", "spearman"), tile_widths = 50) {
  
  # Read in bigWigs
  bw1 <- read_bigwig(bw1_path)
  bw2 <- read_bigwig(bw2_path)
  
  # Get peak union valid ranges with or without blacklist
  if (is.null(blacklist_regions_gr)) {
    peak_valid_union_ranges <- 
      union_ranges(peaks1_gr, peaks2_gr) %>% 
      keepSeqlevels(const_canonical_chromosomes, pruning.mode = "coarse")
  } else {
    peak_valid_union_ranges <- 
      union_ranges(peaks1_gr, peaks2_gr) %>% 
      setdiff_ranges(blacklist_regions_gr) %>% 
      keepSeqlevels(const_canonical_chromosomes, pruning.mode = "coarse")
  }
  
  # Create peak tiles of x basepairs in width within the valid ranges
  # Generate unique ID for each 50bp range
  peaks_tiles <- 
    peak_valid_union_ranges %>% 
    tile_ranges(width = tile_widths) %>% 
    plyranges::mutate(tile_id = str_c("tile_", seq_along(.)))
  
  # Take bigWig
  # Subset by valid peak ranges and break these subsets up into single basepair regions with the score annotated
  # Remove non-canonical chromosomes
  # Annotate with the unique tile ids that are x-basepairs wide
  # Convert to tibble to group by tile_id faster, then group and summarize mean of bigWig scores by tile_id that are x-basepairs wide
  bw1_peak_areas_tiled_summarized <- 
    bw1 %>% 
    join_overlap_intersect(peak_valid_union_ranges %>% tile_ranges(width = 1)) %>% 
    keepSeqlevels(const_canonical_chromosomes, pruning.mode = "coarse") %>% 
    join_overlap_left(peaks_tiles) %>% 
    as_tibble() %>% 
    group_by(tile_id) %>% 
    summarize(mean_pileup_depth = mean(score))
  
  # Repeat above for bw2
  bw2_peak_areas_tiled_summarized <- 
    bw2 %>% 
    join_overlap_intersect(peak_valid_union_ranges %>% tile_ranges(width = 1)) %>% 
    keepSeqlevels(const_canonical_chromosomes, pruning.mode = "coarse") %>% 
    join_overlap_left(peaks_tiles) %>% 
    as_tibble() %>% 
    group_by(tile_id) %>% 
    summarize(mean_pileup_depth = mean(score))
  
  # Clean up large files
  rm(bw1, bw2)
  
  # Return correlation of mean scores vector of x-basepair windows of two bigWigs
  cor(bw1_peak_areas_tiled_summarized$mean_pileup_depth,
      bw2_peak_areas_tiled_summarized$mean_pileup_depth,
      method = cor_method)
}

```

Create function to calculate Pearson/Spearman correlations on bigWigs IN PROMOTERS
```{r}
granges_promoter_chr22_cor <- function(bw1_path, bw2_path, promoters, blacklist_regions_gr = NULL, cor_method = c("pearson", "kendall", "spearman"), tile_widths = 50) {
  
  # Read in bigWigs
  bw1 <- read_bigwig(bw1_path)
  bw2 <- read_bigwig(bw2_path)
  
  # Get peak union valid ranges with or without blacklist
  if (is.null(blacklist_regions_gr)) {
    peak_valid_union_ranges <- 
      promoters %>% 
      keepSeqlevels("chr22", pruning.mode = "coarse")
  } else {
    peak_valid_union_ranges <- 
      promoters %>% 
      setdiff_ranges(blacklist_regions_gr) %>% 
      keepSeqlevels("chr22", pruning.mode = "coarse")
  }
  
  # Create peak tiles of x basepairs in width within the valid ranges
  # Generate unique ID for each 50bp range
  peaks_tiles <- 
    peak_valid_union_ranges %>% 
    tile_ranges(width = tile_widths) %>% 
    plyranges::mutate(tile_id = str_c("tile_", seq_along(.)))
  
  # Take bigWig
  # Subset by valid peak ranges and break these subsets up into single basepair regions with the score annotated
  # Remove non-canonical chromosomes
  # Annotate with the unique tile ids that are x-basepairs wide
  # Convert to tibble to group by tile_id faster, then group and summarize mean of bigWig scores by tile_id that are x-basepairs wide
  bw1_peak_areas_tiled_summarized <- 
    bw1 %>% 
    join_overlap_intersect(peak_valid_union_ranges %>% tile_ranges(width = 1)) %>% 
    keepSeqlevels(const_canonical_chromosomes, pruning.mode = "coarse") %>% 
    join_overlap_left(peaks_tiles) %>% 
    as_tibble() %>% 
    group_by(tile_id) %>% 
    summarize(mean_pileup_depth = mean(score))
  
  # Repeat above for bw2
  bw2_peak_areas_tiled_summarized <- 
    bw2 %>% 
    join_overlap_intersect(peak_valid_union_ranges %>% tile_ranges(width = 1)) %>% 
    keepSeqlevels(const_canonical_chromosomes, pruning.mode = "coarse") %>% 
    join_overlap_left(peaks_tiles) %>% 
    as_tibble() %>% 
    group_by(tile_id) %>% 
    summarize(mean_pileup_depth = mean(score))
  
  # Clean up large files
  rm(bw1, bw2)
  
  # Return correlation of mean scores vector of x-basepair windows of two bigWigs
  cor(bw1_peak_areas_tiled_summarized$mean_pileup_depth,
      bw2_peak_areas_tiled_summarized$mean_pileup_depth,
      method = cor_method)
}

```

=====================================================================================================================================================================
H3K4me3 Peaks Spearman
```{r}
# Create new object for H3K4me3 peaks organized by individual-celltype combo
list_treat_pileup_bw_wasp_files_H3K4me3 <- list()

# Copy over corresponding GRanges
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_1_BC <- list_treat_pileup_bw_wasp_files$H3K4me3_BC[[1]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_2_BC <- list_treat_pileup_bw_wasp_files$H3K4me3_BC[[2]] 
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_3_BC <- list_treat_pileup_bw_wasp_files$H3K4me3_BC[[3]] 
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_4_BC <- list_treat_pileup_bw_wasp_files$H3K4me3_BC[[4]] 
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_5_BC <- list_treat_pileup_bw_wasp_files$H3K4me3_BC[[5]] 
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_6_BC <- list_treat_pileup_bw_wasp_files$H3K4me3_BC[[6]] 
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_7_BC <- list_treat_pileup_bw_wasp_files$H3K4me3_BC[[7]] 
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_8_BC <- list_treat_pileup_bw_wasp_files$H3K4me3_BC[[8]] 
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_1_LP <- list_treat_pileup_bw_wasp_files$H3K4me3_LP[[1]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_2_LP <- list_treat_pileup_bw_wasp_files$H3K4me3_LP[[2]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_3_LP <- list_treat_pileup_bw_wasp_files$H3K4me3_LP[[3]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_4_LP <- list_treat_pileup_bw_wasp_files$H3K4me3_LP[[4]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_5_LP <- list_treat_pileup_bw_wasp_files$H3K4me3_LP[[5]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_6_LP <- list_treat_pileup_bw_wasp_files$H3K4me3_LP[[6]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_7_LP <- list_treat_pileup_bw_wasp_files$H3K4me3_LP[[7]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_8_LP <- list_treat_pileup_bw_wasp_files$H3K4me3_LP[[8]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_1_LC <- list_treat_pileup_bw_wasp_files$H3K4me3_LC[[1]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_2_LC <- list_treat_pileup_bw_wasp_files$H3K4me3_LC[[2]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_3_LC <- list_treat_pileup_bw_wasp_files$H3K4me3_LC[[3]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_4_LC <- list_treat_pileup_bw_wasp_files$H3K4me3_LC[[4]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_5_LC <- list_treat_pileup_bw_wasp_files$H3K4me3_LC[[5]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_6_LC <- list_treat_pileup_bw_wasp_files$H3K4me3_LC[[6]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_7_LC <- list_treat_pileup_bw_wasp_files$H3K4me3_LC[[7]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_8_LC <- list_treat_pileup_bw_wasp_files$H3K4me3_LC[[8]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_1_SC <- list_treat_pileup_bw_wasp_files$H3K4me3_SC[[1]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_2_SC <- list_treat_pileup_bw_wasp_files$H3K4me3_SC[[2]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_3_SC <- list_treat_pileup_bw_wasp_files$H3K4me3_SC[[3]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_4_SC <- list_treat_pileup_bw_wasp_files$H3K4me3_SC[[4]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_5_SC <- list_treat_pileup_bw_wasp_files$H3K4me3_SC[[5]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_6_SC <- list_treat_pileup_bw_wasp_files$H3K4me3_SC[[6]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_7_SC <- list_treat_pileup_bw_wasp_files$H3K4me3_SC[[7]]
list_treat_pileup_bw_wasp_files_H3K4me3$Individual_8_SC <- list_treat_pileup_bw_wasp_files$H3K4me3_SC[[8]]

# Create new combos for all possible individual-celltypes
# Non-redundant pair combinations
individual_celltype_combos <- combn(names(list_treat_pileup_bw_wasp_files_H3K4me3), 2) %>% t()

# Instantiate dataframes
cluster_matrix_long_individuals_celltypes_spearman_H3K4me3 <- data.frame()
cluster_matrix_short_individuals_celltypes_spearman_H3K4me3 <- list()

# Test every combination of individuals for jaccard and build distances into a labelled dataframe
for (COMBINATION_ROW in 1:nrow(individual_celltype_combos)) {
    
    current_frame <- data.frame(sample1 = individual_celltype_combos[COMBINATION_ROW, 1],
                                sample2 = individual_celltype_combos[COMBINATION_ROW, 2],
                                correlation = granges_peak_cor(list_treat_pileup_bw_wasp_files_H3K4me3[[individual_celltype_combos[COMBINATION_ROW, 1]]],
                                                               list_treat_pileup_bw_wasp_files_H3K4me3[[individual_celltype_combos[COMBINATION_ROW, 2]]],
                                                               list_peak_H3K4me3[[individual_celltype_combos[COMBINATION_ROW, 1]]],
                                                               list_peak_H3K4me3[[individual_celltype_combos[COMBINATION_ROW, 2]]],
                                                               blacklist_regions_gr = blacklist_encode,
                                                               cor_method = "spearman",
                                                               tile_widths = 50))
    
    cluster_matrix_long_individuals_celltypes_spearman_H3K4me3 <- bind_rows(cluster_matrix_long_individuals_celltypes_spearman_H3K4me3, current_frame)
    
    # Show progress
    message(str_c(current_frame[1,1], current_frame[1,2], current_frame[1,3], sep = " "))
    
}

# Add same sample matches
cluster_matrix_long_individuals_celltypes_spearman_H3K4me3 <- 
    cluster_matrix_long_individuals_celltypes_spearman_H3K4me3 %>% 
    bind_rows(data.frame(sample1 = names(list_peak_H3K4me3),
                         sample2 = names(list_peak_H3K4me3),
                         correlation = 1))

cluster_matrix_short_individuals_celltypes_spearman_H3K4me3 <- 
    cluster_matrix_long_individuals_celltypes_spearman_H3K4me3 %>% 
    pivot_wider(names_from = sample2, values_from = correlation) %>% 
    column_to_rownames("sample1") %>% 
    relocate(32, 1:31) %>% 
    as.matrix()

# Create a distance matrix from long dataframe
cluster_matrix_short_individuals_celltypes_spearman_H3K4me3 %>% 
    reshape2::melt(na.rm = TRUE) %>% 
    ggplot(aes(Var2, Var1, fill = value)) +
    geom_tile(color = "white") +
    scale_fill_gradient2(low = "blue",
                         mid = "white",
                         high = "red", 
                         limit = c(-1, 1), 
                         space = "Lab", 
                         name = "H3K4me3 Peak\nSpearman Correlations") +
    theme(axis.text.x = element_text(angle = 45, vjust = 1, 
                                     size = 3, hjust = 1),
          axis.title.x = element_blank(),
          axis.title.y = element_blank(),
          panel.grid.major = element_blank(),
          panel.border = element_blank(),
          panel.background = element_blank(),
          axis.ticks = element_blank(),
          axis.text.y = element_text(size = 3),
          legend.justification = c(1, 0),
          legend.position = c(0.6, 0.7),
          legend.direction = "horizontal") +
    coord_fixed() + 
    geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 1) +
    guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
                                 title.position = "top", title.hjust = 0.5))
ggsave("plots/heatmap_spearman_individual_celltype_H3K4me3_peaks.png")
```

H3K27ac Peaks Spearman
```{r}
# Create new object for H3K27ac peaks organized by individual-celltype combo
list_treat_pileup_bw_wasp_files_H3K27ac <- list()

# Copy over corresponding GRanges
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_1_BC <- list_treat_pileup_bw_wasp_files$H3K27ac_BC[[1]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_2_BC <- list_treat_pileup_bw_wasp_files$H3K27ac_BC[[2]] 
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_3_BC <- list_treat_pileup_bw_wasp_files$H3K27ac_BC[[3]] 
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_4_BC <- list_treat_pileup_bw_wasp_files$H3K27ac_BC[[4]] 
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_5_BC <- list_treat_pileup_bw_wasp_files$H3K27ac_BC[[5]] 
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_6_BC <- list_treat_pileup_bw_wasp_files$H3K27ac_BC[[6]] 
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_7_BC <- list_treat_pileup_bw_wasp_files$H3K27ac_BC[[7]] 
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_8_BC <- list_treat_pileup_bw_wasp_files$H3K27ac_BC[[8]] 
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_1_LP <- list_treat_pileup_bw_wasp_files$H3K27ac_LP[[1]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_2_LP <- list_treat_pileup_bw_wasp_files$H3K27ac_LP[[2]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_3_LP <- list_treat_pileup_bw_wasp_files$H3K27ac_LP[[3]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_4_LP <- list_treat_pileup_bw_wasp_files$H3K27ac_LP[[4]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_5_LP <- list_treat_pileup_bw_wasp_files$H3K27ac_LP[[5]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_6_LP <- list_treat_pileup_bw_wasp_files$H3K27ac_LP[[6]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_7_LP <- list_treat_pileup_bw_wasp_files$H3K27ac_LP[[7]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_8_LP <- list_treat_pileup_bw_wasp_files$H3K27ac_LP[[8]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_1_LC <- list_treat_pileup_bw_wasp_files$H3K27ac_LC[[1]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_2_LC <- list_treat_pileup_bw_wasp_files$H3K27ac_LC[[2]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_3_LC <- list_treat_pileup_bw_wasp_files$H3K27ac_LC[[3]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_4_LC <- list_treat_pileup_bw_wasp_files$H3K27ac_LC[[4]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_5_LC <- list_treat_pileup_bw_wasp_files$H3K27ac_LC[[5]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_6_LC <- list_treat_pileup_bw_wasp_files$H3K27ac_LC[[6]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_7_LC <- list_treat_pileup_bw_wasp_files$H3K27ac_LC[[7]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_8_LC <- list_treat_pileup_bw_wasp_files$H3K27ac_LC[[8]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_1_SC <- list_treat_pileup_bw_wasp_files$H3K27ac_SC[[1]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_2_SC <- list_treat_pileup_bw_wasp_files$H3K27ac_SC[[2]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_3_SC <- list_treat_pileup_bw_wasp_files$H3K27ac_SC[[3]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_4_SC <- list_treat_pileup_bw_wasp_files$H3K27ac_SC[[4]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_5_SC <- list_treat_pileup_bw_wasp_files$H3K27ac_SC[[5]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_6_SC <- list_treat_pileup_bw_wasp_files$H3K27ac_SC[[6]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_7_SC <- list_treat_pileup_bw_wasp_files$H3K27ac_SC[[7]]
list_treat_pileup_bw_wasp_files_H3K27ac$Individual_8_SC <- list_treat_pileup_bw_wasp_files$H3K27ac_SC[[8]]

# Create new combos for all possible individual-celltypes
# Non-redundant pair combinations
individual_celltype_combos <- combn(names(list_treat_pileup_bw_wasp_files_H3K27ac), 2) %>% t()

# Instantiate dataframes
cluster_matrix_long_individuals_celltypes_spearman_H3K27ac <- data.frame()
cluster_matrix_short_individuals_celltypes_spearman_H3K27ac <- list()

# Test every combination of individuals for jaccard and build distances into a labelled dataframe
for (COMBINATION_ROW in 1:nrow(individual_celltype_combos)) {
  
  current_frame <- data.frame(sample1 = individual_celltype_combos[COMBINATION_ROW, 1],
                              sample2 = individual_celltype_combos[COMBINATION_ROW, 2],
                              correlation = granges_peak_cor(list_treat_pileup_bw_wasp_files_H3K27ac[[individual_celltype_combos[COMBINATION_ROW, 1]]],
                                                             list_treat_pileup_bw_wasp_files_H3K27ac[[individual_celltype_combos[COMBINATION_ROW, 2]]],
                                                             list_peak_H3K27ac[[individual_celltype_combos[COMBINATION_ROW, 1]]],
                                                             list_peak_H3K27ac[[individual_celltype_combos[COMBINATION_ROW, 2]]],
                                                             blacklist_regions_gr = blacklist_encode,
                                                             cor_method = "spearman",
                                                             tile_widths = 50))
  
  cluster_matrix_long_individuals_celltypes_spearman_H3K27ac <- bind_rows(cluster_matrix_long_individuals_celltypes_spearman_H3K27ac, current_frame)
  
  # Show progress
  message(str_c(current_frame[1,1], current_frame[1,2], current_frame[1,3], sep = " "))
    
}

# Add same sample matches
cluster_matrix_long_individuals_celltypes_spearman_H3K27ac <- 
  cluster_matrix_long_individuals_celltypes_spearman_H3K27ac %>% 
  bind_rows(data.frame(sample1 = names(list_peak_H3K4me3),
                       sample2 = names(list_peak_H3K4me3),
                       correlation = 1))

cluster_matrix_short_individuals_celltypes_spearman_H3K27ac <- 
  cluster_matrix_long_individuals_celltypes_spearman_H3K27ac %>% 
  pivot_wider(names_from = sample2, values_from = correlation) %>% 
  column_to_rownames("sample1") %>% 
  relocate(32, 1:31) %>% 
  as.matrix()

# Create a distance matrix from long dataframe
cluster_matrix_short_individuals_celltypes_spearman_H3K27ac %>% 
  reshape2::melt(na.rm = TRUE) %>% 
  ggplot(aes(Var2, Var1, fill = value)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "blue",
                       mid = "white",
                       high = "red", 
                       limit = c(-1, 1), 
                       space = "Lab", 
                       name = "H3K27ac Peak\nSpearman Correlations") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, 
                                   size = 3, hjust = 1),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        panel.grid.major = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text.y = element_text(size = 3),
        legend.justification = c(1, 0),
        legend.position = c(0.6, 0.7),
        legend.direction = "horizontal") +
  coord_fixed() + 
  geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 1) +
  guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
                title.position = "top", title.hjust = 0.5))
ggsave("plots/heatmap_spearman_individual_celltype_H3K27ac_peaks.png")

```

H3K4me1 Peaks Spearman
```{r}
# Create new object for H3K4me1 peaks organized by individual-celltype combo
list_treat_pileup_bw_wasp_files_H3K4me1 <- list()

# Copy over corresponding GRanges
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_1_BC <- list_treat_pileup_bw_wasp_files$H3K4me1_BC[[1]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_2_BC <- list_treat_pileup_bw_wasp_files$H3K4me1_BC[[2]] 
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_3_BC <- list_treat_pileup_bw_wasp_files$H3K4me1_BC[[3]] 
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_4_BC <- list_treat_pileup_bw_wasp_files$H3K4me1_BC[[4]] 
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_5_BC <- list_treat_pileup_bw_wasp_files$H3K4me1_BC[[5]] 
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_6_BC <- list_treat_pileup_bw_wasp_files$H3K4me1_BC[[6]] 
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_7_BC <- list_treat_pileup_bw_wasp_files$H3K4me1_BC[[7]] 
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_8_BC <- list_treat_pileup_bw_wasp_files$H3K4me1_BC[[8]] 
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_1_LP <- list_treat_pileup_bw_wasp_files$H3K4me1_LP[[1]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_2_LP <- list_treat_pileup_bw_wasp_files$H3K4me1_LP[[2]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_3_LP <- list_treat_pileup_bw_wasp_files$H3K4me1_LP[[3]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_4_LP <- list_treat_pileup_bw_wasp_files$H3K4me1_LP[[4]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_5_LP <- list_treat_pileup_bw_wasp_files$H3K4me1_LP[[5]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_6_LP <- list_treat_pileup_bw_wasp_files$H3K4me1_LP[[6]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_7_LP <- list_treat_pileup_bw_wasp_files$H3K4me1_LP[[7]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_8_LP <- list_treat_pileup_bw_wasp_files$H3K4me1_LP[[8]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_1_LC <- list_treat_pileup_bw_wasp_files$H3K4me1_LC[[1]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_2_LC <- list_treat_pileup_bw_wasp_files$H3K4me1_LC[[2]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_3_LC <- list_treat_pileup_bw_wasp_files$H3K4me1_LC[[3]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_4_LC <- list_treat_pileup_bw_wasp_files$H3K4me1_LC[[4]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_5_LC <- list_treat_pileup_bw_wasp_files$H3K4me1_LC[[5]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_6_LC <- list_treat_pileup_bw_wasp_files$H3K4me1_LC[[6]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_7_LC <- list_treat_pileup_bw_wasp_files$H3K4me1_LC[[7]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_8_LC <- list_treat_pileup_bw_wasp_files$H3K4me1_LC[[8]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_1_SC <- list_treat_pileup_bw_wasp_files$H3K4me1_SC[[1]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_2_SC <- list_treat_pileup_bw_wasp_files$H3K4me1_SC[[2]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_3_SC <- list_treat_pileup_bw_wasp_files$H3K4me1_SC[[3]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_4_SC <- list_treat_pileup_bw_wasp_files$H3K4me1_SC[[4]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_5_SC <- list_treat_pileup_bw_wasp_files$H3K4me1_SC[[5]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_6_SC <- list_treat_pileup_bw_wasp_files$H3K4me1_SC[[6]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_7_SC <- list_treat_pileup_bw_wasp_files$H3K4me1_SC[[7]]
list_treat_pileup_bw_wasp_files_H3K4me1$Individual_8_SC <- list_treat_pileup_bw_wasp_files$H3K4me1_SC[[8]]

# Create new combos for all possible individual-celltypes
# Non-redundant pair combinations
individual_celltype_combos <- combn(names(list_treat_pileup_bw_wasp_files_H3K4me1), 2) %>% t()

# Instantiate dataframes
cluster_matrix_long_individuals_celltypes_spearman_H3K4me1 <- data.frame()
cluster_matrix_short_individuals_celltypes_spearman_H3K4me1 <- list()

# Test every combination of individuals for jaccard and build distances into a labelled dataframe
for (COMBINATION_ROW in 1:nrow(individual_celltype_combos)) {
    
    current_frame <- data.frame(sample1 = individual_celltype_combos[COMBINATION_ROW, 1],
                                sample2 = individual_celltype_combos[COMBINATION_ROW, 2],
                                correlation = granges_peak_cor(list_treat_pileup_bw_wasp_files_H3K4me1[[individual_celltype_combos[COMBINATION_ROW, 1]]],
                                                               list_treat_pileup_bw_wasp_files_H3K4me1[[individual_celltype_combos[COMBINATION_ROW, 2]]],
                                                               list_peak_H3K4me1[[individual_celltype_combos[COMBINATION_ROW, 1]]],
                                                               list_peak_H3K4me1[[individual_celltype_combos[COMBINATION_ROW, 2]]],
                                                               blacklist_regions_gr = blacklist_encode,
                                                               cor_method = "spearman",
                                                               tile_widths = 50))
    
    cluster_matrix_long_individuals_celltypes_spearman_H3K4me1 <- bind_rows(cluster_matrix_long_individuals_celltypes_spearman_H3K4me1, current_frame)
    
    # Show progress
    message(str_c(current_frame[1,1], current_frame[1,2], current_frame[1,3], sep = " "))
    
}

# Add same sample matches
cluster_matrix_long_individuals_celltypes_spearman_H3K4me1 <- 
    cluster_matrix_long_individuals_celltypes_spearman_H3K4me1 %>% 
    bind_rows(data.frame(sample1 = names(list_peak_H3K4me1),
                         sample2 = names(list_peak_H3K4me1),
                         correlation = 1))

cluster_matrix_short_individuals_celltypes_spearman_H3K4me1 <- 
    cluster_matrix_long_individuals_celltypes_spearman_H3K4me1 %>% 
    pivot_wider(names_from = sample2, values_from = correlation) %>% 
    column_to_rownames("sample1") %>% 
    relocate(32, 1:31) %>% 
    as.matrix()

# Create a distance matrix from long dataframe
cluster_matrix_short_individuals_celltypes_spearman_H3K4me1 %>% 
    reshape2::melt(na.rm = TRUE) %>% 
    ggplot(aes(Var2, Var1, fill = value)) +
    geom_tile(color = "white") +
    scale_fill_gradient2(low = "blue",
                         mid = "white",
                         high = "red", 
                         limit = c(-1, 1), 
                         space = "Lab", 
                         name = "H3K4me1 Peak\nSpearman Correlations") +
    theme(axis.text.x = element_text(angle = 45, vjust = 1, 
                                     size = 3, hjust = 1),
          axis.title.x = element_blank(),
          axis.title.y = element_blank(),
          panel.grid.major = element_blank(),
          panel.border = element_blank(),
          panel.background = element_blank(),
          axis.ticks = element_blank(),
          axis.text.y = element_text(size = 3),
          legend.justification = c(1, 0),
          legend.position = c(0.6, 0.7),
          legend.direction = "horizontal") +
    coord_fixed() + 
    geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 1) +
    guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
                                 title.position = "top", title.hjust = 0.5))
ggsave("plots/heatmap_spearman_individual_celltype_H3K4me1_peaks.png")
```

H3K9me3 Peaks Spearman
```{r}
# Create new object for H3K9me3 peaks organized by individual-celltype combo
list_treat_pileup_bw_wasp_files_H3K9me3 <- list()

# Copy over corresponding GRanges
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_1_BC <- list_treat_pileup_bw_wasp_files$H3K9me3_BC[[1]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_2_BC <- list_treat_pileup_bw_wasp_files$H3K9me3_BC[[2]] 
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_3_BC <- list_treat_pileup_bw_wasp_files$H3K9me3_BC[[3]] 
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_4_BC <- list_treat_pileup_bw_wasp_files$H3K9me3_BC[[4]] 
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_5_BC <- list_treat_pileup_bw_wasp_files$H3K9me3_BC[[5]] 
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_6_BC <- list_treat_pileup_bw_wasp_files$H3K9me3_BC[[6]] 
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_7_BC <- list_treat_pileup_bw_wasp_files$H3K9me3_BC[[7]] 
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_8_BC <- list_treat_pileup_bw_wasp_files$H3K9me3_BC[[8]] 
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_1_LP <- list_treat_pileup_bw_wasp_files$H3K9me3_LP[[1]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_2_LP <- list_treat_pileup_bw_wasp_files$H3K9me3_LP[[2]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_3_LP <- list_treat_pileup_bw_wasp_files$H3K9me3_LP[[3]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_4_LP <- list_treat_pileup_bw_wasp_files$H3K9me3_LP[[4]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_5_LP <- list_treat_pileup_bw_wasp_files$H3K9me3_LP[[5]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_6_LP <- list_treat_pileup_bw_wasp_files$H3K9me3_LP[[6]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_7_LP <- list_treat_pileup_bw_wasp_files$H3K9me3_LP[[7]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_8_LP <- list_treat_pileup_bw_wasp_files$H3K9me3_LP[[8]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_1_LC <- list_treat_pileup_bw_wasp_files$H3K9me3_LC[[1]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_2_LC <- list_treat_pileup_bw_wasp_files$H3K9me3_LC[[2]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_3_LC <- list_treat_pileup_bw_wasp_files$H3K9me3_LC[[3]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_4_LC <- list_treat_pileup_bw_wasp_files$H3K9me3_LC[[4]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_5_LC <- list_treat_pileup_bw_wasp_files$H3K9me3_LC[[5]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_6_LC <- list_treat_pileup_bw_wasp_files$H3K9me3_LC[[6]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_7_LC <- list_treat_pileup_bw_wasp_files$H3K9me3_LC[[7]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_8_LC <- list_treat_pileup_bw_wasp_files$H3K9me3_LC[[8]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_1_SC <- list_treat_pileup_bw_wasp_files$H3K9me3_SC[[1]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_2_SC <- list_treat_pileup_bw_wasp_files$H3K9me3_SC[[2]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_3_SC <- list_treat_pileup_bw_wasp_files$H3K9me3_SC[[3]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_4_SC <- list_treat_pileup_bw_wasp_files$H3K9me3_SC[[4]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_5_SC <- list_treat_pileup_bw_wasp_files$H3K9me3_SC[[5]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_6_SC <- list_treat_pileup_bw_wasp_files$H3K9me3_SC[[6]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_7_SC <- list_treat_pileup_bw_wasp_files$H3K9me3_SC[[7]]
list_treat_pileup_bw_wasp_files_H3K9me3$Individual_8_SC <- list_treat_pileup_bw_wasp_files$H3K9me3_SC[[8]]

# Create new combos for all possible individual-celltypes
# Non-redundant pair combinations
individual_celltype_combos <- combn(names(list_treat_pileup_bw_wasp_files_H3K9me3), 2) %>% t()

# Instantiate dataframes
cluster_matrix_long_individuals_celltypes_spearman_H3K9me3 <- data.frame()
cluster_matrix_short_individuals_celltypes_spearman_H3K9me3 <- list()

# Test every combination of individuals for jaccard and build distances into a labelled dataframe
for (COMBINATION_ROW in 1:nrow(individual_celltype_combos)) {
    
    current_frame <- data.frame(sample1 = individual_celltype_combos[COMBINATION_ROW, 1],
                                sample2 = individual_celltype_combos[COMBINATION_ROW, 2],
                                correlation = granges_peak_cor(list_treat_pileup_bw_wasp_files_H3K9me3[[individual_celltype_combos[COMBINATION_ROW, 1]]],
                                                               list_treat_pileup_bw_wasp_files_H3K9me3[[individual_celltype_combos[COMBINATION_ROW, 2]]],
                                                               list_peak_H3K9me3[[individual_celltype_combos[COMBINATION_ROW, 1]]],
                                                               list_peak_H3K9me3[[individual_celltype_combos[COMBINATION_ROW, 2]]],
                                                               blacklist_regions_gr = blacklist_encode,
                                                               cor_method = "spearman",
                                                               tile_widths = 50))
    
    cluster_matrix_long_individuals_celltypes_spearman_H3K9me3 <- bind_rows(cluster_matrix_long_individuals_celltypes_spearman_H3K9me3, current_frame)
    
    # Show progress
    message(str_c(current_frame[1,1], current_frame[1,2], current_frame[1,3], sep = " "))
    
}

# Add same sample matches
cluster_matrix_long_individuals_celltypes_spearman_H3K9me3 <- 
    cluster_matrix_long_individuals_celltypes_spearman_H3K9me3 %>% 
    bind_rows(data.frame(sample1 = names(list_peak_H3K9me3),
                         sample2 = names(list_peak_H3K9me3),
                         correlation = 1))

cluster_matrix_short_individuals_celltypes_spearman_H3K9me3 <- 
    cluster_matrix_long_individuals_celltypes_spearman_H3K9me3 %>% 
    pivot_wider(names_from = sample2, values_from = correlation) %>% 
    column_to_rownames("sample1") %>% 
    relocate(32, 1:31) %>% 
    as.matrix()

# Create a distance matrix from long dataframe
cluster_matrix_short_individuals_celltypes_spearman_H3K9me3 %>% 
    reshape2::melt(na.rm = TRUE) %>% 
    ggplot(aes(Var2, Var1, fill = value)) +
    geom_tile(color = "white") +
    scale_fill_gradient2(low = "blue",
                         mid = "white",
                         high = "red", 
                         limit = c(-1, 1), 
                         space = "Lab", 
                         name = "H3K9me3 Peak\nSpearman Correlations") +
    theme(axis.text.x = element_text(angle = 45, vjust = 1, 
                                     size = 3, hjust = 1),
          axis.title.x = element_blank(),
          axis.title.y = element_blank(),
          panel.grid.major = element_blank(),
          panel.border = element_blank(),
          panel.background = element_blank(),
          axis.ticks = element_blank(),
          axis.text.y = element_text(size = 3),
          legend.justification = c(1, 0),
          legend.position = c(0.6, 0.7),
          legend.direction = "horizontal") +
    coord_fixed() + 
    geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 1) +
    guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
                                 title.position = "top", title.hjust = 0.5))
ggsave("plots/heatmap_spearman_individual_celltype_H3K9me3_peaks.png")
```

H3K27me3 Peaks Spearman
```{r}
# Create new object for H3K27me3 peaks organized by individual-celltype combo
list_treat_pileup_bw_wasp_files_H3K27me3 <- list()

# Copy over corresponding GRanges
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_1_BC <- list_treat_pileup_bw_wasp_files$H3K27me3_BC[[1]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_2_BC <- list_treat_pileup_bw_wasp_files$H3K27me3_BC[[2]] 
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_3_BC <- list_treat_pileup_bw_wasp_files$H3K27me3_BC[[3]] 
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_4_BC <- list_treat_pileup_bw_wasp_files$H3K27me3_BC[[4]] 
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_5_BC <- list_treat_pileup_bw_wasp_files$H3K27me3_BC[[5]] 
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_6_BC <- list_treat_pileup_bw_wasp_files$H3K27me3_BC[[6]] 
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_7_BC <- list_treat_pileup_bw_wasp_files$H3K27me3_BC[[7]] 
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_8_BC <- list_treat_pileup_bw_wasp_files$H3K27me3_BC[[8]] 
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_1_LP <- list_treat_pileup_bw_wasp_files$H3K27me3_LP[[1]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_2_LP <- list_treat_pileup_bw_wasp_files$H3K27me3_LP[[2]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_3_LP <- list_treat_pileup_bw_wasp_files$H3K27me3_LP[[3]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_4_LP <- list_treat_pileup_bw_wasp_files$H3K27me3_LP[[4]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_5_LP <- list_treat_pileup_bw_wasp_files$H3K27me3_LP[[5]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_6_LP <- list_treat_pileup_bw_wasp_files$H3K27me3_LP[[6]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_7_LP <- list_treat_pileup_bw_wasp_files$H3K27me3_LP[[7]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_8_LP <- list_treat_pileup_bw_wasp_files$H3K27me3_LP[[8]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_1_LC <- list_treat_pileup_bw_wasp_files$H3K27me3_LC[[1]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_2_LC <- list_treat_pileup_bw_wasp_files$H3K27me3_LC[[2]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_3_LC <- list_treat_pileup_bw_wasp_files$H3K27me3_LC[[3]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_4_LC <- list_treat_pileup_bw_wasp_files$H3K27me3_LC[[4]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_5_LC <- list_treat_pileup_bw_wasp_files$H3K27me3_LC[[5]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_6_LC <- list_treat_pileup_bw_wasp_files$H3K27me3_LC[[6]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_7_LC <- list_treat_pileup_bw_wasp_files$H3K27me3_LC[[7]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_8_LC <- list_treat_pileup_bw_wasp_files$H3K27me3_LC[[8]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_1_SC <- list_treat_pileup_bw_wasp_files$H3K27me3_SC[[1]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_2_SC <- list_treat_pileup_bw_wasp_files$H3K27me3_SC[[2]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_3_SC <- list_treat_pileup_bw_wasp_files$H3K27me3_SC[[3]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_4_SC <- list_treat_pileup_bw_wasp_files$H3K27me3_SC[[4]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_5_SC <- list_treat_pileup_bw_wasp_files$H3K27me3_SC[[5]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_6_SC <- list_treat_pileup_bw_wasp_files$H3K27me3_SC[[6]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_7_SC <- list_treat_pileup_bw_wasp_files$H3K27me3_SC[[7]]
list_treat_pileup_bw_wasp_files_H3K27me3$Individual_8_SC <- list_treat_pileup_bw_wasp_files$H3K27me3_SC[[8]]

# Create new combos for all possible individual-celltypes
# Non-redundant pair combinations
individual_celltype_combos <- combn(names(list_treat_pileup_bw_wasp_files_H3K27me3), 2) %>% t()

# Instantiate dataframes
cluster_matrix_long_individuals_celltypes_spearman_H3K27me3 <- data.frame()
cluster_matrix_short_individuals_celltypes_spearman_H3K27me3 <- list()

# Test every combination of individuals for jaccard and build distances into a labelled dataframe
for (COMBINATION_ROW in 1:nrow(individual_celltype_combos)) {
    
    current_frame <- data.frame(sample1 = individual_celltype_combos[COMBINATION_ROW, 1],
                                sample2 = individual_celltype_combos[COMBINATION_ROW, 2],
                                correlation = granges_peak_cor(list_treat_pileup_bw_wasp_files_H3K27me3[[individual_celltype_combos[COMBINATION_ROW, 1]]],
                                                               list_treat_pileup_bw_wasp_files_H3K27me3[[individual_celltype_combos[COMBINATION_ROW, 2]]],
                                                               list_peak_H3K27me3[[individual_celltype_combos[COMBINATION_ROW, 1]]],
                                                               list_peak_H3K27me3[[individual_celltype_combos[COMBINATION_ROW, 2]]],
                                                               blacklist_regions_gr = blacklist_encode,
                                                               cor_method = "spearman",
                                                               tile_widths = 50))
    
    cluster_matrix_long_individuals_celltypes_spearman_H3K27me3 <- bind_rows(cluster_matrix_long_individuals_celltypes_spearman_H3K27me3, current_frame)
    
    # Show progress
    message(str_c(current_frame[1,1], current_frame[1,2], current_frame[1,3], sep = " "))
    
}

# Add same sample matches
cluster_matrix_long_individuals_celltypes_spearman_H3K27me3 <- 
    cluster_matrix_long_individuals_celltypes_spearman_H3K27me3 %>% 
    bind_rows(data.frame(sample1 = names(list_peak_H3K27me3),
                         sample2 = names(list_peak_H3K27me3),
                         correlation = 1))

cluster_matrix_short_individuals_celltypes_spearman_H3K27me3 <- 
    cluster_matrix_long_individuals_celltypes_spearman_H3K27me3 %>% 
    pivot_wider(names_from = sample2, values_from = correlation) %>% 
    column_to_rownames("sample1") %>% 
    relocate(32, 1:31) %>% 
    as.matrix()

# Create a distance matrix from long dataframe
cluster_matrix_short_individuals_celltypes_spearman_H3K27me3 %>% 
    reshape2::melt(na.rm = TRUE) %>% 
    ggplot(aes(Var2, Var1, fill = value)) +
    geom_tile(color = "white") +
    scale_fill_gradient2(low = "blue",
                         mid = "white",
                         high = "red", 
                         limit = c(-1, 1), 
                         space = "Lab", 
                         name = "H3K27me3 Peak\nSpearman Correlations") +
    theme(axis.text.x = element_text(angle = 45, vjust = 1, 
                                     size = 3, hjust = 1),
          axis.title.x = element_blank(),
          axis.title.y = element_blank(),
          panel.grid.major = element_blank(),
          panel.border = element_blank(),
          panel.background = element_blank(),
          axis.ticks = element_blank(),
          axis.text.y = element_text(size = 3),
          legend.justification = c(1, 0),
          legend.position = c(0.6, 0.7),
          legend.direction = "horizontal") +
    coord_fixed() + 
    geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 1) +
    guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
                                 title.position = "top", title.hjust = 0.5))
ggsave("plots/heatmap_spearman_individual_celltype_H3K27me3_peaks.png")
```

H3K36me3 Peaks Spearman
```{r}
# Create new object for H3K36me3 peaks organized by individual-celltype combo
list_treat_pileup_bw_wasp_files_H3K36me3 <- list()

# Copy over corresponding GRanges
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_1_BC <- list_treat_pileup_bw_wasp_files$H3K36me3_BC[[1]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_2_BC <- list_treat_pileup_bw_wasp_files$H3K36me3_BC[[2]] 
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_3_BC <- list_treat_pileup_bw_wasp_files$H3K36me3_BC[[3]] 
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_4_BC <- list_treat_pileup_bw_wasp_files$H3K36me3_BC[[4]] 
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_5_BC <- list_treat_pileup_bw_wasp_files$H3K36me3_BC[[5]] 
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_6_BC <- list_treat_pileup_bw_wasp_files$H3K36me3_BC[[6]] 
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_7_BC <- list_treat_pileup_bw_wasp_files$H3K36me3_BC[[7]] 
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_8_BC <- list_treat_pileup_bw_wasp_files$H3K36me3_BC[[8]] 
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_1_LP <- list_treat_pileup_bw_wasp_files$H3K36me3_LP[[1]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_2_LP <- list_treat_pileup_bw_wasp_files$H3K36me3_LP[[2]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_3_LP <- list_treat_pileup_bw_wasp_files$H3K36me3_LP[[3]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_4_LP <- list_treat_pileup_bw_wasp_files$H3K36me3_LP[[4]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_5_LP <- list_treat_pileup_bw_wasp_files$H3K36me3_LP[[5]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_6_LP <- list_treat_pileup_bw_wasp_files$H3K36me3_LP[[6]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_7_LP <- list_treat_pileup_bw_wasp_files$H3K36me3_LP[[7]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_8_LP <- list_treat_pileup_bw_wasp_files$H3K36me3_LP[[8]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_1_LC <- list_treat_pileup_bw_wasp_files$H3K36me3_LC[[1]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_2_LC <- list_treat_pileup_bw_wasp_files$H3K36me3_LC[[2]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_3_LC <- list_treat_pileup_bw_wasp_files$H3K36me3_LC[[3]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_4_LC <- list_treat_pileup_bw_wasp_files$H3K36me3_LC[[4]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_5_LC <- list_treat_pileup_bw_wasp_files$H3K36me3_LC[[5]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_6_LC <- list_treat_pileup_bw_wasp_files$H3K36me3_LC[[6]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_7_LC <- list_treat_pileup_bw_wasp_files$H3K36me3_LC[[7]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_8_LC <- list_treat_pileup_bw_wasp_files$H3K36me3_LC[[8]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_1_SC <- list_treat_pileup_bw_wasp_files$H3K36me3_SC[[1]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_2_SC <- list_treat_pileup_bw_wasp_files$H3K36me3_SC[[2]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_3_SC <- list_treat_pileup_bw_wasp_files$H3K36me3_SC[[3]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_4_SC <- list_treat_pileup_bw_wasp_files$H3K36me3_SC[[4]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_5_SC <- list_treat_pileup_bw_wasp_files$H3K36me3_SC[[5]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_6_SC <- list_treat_pileup_bw_wasp_files$H3K36me3_SC[[6]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_7_SC <- list_treat_pileup_bw_wasp_files$H3K36me3_SC[[7]]
list_treat_pileup_bw_wasp_files_H3K36me3$Individual_8_SC <- list_treat_pileup_bw_wasp_files$H3K36me3_SC[[8]]

# Create new combos for all possible individual-celltypes
# Non-redundant pair combinations
individual_celltype_combos <- combn(names(list_treat_pileup_bw_wasp_files_H3K36me3), 2) %>% t()

# Instantiate dataframes
cluster_matrix_long_individuals_celltypes_spearman_H3K36me3 <- data.frame()
cluster_matrix_short_individuals_celltypes_spearman_H3K36me3 <- list()

# Test every combination of individuals for jaccard and build distances into a labelled dataframe
for (COMBINATION_ROW in 1:nrow(individual_celltype_combos)) {
    
    current_frame <- data.frame(sample1 = individual_celltype_combos[COMBINATION_ROW, 1],
                                sample2 = individual_celltype_combos[COMBINATION_ROW, 2],
                                correlation = granges_peak_cor(list_treat_pileup_bw_wasp_files_H3K36me3[[individual_celltype_combos[COMBINATION_ROW, 1]]],
                                                               list_treat_pileup_bw_wasp_files_H3K36me3[[individual_celltype_combos[COMBINATION_ROW, 2]]],
                                                               list_peak_H3K36me3[[individual_celltype_combos[COMBINATION_ROW, 1]]],
                                                               list_peak_H3K36me3[[individual_celltype_combos[COMBINATION_ROW, 2]]],
                                                               blacklist_regions_gr = blacklist_encode,
                                                               cor_method = "spearman",
                                                               tile_widths = 50))
    
    cluster_matrix_long_individuals_celltypes_spearman_H3K36me3 <- bind_rows(cluster_matrix_long_individuals_celltypes_spearman_H3K36me3, current_frame)
    
    # Show progress
    message(str_c(current_frame[1,1], current_frame[1,2], current_frame[1,3], sep = " "))
    
}

# Add same sample matches
cluster_matrix_long_individuals_celltypes_spearman_H3K36me3 <- 
    cluster_matrix_long_individuals_celltypes_spearman_H3K36me3 %>% 
    bind_rows(data.frame(sample1 = names(list_peak_H3K36me3),
                         sample2 = names(list_peak_H3K36me3),
                         correlation = 1))

cluster_matrix_short_individuals_celltypes_spearman_H3K36me3 <- 
    cluster_matrix_long_individuals_celltypes_spearman_H3K36me3 %>% 
    pivot_wider(names_from = sample2, values_from = correlation) %>% 
    column_to_rownames("sample1") %>% 
    relocate(32, 1:31) %>% 
    as.matrix()

# Create a distance matrix from long dataframe
cluster_matrix_short_individuals_celltypes_spearman_H3K36me3 %>% 
    reshape2::melt(na.rm = TRUE) %>% 
    ggplot(aes(Var2, Var1, fill = value)) +
    geom_tile(color = "white") +
    scale_fill_gradient2(low = "blue",
                         mid = "white",
                         high = "red", 
                         limit = c(-1, 1), 
                         space = "Lab", 
                         name = "H3K36me3 Peak\nSpearman Correlations") +
    theme(axis.text.x = element_text(angle = 45, vjust = 1, 
                                     size = 3, hjust = 1),
          axis.title.x = element_blank(),
          axis.title.y = element_blank(),
          panel.grid.major = element_blank(),
          panel.border = element_blank(),
          panel.background = element_blank(),
          axis.ticks = element_blank(),
          axis.text.y = element_text(size = 3),
          legend.justification = c(1, 0),
          legend.position = c(0.6, 0.7),
          legend.direction = "horizontal") +
    coord_fixed() + 
    geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 1) +
    guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
                                 title.position = "top", title.hjust = 0.5))
ggsave("plots/heatmap_spearman_individual_celltype_H3K36me3_peaks.png")
```

=====================================================================================================================================================================
H3K27ac Promoters Spearman Correlation
```{r}
# Create new combos for all possible individual-celltypes
# Non-redundant pair combinations
individual_celltype_combos <- combn(names(list_treat_pileup_bw_wasp_files_H3K27ac), 2) %>% t()

# Instantiate dataframes
cluster_matrix_long_individuals_celltypes_spearman_H3K27ac_prom <- data.frame()
cluster_matrix_short_individuals_celltypes_spearman_H3K27ac_prom <- list()

# Test every combination of individuals for jaccard and build distances into a labelled dataframe
for (COMBINATION_ROW in 1:nrow(individual_celltype_combos)) {
  
  current_frame <- data.frame(sample1 = individual_celltype_combos[COMBINATION_ROW, 1],
                              sample2 = individual_celltype_combos[COMBINATION_ROW, 2],
                              correlation = granges_promoter_chr22_cor(list_treat_pileup_bw_wasp_files_H3K27ac[[individual_celltype_combos[COMBINATION_ROW, 1]]],
                                                                       list_treat_pileup_bw_wasp_files_H3K27ac[[individual_celltype_combos[COMBINATION_ROW, 2]]],
                                                                       TxDb_promoters,
                                                                       blacklist_regions_gr = blacklist_encode,
                                                                       cor_method = "spearman",
                                                                       tile_widths = 100))
  
  cluster_matrix_long_individuals_celltypes_spearman_H3K27ac_prom <- bind_rows(cluster_matrix_long_individuals_celltypes_spearman_H3K27ac_prom, current_frame)
  
  # Show progress
  message(str_c(current_frame[1,1], current_frame[1,2], current_frame[1,3], sep = " "))
  
}

# Add same sample matches
cluster_matrix_long_individuals_celltypes_spearman_H3K27ac_prom <-
  cluster_matrix_long_individuals_celltypes_spearman_H3K27ac_prom %>%
  bind_rows(data.frame(sample1 = names(list_peak_H3K4me3),
                       sample2 = names(list_peak_H3K4me3),
                       correlation = 1))

cluster_matrix_short_individuals_celltypes_spearman_H3K27ac_prom <-
  cluster_matrix_long_individuals_celltypes_spearman_H3K27ac_prom %>%
  pivot_wider(names_from = sample2, values_from = correlation) %>%
  column_to_rownames("sample1") %>%
  relocate(32, 1:31) %>%
  as.matrix()

# Create a distance matrix from long dataframe
cluster_matrix_short_individuals_celltypes_spearman_H3K27ac_prom %>%
  reshape2::melt(na.rm = TRUE) %>%
  ggplot(aes(Var2, Var1, fill = value)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "blue",
                       mid = "white",
                       high = "red",
                       limit = c(-1, 1),
                       space = "Lab",
                       name = "H3K27ac Promoter\nSpearman Correlations") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1,
                                   size = 3, hjust = 1),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        panel.grid.major = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text.y = element_text(size = 3),
        legend.justification = c(1, 0),
        legend.position = c(0.6, 0.7),
        legend.direction = "horizontal") +
  coord_fixed() +
  geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 1) +
  guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
                               title.position = "top", title.hjust = 0.5))
ggsave("plots/heatmap_spearman_individual_celltype_H3K27ac_prom_chr22.png")


```
=====================================================================================================================================================================

Creating hierarchical clusters from Jaccard and Spearman matrices
```{r}
# Create function to turn individual_celltype cluster to a workable dist matrix
ic_cluster_to_dist <- function(cluster_matrix_short) {
  (1 - cluster_matrix_short) %>% 
    as.data.frame() %>% 
    arrange(32:1) %>% 
    select(32:1) %>% 
    as.matrix() %>% 
    as.dist(diag = TRUE)
}

# Jaccard
# H3K4me3
ggdendro::ggdendrogram(hclust(ic_cluster_to_dist(cluster_matrix_short_individuals_celltypes$H3K4me3)), rotate = TRUE)
ggsave("plots/hclust_jaccard_h3k4me3.png",
       units = "in",
       width = 6,
       height = 6)

# H3K27ac
ggdendro::ggdendrogram(hclust(ic_cluster_to_dist(cluster_matrix_short_individuals_celltypes$H3K27ac)), rotate = TRUE)
ggsave("plots/hclust_jaccard_h3k27ac.png",
       units = "in",
       width = 6,
       height = 6)

# H3K4me1
ggdendro::ggdendrogram(hclust(ic_cluster_to_dist(cluster_matrix_short_individuals_celltypes$H3K4me1)), rotate = TRUE)
ggsave("plots/hclust_jaccard_h3k4me1.png",
       units = "in",
       width = 6,
       height = 6)

# H3K9me3
ggdendro::ggdendrogram(hclust(ic_cluster_to_dist(cluster_matrix_short_individuals_celltypes$H3K9me3)), rotate = TRUE)
ggsave("plots/hclust_jaccard_h3k9me3.png",
       units = "in",
       width = 6,
       height = 6)

# H3K27me3
ggdendro::ggdendrogram(hclust(ic_cluster_to_dist(cluster_matrix_short_individuals_celltypes$H3K27me3)), rotate = TRUE)
ggsave("plots/hclust_jaccard_h3k27me3.png",
       units = "in",
       width = 6,
       height = 6)

# H3K36me3
ggdendro::ggdendrogram(hclust(ic_cluster_to_dist(cluster_matrix_short_individuals_celltypes$H3K36me3)), rotate = TRUE)
ggsave("plots/hclust_jaccard_h3k36me3.png",
       units = "in",
       width = 6,
       height = 6)

# Spearman
# H3K4me3
ggdendro::ggdendrogram(hclust(ic_cluster_to_dist(cluster_matrix_short_individuals_celltypes_spearman_H3K4me3)), rotate = TRUE)
ggsave("plots/hclust_spearman_H3K4me3.png",
       units = "in",
       width = 6,
       height = 6)

# H3K27ac
ggdendro::ggdendrogram(hclust(ic_cluster_to_dist(cluster_matrix_short_individuals_celltypes_spearman_H3K27ac)), rotate = TRUE)
ggsave("plots/hclust_spearman_H3K27ac.png",
       units = "in",
       width = 6,
       height = 6)

# H3K4me1
ggdendro::ggdendrogram(hclust(ic_cluster_to_dist(cluster_matrix_short_individuals_celltypes_spearman_H3K4me1)), rotate = TRUE)
ggsave("plots/hclust_spearman_H3K4me1.png",
       units = "in",
       width = 6,
       height = 6)

# H3K9me3
ggdendro::ggdendrogram(hclust(ic_cluster_to_dist(cluster_matrix_short_individuals_celltypes_spearman_H3K9me3)), rotate = TRUE)
ggsave("plots/hclust_spearman_H3K9me3.png",
       units = "in",
       width = 6,
       height = 6)

# H3K27me3
ggdendro::ggdendrogram(hclust(ic_cluster_to_dist(cluster_matrix_short_individuals_celltypes_spearman_H3K27me3)), rotate = TRUE)
ggsave("plots/hclust_spearman_H3K27me3.png",
       units = "in",
       width = 6,
       height = 6)

# H3K36me3
ggdendro::ggdendrogram(hclust(ic_cluster_to_dist(cluster_matrix_short_individuals_celltypes_spearman_H3K36me3)), rotate = TRUE)
ggsave("plots/hclust_spearman_H3K36me3.png",
       units = "in",
       width = 6,
       height = 6)

```


Test
```{r}
hclust(ic_cluster_to_dist(cluster_matrix_short_individuals_celltypes_spearman_H3K27ac)) %>% 
  as.dendrogram() %>% 
  dendextend::highlight_branches_col() %>% 
  plot(main = "test")
```


