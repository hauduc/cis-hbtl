---
title: "Data Import - run first"
output: html_notebook
---
```{r}
# R 4.1.3
# x86_64-centos7-linux-gnu
library(plyranges)
library(VariantAnnotation)
library(MutationalPatterns)
library(genomation)
library(Gviz)
library(BSgenome.Hsapiens.UCSC.hg38)
library(TxDb.Hsapiens.UCSC.hg38.knownGene)
library(systemPipeR)
library(biomaRt)
library(LDlinkR)
library(AllelicImbalance)
library(broom)
library(gt)
library(gtsummary)
library(UpSetR)
library(tidyverse)

const_canonical_chromosomes <- str_c("chr", c(1:22, "X", "Y"))

vector_marks <- c("H3K4me3", "H3K4me1", "H3K27ac", "H3K9me3", "H3K27me3", "H3K36me3")
vector_celltypes <- c("BC", "LP", "LC", "SC")
vector_individuals <- c("Individual_14_17_LP_DNA",
                        "Individual_14_18_BC__356K_RNA",
                        "Individual_11_18_BC_RNA_DNA",
                        "Individual_22_18_BC_RNA_DNA",
                        "Individual_24_18_BC_RNA_DNA",
                        "Individual_38_18_LC_RNA_DNA",
                        "Individual_30_18_LC_RNA_DNA",
                        "Individual_15_18_LC_RNA_DNA")

```

Import BREAST COHORT VCFs into R
```{r}
# Read list of VCFs
list_vcf_files <- read.table("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/2/filelists/vcf/breast_normal_vcfs.tsv") %>% pull()

# Initialize list
list_variant_calls <- GRangesList()

# Read VRanges into list_variant_calls
for (i in seq_along(list_vcf_files)) {
  
  message(str_c("Importing ", list_vcf_files[i], " ..."))
  
  list_variant_calls[[samples(scanVcfHeader(list_vcf_files[i]))]] <- 
    readVcfAsVRanges(list_vcf_files[i]) %>%
    as.data.frame() %>%
    select(-width, -strand) %>%
    makeGRangesFromDataFrame(keep.extra.columns = TRUE, ignore.strand = TRUE, seqinfo = seqinfo(BSgenome.Hsapiens.UCSC.hg38))
}
```

Load in VCALL cell line VCFs
```{r}
cl_variant_calls <- GRangesList()

cl_variant_calls$mcf10a <- 
  readVcfAsVRanges("/projects/analysis26/A24722/merge17358_bwa-mem-0.7.6a/100nt/hg38_no_alt/A24722_3_lanes_dupsFlagged.varFilter.eff.dbSNP_v146.COSMIC_v75.clinvar_20160104.annotations.vcf.gz") %>%
  as.data.frame() %>%
  select(-width, -strand) %>%
  makeGRangesFromDataFrame(keep.extra.columns = TRUE, ignore.strand = TRUE, seqinfo = seqinfo(BSgenome.Hsapiens.UCSC.hg38))

cl_variant_calls$htert_l9 <- 
  readVcfAsVRanges("/projects/analysis26/A24723/merge17354_bwa-mem-0.7.6a/100nt/hg38_no_alt/A24723_3_lanes_dupsFlagged.varFilter.eff.dbSNP_v146.COSMIC_v75.clinvar_20160104.annotations.vcf.gz") %>%
  as.data.frame() %>%
  select(-width, -strand) %>%
  makeGRangesFromDataFrame(keep.extra.columns = TRUE, ignore.strand = TRUE, seqinfo = seqinfo(BSgenome.Hsapiens.UCSC.hg38))

cl_variant_calls$htert_l2 <- 
  readVcfAsVRanges("/projects/analysis26/A24724/merge17355_bwa-mem-0.7.6a/100nt/hg38_no_alt/A24724_3_lanes_dupsFlagged.varFilter.eff.dbSNP_v146.COSMIC_v75.clinvar_20160104.annotations.vcf.gz") %>%
  as.data.frame() %>%
  select(-width, -strand) %>%
  makeGRangesFromDataFrame(keep.extra.columns = TRUE, ignore.strand = TRUE, seqinfo = seqinfo(BSgenome.Hsapiens.UCSC.hg38))
```

Load in YOUR PIPELINE cell line VCFs
```{r}
cl_pipeline_variant_calls <- GRangesList()

cl_pipeline_variant_calls$mcf10a <- 
  readVcfAsVRanges("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/cell_lines/1/output2/H3K4me3/MCF10A/wgs/MCF10A.recal_hard_filtered_phased_snvs.vcf.gz") %>%
  as.data.frame() %>%
  select(-width, -strand) %>%
  makeGRangesFromDataFrame(keep.extra.columns = TRUE, ignore.strand = TRUE, seqinfo = seqinfo(BSgenome.Hsapiens.UCSC.hg38))

cl_pipeline_variant_calls$htert_l9 <- 
  readVcfAsVRanges("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/cell_lines/1/output2/H3K4me3/HTERT_L9/wgs/HTERT_L9.recal_hard_filtered_phased_snvs.vcf.gz") %>%
  as.data.frame() %>%
  select(-width, -strand) %>%
  makeGRangesFromDataFrame(keep.extra.columns = TRUE, ignore.strand = TRUE, seqinfo = seqinfo(BSgenome.Hsapiens.UCSC.hg38))

cl_pipeline_variant_calls$htert_l2 <- 
  readVcfAsVRanges("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/cell_lines/1/output2/H3K4me3/HTERT_L2/wgs/HTERT_L2.recal_hard_filtered_phased_snvs.vcf.gz") %>%
  as.data.frame() %>%
  select(-width, -strand) %>%
  makeGRangesFromDataFrame(keep.extra.columns = TRUE, ignore.strand = TRUE, seqinfo = seqinfo(BSgenome.Hsapiens.UCSC.hg38))
```

Import COHORT WASP PEAK CALL files into R as GRangesLists
```{r}
# Initialize list
list_peak_wasp <- list()

# Create list with the use of your filelists
for (FILE in list.files("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/2/filelists/peak", full.names = TRUE)) {
  # Pull out name and contents
  NAME <- FILE %>% str_remove("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/2/filelists/peak/breast_normal_") %>% str_remove(".tsv")
  PEAKS_VECTOR <- FILE %>% read.table() %>% pull()
  
  # Create modality sublist
  list_peak_wasp[[NAME]] <- GRangesList()
  
  # Read in narrowPeak or broadPeak as an item within modality sublist (different command must be used depending on broadPeak or narrowPeak)
  # Set seqinfo to hg38
  if (str_detect(NAME, "H3K4me3|H3K4me1|H3K27ac")) {
    
    for (i in seq_along(PEAKS_VECTOR)) {
      list_peak_wasp[[NAME]][[names(list_variant_calls)[i]]] <- readNarrowPeak(PEAKS_VECTOR[i])
    }
    
  } else if (str_detect(NAME, "H3K9me3|H3K27me3|H3K36me3")) {
    
    for (i in seq_along(PEAKS_VECTOR)) {
      list_peak_wasp[[NAME]][[names(list_variant_calls)[i]]] <- readBroadPeak(PEAKS_VECTOR[i])
    }
      
  } else {
    
    stop("Epigenetic mark name mismatch error")
    
  }
}
```

Import COHORT HG38 PEAK CALL files into R as GRangesLists
```{r}
# Initialize list
list_peak_hg38 <- list()

# Create list with the use of your filelists
for (FILE in list.files("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/2/filelists/peak_hg38", full.names = TRUE)) {
  # Pull out name and contents
  NAME <- FILE %>% str_remove("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/2/filelists/peak_hg38/breast_normal_") %>% str_remove(".tsv")
  PEAKS_VECTOR <- FILE %>% read.table() %>% pull()
  
  # Create modality sublist
  list_peak_hg38[[NAME]] <- GRangesList()
  
  # Read in narrowPeak or broadPeak as an item within modality sublist (different command must be used depending on broadPeak or narrowPeak)
  if (str_detect(NAME, "H3K4me3|H3K4me1|H3K27ac")) {
    
    for (i in seq_along(PEAKS_VECTOR)) {
      list_peak_hg38[[NAME]][[names(list_variant_calls)[i]]] <- readNarrowPeak(PEAKS_VECTOR[i])
    }
    
  } else if (str_detect(NAME, "H3K9me3|H3K27me3|H3K36me3")) {
    
    for (i in seq_along(PEAKS_VECTOR)) {
      list_peak_hg38[[NAME]][[names(list_variant_calls)[i]]] <- readBroadPeak(PEAKS_VECTOR[i])
    }
      
  } else {
    
    stop("Epigenetic mark name mismatch error")
    
  }
}
```

Import CELL LINE WASP PEAK CALL files into R as GRangesLists
```{r}
# Initialize list
cl_peak_wasp <- list()
cl_peak_wasp$H3K27ac <- GRangesList()
cl_peak_wasp$H3K27me3 <- GRangesList()
cl_peak_wasp$H3K36me3 <- GRangesList()
cl_peak_wasp$H3K4me1 <- GRangesList()
cl_peak_wasp$H3K4me3 <- GRangesList()
cl_peak_wasp$H3K9me3 <- GRangesList()

# Create list of files
for (FILE in list.files("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/cell_lines/1/output2",
                        pattern = "*(MCF10A|HTERT_L9|HTERT_L2).wasp_peaks.(broad|narrow)Peak.filtered.bed$",
                        full.names = TRUE, 
                        recursive = TRUE) %>%
     str_subset("comparisons", negate = TRUE) %>% 
     sort(decreasing = TRUE)) {
  
  # Pull out name and contents
  CURRENT_MARK <- FILE %>% 
    str_remove("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/cell_lines/1/output2/") %>%
    str_remove("/(MCF10A|HTERT_L9|HTERT_L2)/peak_calls/(MCF10A|HTERT_L9|HTERT_L2).wasp_peaks.(narrow|broad)Peak.filtered.bed$")
  CURRENT_CL <- FILE %>% 
    str_extract("MCF10A|HTERT_L9|HTERT_L2") %>% 
    tolower()
  
  # Read in narrowPeak or broadPeak as an item within modality sublist (different command must be used depending on broadPeak or narrowPeak)
  # Set seqinfo to hg38
  if (str_detect(CURRENT_MARK, "H3K4me3|H3K4me1|H3K27ac")) {
    
    cl_peak_wasp[[CURRENT_MARK]][[CURRENT_CL]] <- readNarrowPeak(FILE)
    
  } else if (str_detect(CURRENT_MARK, "H3K9me3|H3K27me3|H3K36me3")) {
    
    cl_peak_wasp[[CURRENT_MARK]][[CURRENT_CL]] <- readBroadPeak(FILE)
    
  } else {
    
    stop("Epigenetic mark name mismatch error")
    
  }
}
```

Import wasp treatment pileup bigWig FILEPATHS
```{r}
# Create list of files
# Initialize list
list_treat_pileup_bw_wasp_files <- list()

for (FILE in list.files("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/2/filelists/bw", full.names = TRUE)) {
  # Pull out name of the modality
  NAME <- FILE %>% str_remove("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/2/filelists/bw/breast_normal_") %>% str_remove(".tsv")
  
  # Create vector containing modality files as a correctly-named component of the list
  list_treat_pileup_bw_wasp_files[[NAME]] <- FILE %>% read.table() %>% pull()
  
}

# Import files into R (optional)
# Initialize list

# list_treat_pileup_bw_wasp <- list()
# 
# for (FILE in list.files("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/2/filelists/bw", full.names = TRUE)) {
#   # Pull out name and contents
#   NAME <- FILE %>% str_remove("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/2/filelists/bw/breast_normal_") %>% str_remove(".tsv")
#   BW_VECTOR <- FILE %>% read.table() %>% pull()
#   
#   # Create modality sublist
#   list_treat_pileup_bw_wasp[[NAME]] <- GRangesList()
#   
#   # Read in bigWigs
#   for (i in seq_along(BW_VECTOR)) {
#     list_treat_pileup_bw_wasp[[NAME]][[names(list_variant_calls)[i]]] <- read_bigwig(BW_VECTOR[i])
#   }
# }

```

Load in top hit SPAAs for replication
```{r}
# Load in all SPAAs
consensus.rpkm.bed.RData.files <- list.files(path = "/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/2/output2/spaas/annotated_rpkm", 
                                             pattern = "*RData$", 
                                             full.names = TRUE)

consensus.all.spaas.rpkm.bed <- data.frame()
for (i in seq_along(consensus.rpkm.bed.RData.files)) {
  load(consensus.rpkm.bed.RData.files[i])
  consensus.all.spaas.rpkm.bed <- bind_rows(consensus.all.spaas.rpkm.bed, consensus.spaa.rpkm.bed)
  rm(consensus.spaa.rpkm.bed)
}

# Fix and convert to GRanges
consensus.all.spaas.rpkm.bed <- consensus.all.spaas.rpkm.bed %>% 
  rowwise() %>% 
  mutate(RPKM_total    = sum(c_across(Individual_14_17_LP_DNA_RPKM:Individual_15_18_LC_RNA_DNA_RPKM)),
         RPKM_variance = var(c_across(Individual_14_17_LP_DNA_RPKM:Individual_15_18_LC_RNA_DNA_RPKM))) %>% 
  as.data.frame() %>% 
  mutate(rs = na_if(rs, "NA")) %>% 
  makeGRangesFromDataFrame(keep.extra.columns = TRUE, 
                           ignore.strand = TRUE, 
                           starts.in.df.are.0based = TRUE,
                           seqinfo = seqinfo(BSgenome.Hsapiens.UCSC.hg38))
```

Import top hits
```{r}
# Import list of top hits
top_hits <- read.csv("data/top_hits.csv") %>% pull(Variant)
# Get ranges of the top hits
top_hits_ranges <- consensus.all.spaas.rpkm.bed %>% plyranges::filter(rs %in% top_hits)
```

