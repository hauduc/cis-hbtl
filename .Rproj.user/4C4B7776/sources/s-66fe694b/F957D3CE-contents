---
title: "SPAA Analysis v1"
output:
  html_document:
    df_print: paged
---
# Setup
```{r}
#!/gsc/software/linux-x86_64-centos7/R-4.1.0/lib64/R/bin/R
# R 4.1.0
# x86_64-centos7-linux-gnu
library(tidyverse)
# Setting the right environmental variables to bedr required binaries
PATH_default <- Sys.getenv("PATH")
PATH_to_bedr_tools <- str_c("/gsc/software/linux-x86_64-centos7/bedtools-2.27.1/bin",
                            "/gsc/software/linux-x86_64-centos7/bedops-2.4.35/bin",
                            "/home/ahauduc/anaconda3/bin",
                            sep = ":")
Sys.setenv("PATH" = str_c(PATH_default, 
                          PATH_to_bedr_tools, 
                          sep = ":"))
library(bedr)
library(HelloRanges)
library(plyranges)
library(UpSetR)
library(gt)
library(genomation)
library(combinat)
```

# Load in SPAAs with RPKM information and combine them
# This analysis only works with positive SPAAs!!
```{r}

consensus.rpkm.bed.RData.files <- list.files(path = "/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/2/output2/spaas/annotated_rpkm", 
                                             pattern = "*RData$", 
                                             full.names = TRUE)

consensus.all.spaas.rpkm.bed <- data.frame()
for (i in seq_along(consensus.rpkm.bed.RData.files)) {
  load(consensus.rpkm.bed.RData.files[i])
  consensus.all.spaas.rpkm.bed <- bind_rows(consensus.all.spaas.rpkm.bed, consensus.spaa.rpkm.bed)
  rm(consensus.spaa.rpkm.bed)
}

# Additional post-processing to add informative columns
# Select only positive SPAAs
consensus.all.spaas.rpkm.bed <- consensus.all.spaas.rpkm.bed %>% 
  rowwise() %>% 
  mutate(RPKM_total    = sum(c_across(Individual_14_17_LP_DNA_RPKM:Individual_15_18_LC_RNA_DNA_RPKM)),
         RPKM_variance = var(c_across(Individual_14_17_LP_DNA_RPKM:Individual_15_18_LC_RNA_DNA_RPKM))) %>% 
  as.data.frame() %>% 
  filter(spaa == TRUE) %>% 
  select(-spaa_negative)
```

Proportion of all hits and significant hits by mark type
```{r}
# by mark
# all
consensus.all.spaas.rpkm.bed %>% 
  group_by(mark) %>% 
  summarize(mark_n = n()) %>% 
  ggplot(aes(x = "", y = mark_n, fill = mark))
+
  geom_bar(width = 1, stat = "identity") + 
  coord_polar("y", start = 0) +
  labs(title = "Number of SPAAs by histone mark in breast_normal", x = "", y = "") +
  scale_fill_discrete(name = "Histone mark") +
  theme_bw()
ggsave("plots/pie_all_mark.png")

# significant transcription
consensus.all.spaas.rpkm.bed %>% 
  filter(t_test_p_val_fdr_adj < 0.01) %>% 
  group_by(mark) %>% 
  summarize(mark_n = n()) %>% 
  ggplot(aes(x = "", y = mark_n, fill = mark)) +
  geom_bar(width = 1, stat = "identity") + 
  coord_polar("y", start = 0) +
  labs(title = "Significant Transcription-associated SPAAs across breast_normal cohort", x = "", y = "") +
  scale_fill_discrete(name = "Histone mark") +
  theme_bw()
ggsave("plots/pie_sig_mark.png")

# significant transcription and high variance
consensus.all.spaas.rpkm.bed %>% 
  filter(t_test_p_val_fdr_adj < 0.01,
         RPKM_variance > 50) %>% 
  group_by(mark) %>% 
  summarize(mark_n = n()) %>% 
  ggplot(aes(x = "", y = mark_n, fill = mark)) +
  geom_bar(width = 1, stat = "identity") + 
  coord_polar("y", start = 0) +
  labs(title = "Significant Transcription-associated SPAAs across breast_normal cohort", x = "", y = "") +
  scale_fill_discrete(name = "Histone mark") +
  theme_bw()
ggsave("plots/pie_sig_variance_high_mark.png")

# by celltype
# all
consensus.all.spaas.rpkm.bed %>% 
  group_by(celltype) %>% 
  summarize(celltype_n = n()) %>% 
  ggplot(aes(x = "", y = celltype_n, fill = celltype)) +
  geom_bar(width = 1, stat = "identity") + 
  coord_polar("y", start = 0) +
  labs(title = "Number of SPAAs by cell type in breast_normal", x = "", y = "") +
  scale_fill_discrete(name = "Cell type") +
  scale_fill_brewer(palette="Dark2") +
  theme_bw()
ggsave("plots/pie_all_celltype.png")

# significant transcription
consensus.all.spaas.rpkm.bed %>% 
  filter(t_test_p_val_fdr_adj < 0.01) %>% 
  group_by(celltype) %>% 
  summarize(celltype_n = n()) %>% 
  ggplot(aes(x = "", y = celltype_n, fill = celltype)) +
  geom_bar(width = 1, stat = "identity") + 
  coord_polar("y", start = 0) +
  labs(title = "Significant Transcription-associated SPAAs across breast_normal cohort", x = "", y = "") +
  scale_fill_discrete(name = "Cell type") +
  scale_fill_brewer(palette="Dark2") +
  theme_bw()
ggsave("plots/pie_sig_celltype.png")

# significant transcription and high variance
consensus.all.spaas.rpkm.bed %>% 
  filter(t_test_p_val_fdr_adj < 0.01,
         RPKM_variance > 50) %>% 
  group_by(celltype) %>% 
  summarize(celltype_n = n()) %>% 
  ggplot(aes(x = "", y = celltype_n, fill = celltype)) +
  geom_bar(width = 1, stat = "identity") + 
  coord_polar("y", start = 0) +
  labs(title = "Significant Transcription-associated & high transcriptional variance SPAAs", x = "", y = "") +
  scale_fill_discrete(name = "Cell type") +
  scale_fill_brewer(palette="Dark2") +
  theme_bw()
ggsave("plots/pie_sig_variance_high_celltype.png")
```

Comparison with baseline of coverage for BED files of each mark
```{r}
coverages_by_types <- data.frame()
# Narrow peaks
for (PEAKFILE_SET in list.files(path = "/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/2/scripts/filelists/peak",
                                full.names = TRUE,
                                pattern = "*H3K4me3*|*H3K4me1*|*H3K27ac*")) {
  for (PEAKFILE in pull(read.table(PEAKFILE_SET))) {
  temp_df <- data.frame(type = str_remove(PEAKFILE, "/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/1/output2/"),
             coverage = read_narrowpeaks(PEAKFILE) %>% width() %>% `-`(1) %>% sum()) %>% separate(col = type, sep = "/", into = c("mark", "cemt", NA, NA))
  coverages_by_types <- bind_rows(temp_df, coverages_by_types)
  }
}

# Broad peaks
for (PEAKFILE_SET in list.files(path = "/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/2/scripts/filelists/broadpeak_actually_present",
                                full.names = TRUE,
                                pattern = "*H3K9me3*|*H3K27me3*|*H3K36me3*")) {
  for (PEAKFILE in pull(read.table(PEAKFILE_SET))) {
  temp_df <- data.frame(type = str_remove(PEAKFILE, "/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/1/output2/"),
             coverage = readBroadPeak(PEAKFILE) %>% width() %>% `-`(1) %>% sum()) %>% separate(col = type, sep = "/", into = c("mark", "cemt", NA, NA))
  coverages_by_types <- bind_rows(temp_df, coverages_by_types)
  }
}

coverages_by_types <- coverages_by_types %>% mutate(celltype = if_else(cemt == "CEMT_154" |
                                                 cemt == "CEMT_173" |
                                                 cemt == "CEMT_177" |
                                                 cemt == "CEMT_181" |
                                                 cemt == "CEMT_185" |
                                                 cemt == "CEMT_190" |
                                                 cemt == "CEMT_194" |
                                                 cemt == "CEMT_198", "BC", if_else(
                                                   cemt == "CEMT_155" |
                                                   cemt == "CEMT_174" |
                                                   cemt == "CEMT_178" |
                                                   cemt == "CEMT_182" |
                                                   cemt == "CEMT_186" |
                                                   cemt == "CEMT_191" |
                                                   cemt == "CEMT_195" |
                                                   cemt == "CEMT_199", "LP", if_else(
                                                     cemt == "CEMT_156" |
                                                     cemt == "CEMT_175" |
                                                     cemt == "CEMT_179" |
                                                     cemt == "CEMT_183" |
                                                     cemt == "CEMT_187" |
                                                     cemt == "CEMT_192" |
                                                     cemt == "CEMT_196" |
                                                     cemt == "CEMT_200", "LC", if_else(
                                                       cemt == "CEMT_157" |
                                                       cemt == "CEMT_176" |
                                                       cemt == "CEMT_180" |
                                                       cemt == "CEMT_184" |
                                                       cemt == "CEMT_188" |
                                                       cemt == "CEMT_193" |
                                                       cemt == "CEMT_197" |
                                                       cemt == "CEMT_201", "SC", "ERROR")))))

coverages_by_types %>% 
  group_by(mark) %>% 
  summarize(mean_coverage_by_mark = mean(coverage)) %>% 
  ggplot(aes(x = "", y = mean_coverage_by_mark, fill = mark)) +
  geom_bar(width = 1, stat = "identity") + 
  coord_polar("y", start = 0) +
  labs(title = "Mean of coverages grouped by mark in breast_normal cohort", x = "", y = "") +
  scale_fill_discrete(name = "Histone mark") +
  theme_bw()
ggsave("plots/pie_baseline_mark.png")

coverages_by_types %>% 
  group_by(celltype) %>% 
  summarize(mean_coverage_by_celltype = mean(coverage)) %>% 
  ggplot(aes(x = "", y = mean_coverage_by_celltype, fill = celltype)) +
  geom_bar(width = 1, stat = "identity") + 
  coord_polar("y", start = 0) +
  labs(title = "Mean of coverages grouped by cell type in breast_normal cohort", x = "", y = "") +
  scale_fill_discrete(name = "Cell type") +
  scale_fill_brewer(palette="Dark2") +
  theme_bw()
ggsave("plots/pie_baseline_celltype.png")



```


Number of significant SPAAs by individuals_involved
```{r}

consensus.all.spaas.rpkm.bed %>% 
  ggplot(aes(x = as.factor(individuals_involved))) + 
  geom_histogram(binwidth = 5, stat = "count") +
  labs(title = "All SPAAs by Individuals with Variant/Peak Intersection in SPAA", x = "Individuals with Variant/Peak Intersection in SPAA", y = "Number of SPAAs") +
  theme_bw()
ggsave("plots/bargraph_individuals_involved_all.png")

consensus.all.spaas.rpkm.bed %>% 
  filter(t_test_p_val_fdr_adj < 0.01) %>% 
  ggplot(aes(x = as.factor(individuals_involved))) + 
  geom_histogram(binwidth = 5, stat = "count") +
  labs(title = "Significant SPAAs by individuals_involved", x = "Individuals with Variant/Peak Intersection in SPAA", y = "Number of SPAAs") +
  theme_bw()
ggsave("plots/bargraph_individuals_involved_sig.png")

consensus.all.spaas.rpkm.bed %>% 
  group_by(individuals_involved) %>% 
  summarize(number_of_spaas = n()) %>%
  gt() %>%
  tab_options(heading.title.font.weight = "bold",
              column_labels.font.weight =  "light") %>% 
  tab_header(title = "All SPAAs by individuals_involved") %>% 
  cols_align(align = "left", columns = everything()) %>% 
  gtsave("plots/table_individuals_involved_all.png")

consensus.all.spaas.rpkm.bed %>% 
  filter(t_test_p_val_fdr_adj < 0.01) %>% 
  group_by(individuals_involved) %>% 
  summarize(number_of_spaas = n()) %>%
  gt() %>%
  tab_options(heading.title.font.weight = "bold",
              column_labels.font.weight =  "light") %>% 
  tab_header(title = "Significant SPAAs by individuals_involved") %>% 
  cols_align(align = "left", columns = everything()) %>% 
  gtsave("plots/table_individuals_involved_sig.png")


```

SPAAs are highly cell type and mark-specific
```{r}
png(filename = str_c("plots/", "upset_spaas_all_by_mark_celltype", ".png"),
    width = 12, 
    height = 10, 
    units = "in", 
    res = 250,
    pointsize = 16,
    type = "cairo")

upset(fromList(list(
  H3K4me3_BC = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K4me3", celltype == "BC") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K4me3_LP = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K4me3", celltype == "LP") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K4me3_LC = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K4me3", celltype == "LC") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K4me3_SC = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K4me3", celltype == "SC") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K27ac_BC = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K27ac", celltype == "BC") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K27ac_LP = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K27ac", celltype == "LP") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K27ac_LC = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K27ac", celltype == "LC") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K27ac_SC = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K27ac", celltype == "SC") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K4me1_BC = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K4me1", celltype == "BC") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K4me1_LP = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K4me1", celltype == "LP") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K4me1_LC = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K4me1", celltype == "LC") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K4me1_SC = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K4me1", celltype == "SC") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K9me3_BC = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K9me3", celltype == "BC") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K9me3_LP = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K9me3", celltype == "LP") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K9me3_LC = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K9me3", celltype == "LC") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K9me3_SC = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K9me3", celltype == "SC") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K27me3_BC = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K27me3", celltype == "BC") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K27me3_LP = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K27me3", celltype == "LP") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K27me3_LC = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K27me3", celltype == "LC") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K27me3_SC = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K27me3", celltype == "SC") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K36me3_BC = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K36me3", celltype == "BC") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K36me3_LP = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K36me3", celltype == "LP") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K36me3_LC = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K36me3", celltype == "LC") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K36me3_SC = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K36me3", celltype == "SC") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index)
  )),
  nsets = 24)

dev.off()
```

SPAAs are highly cell type specific
```{r}
png(filename = str_c("plots/", "upset_spaas_celltype", ".png"),
    width = 12, 
    height = 10, 
    units = "in", 
    res = 250,
    pointsize = 16,
    type = "cairo")

upset(fromList(list(
  BC = consensus.all.spaas.rpkm.bed %>% filter(celltype == "BC") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  LP = consensus.all.spaas.rpkm.bed %>% filter(celltype == "LP") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  LC = consensus.all.spaas.rpkm.bed %>% filter(celltype == "LC") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  SC = consensus.all.spaas.rpkm.bed %>% filter(celltype == "SC") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index)
  )),
  nsets = 4)

dev.off()
```

SPAAs are highly mark-specific
```{r}
png(filename = str_c("plots/", "upset_spaas_mark", ".png"),
    width = 12, 
    height = 10, 
    units = "in", 
    res = 250,
    pointsize = 16,
    type = "cairo")

upset(fromList(list(
  H3K4me3 = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K4me3") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K27ac = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K27ac") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K4me1 = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K4me1") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K9me3 = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K9me3") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K27me3 = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K27me3") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index) ,
  H3K36me3 = consensus.all.spaas.rpkm.bed %>% filter(mark == "H3K36me3") %>% mutate(index = str_c(chr, start, end, sep = "_")) %>% pull(index)
  )),
  nsets = 6)

dev.off()
```

Highly-significant RPKM SPAA/non-SPAA group differences tend to be driven by singleton events
```{r}
# Overall view
consensus.all.spaas.rpkm.bed %>% 
  ggplot(aes(x = as.factor(individuals_involved), y = t_test_p_val_fdr_adj)) + 
  geom_violin() + 
  geom_hline(yintercept = 0.01, linetype = "dashed", color = "red") +
  labs(title = "SPAA FDR-corrected p-values by individuals involved", x = "Individuals with Variant/Peak Intersection in SPAA", y = "p-value (t-test)") +
  theme_bw()
ggsave("plots/significances_all.png")

# Significant view
consensus.all.spaas.rpkm.bed %>% 
  ggplot(aes(x = as.factor(individuals_involved), y = t_test_p_val_fdr_adj)) + 
  geom_violin() + 
  # geom_point(position = "jitter", size = 0.0005) +
  geom_hline(yintercept = 0.01, linetype = "dashed", color = "red") +
  ylim(0, 0.05) +
  labs(title = "SPAA FDR-corrected p-values by individuals involved", x = "Individuals with Variant/Peak Intersection in SPAA", y = "p-value (t-test)") +
  theme_bw()
ggsave("plots/significances_less_than_0.05.png")

# Significant view
consensus.all.spaas.rpkm.bed %>% 
  ggplot(aes(x = as.factor(individuals_involved), y = t_test_p_val_fdr_adj)) + 
  geom_violin() + 
  geom_point(position = "jitter", size = 0.0005) +
  geom_hline(yintercept = 0.01, linetype = "dashed", color = "red") +
  ylim(0, 0.05) +
  labs(title = "SPAA FDR-corrected p-values by individuals involved", x = "Individuals with Variant/Peak Intersection in SPAA", y = "p-value (t-test)") +
  theme_bw()
ggsave("plots/significances_less_than_0.05_with_data_points.png")

```

Changes in variant call quality, peak quality, and mean allele frequency over individuals_involved
```{r}
# Variant quality over number of individuals
consensus.all.spaas.rpkm.bed %>% 
  group_by(individuals_involved, mark) %>% 
  summarize(my_mean = mean(mean_variant_call_quality)) %>% 
  ggplot(aes(x = individuals_involved, y = my_mean, color = mark)) +  
  geom_line() +  
  geom_point() +
  labs(title = "Variant call quality by SPAA modality", 
       x = "Individuals with Variant/Peak Intersection in SPAA", 
       y = "Mean variant call quality") +
  guides(color = guide_legend(title = "mark")) +
  scale_x_continuous(n.breaks = consensus.all.spaas.rpkm.bed %>% pull(individuals_involved) %>% unique() %>% length()) +
  theme_bw()
ggsave("plots/lineplot_variant_qual_over_individuals_by_mark.png")

# Peak q value over number of individuals
consensus.all.spaas.rpkm.bed %>% 
  group_by(individuals_involved, mark) %>% 
  summarize(my_mean = mean(mean_peak_q_value)) %>% 
  ggplot(aes(x = individuals_involved, y = my_mean, color = mark)) +  
  geom_line() +  
  geom_point() +
  labs(title = "Peak -log10(q-value) by SPAA modality", 
       x = "Individuals with Variant/Peak Intersection in SPAA", 
       y = "Mean peak -log10(q-value)") +
  guides(color = guide_legend(title = "mark")) +
  scale_x_continuous(n.breaks = consensus.all.spaas.rpkm.bed %>% pull(individuals_involved) %>% unique() %>% length()) +
  theme_bw()
ggsave("plots/lineplot_q_value_over_individuals_by_mark.png")

# Alele frequency over number of individuals
consensus.all.spaas.rpkm.bed %>% 
  group_by(individuals_involved, mark) %>% 
  summarize(my_mean = mean(mean_allele_frequency)) %>% 
  ggplot(aes(x = individuals_involved, y = my_mean, color = mark)) +  
  geom_line() +  
  geom_point() +
  labs(title = "Mean allele frequency by SPAA modality", 
       x = "Individuals with Variant/Peak Intersection in SPAA", 
       y = "Mean allele frequency") +
  guides(color = guide_legend(title = "mark")) +
  scale_x_continuous(n.breaks = consensus.all.spaas.rpkm.bed %>% pull(individuals_involved) %>% unique() %>% length()) +
  theme_bw()
ggsave("plots/lineplot_allele_freq_over_individuals_by_mark.png")

```

WASP pipeline and reference genome personalization shows a high degree of similarity in overall peak composition when looking at intersection/union
```{r}
# Read in data
# WASP Peaks
peaks.wasp.narrow <- Sys.glob("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/1/output2/H3K*/CEMT_*/peak_calls/*wasp_peaks.narrowPeak.filtered.bed")
peaks.wasp.narrow_H3K4me3_BC <- peaks.wasp.narrow %>% as_tibble() %>% slice(65:96) %>% slice(seq(1,32,4)) %>% pull()
peaks.wasp.narrow_H3K4me3_LP <- peaks.wasp.narrow %>% as_tibble() %>% slice(65:96) %>% slice(seq(2,32,4)) %>% pull()
peaks.wasp.narrow_H3K4me3_LC <- peaks.wasp.narrow %>% as_tibble() %>% slice(65:96) %>% slice(seq(3,32,4)) %>% pull()
peaks.wasp.narrow_H3K4me3_SC <- peaks.wasp.narrow %>% as_tibble() %>% slice(65:96) %>% slice(seq(4,32,4)) %>% pull()

peaks.wasp.broad <- Sys.glob("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/1/output2/H3K*/CEMT_*/peak_calls/*wasp_peaks.broadPeak.filtered.bed")

# HG38 peaks
peaks.hg38.narrow <- Sys.glob("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/1/output2/H3K*/CEMT_*/peak_calls/*hg38_peaks.narrowPeak.filtered.bed")
peaks.hg38.narrow_H3K4me3_BC <- peaks.hg38.narrow %>% as_tibble() %>% slice(65:96) %>% slice(seq(1,32,4)) %>% pull()
peaks.hg38.narrow_H3K4me3_LP <- peaks.hg38.narrow %>% as_tibble() %>% slice(65:96) %>% slice(seq(2,32,4)) %>% pull()
peaks.hg38.narrow_H3K4me3_LC <- peaks.hg38.narrow %>% as_tibble() %>% slice(65:96) %>% slice(seq(3,32,4)) %>% pull()
peaks.hg38.narrow_H3K4me3_SC <- peaks.hg38.narrow %>% as_tibble() %>% slice(65:96) %>% slice(seq(4,32,4)) %>% pull()

peaks.hg38.broad <- Sys.glob("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/1/output2/H3K*/CEMT_*/peak_calls/*hg38_peaks.broadPeak.filtered.bed")

# Personalized Peaks
peaks.pers.narrow <- Sys.glob("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/1/output2/H3K*/CEMT_*/peak_calls/*personalized_peaks.narrowPeak.filtered.bed")
peaks.pers.narrow_H3K4me3_BC <- peaks.pers.narrow %>% as_tibble() %>% slice(65:96) %>% slice(seq(1,32,4)) %>% pull()
peaks.pers.narrow_H3K4me3_LP <- peaks.pers.narrow %>% as_tibble() %>% slice(65:96) %>% slice(seq(2,32,4)) %>% pull()
peaks.pers.narrow_H3K4me3_LC <- peaks.pers.narrow %>% as_tibble() %>% slice(65:96) %>% slice(seq(3,32,4)) %>% pull()
peaks.pers.narrow_H3K4me3_SC <- peaks.pers.narrow %>% as_tibble() %>% slice(65:96) %>% slice(seq(4,32,4)) %>% pull()

peaks.pers.broad <- Sys.glob("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/1/output2/H3K*/CEMT_*/peak_calls/*personalized_peaks.broadPeak.filtered.bed")
##############################################################################################################################
##############################################################################################################################
# Functions to limit heatmaps to single triangle
# Get lower triangle of the correlation matrix
get_lower_tri <- function(cormat) {
    cormat[upper.tri(cormat)] <- NA
    return(cormat)
    }
# Get upper triangle of the correlation matrix
get_upper_tri <- function(cormat) {
    cormat[lower.tri(cormat)] <- NA
    return(cormat)
    }
##############################################################################################################################
##############################################################################################################################
# Compare HG38 H3K4me3 LC narrowPeaks vs WASP
results_H3K4me3_wasp_v_hg38 <- data.frame()
for (i in seq_along(peaks.wasp.narrow_H3K4me3_LC)) {
  for (j in seq_along(peaks.hg38.narrow_H3K4me3_LC)) {
   results_row_ij <- 
     data.frame(H3K4me3_wasp_peaks = peaks.wasp.narrow_H3K4me3_LC[i] %>% str_extract("CEMT_..."),
                H3K4me3_hg38_peaks = peaks.hg38.narrow_H3K4me3_LC[j] %>% str_extract("CEMT_..."),
                jac = do_bedtools_jaccard(read_narrowpeaks(peaks.wasp.narrow_H3K4me3_LC[i]), 
                                          read_narrowpeaks(peaks.hg38.narrow_H3K4me3_LC[j])) %>% as.data.frame() %>% pull(jaccard))
   results_H3K4me3_wasp_v_hg38 <- bind_rows(results_H3K4me3_wasp_v_hg38, results_row_ij)
}
}
###############################################################
###############################################################
# Compare HG38 H3K4me3 LC narrowPeaks vs PERS
results_H3K4me3_hg38_v_pers <- data.frame()
for (i in seq_along(peaks.hg38.narrow_H3K4me3_LC)) {
  for (j in seq_along(peaks.pers.narrow_H3K4me3_LC)) {
   results_row_ij <- 
     data.frame(H3K4me3_hg38_peaks = peaks.hg38.narrow_H3K4me3_LC[i] %>% str_extract("CEMT_..."),
                H3K4me3_personalized_peaks = peaks.pers.narrow_H3K4me3_LC[j] %>% str_extract("CEMT_..."),
                jac = do_bedtools_jaccard(read_narrowpeaks(peaks.hg38.narrow_H3K4me3_LC[i]), 
                                          read_narrowpeaks(peaks.pers.narrow_H3K4me3_LC[j])) %>% as.data.frame() %>% pull(jaccard))
   results_H3K4me3_hg38_v_pers <- bind_rows(results_H3K4me3_hg38_v_pers, results_row_ij)
}
}
###############################################################
###############################################################
# Compare WASP H3K4me3 LC narrowPeaks vs PERS
results_H3K4me3_wasp_v_pers <- data.frame()
for (i in seq_along(peaks.wasp.narrow_H3K4me3_LC)) {
  for (j in seq_along(peaks.pers.narrow_H3K4me3_LC)) {
   results_row_ij <- 
     data.frame(H3K4me3_wasp_peaks = peaks.wasp.narrow_H3K4me3_LC[i] %>% str_extract("CEMT_..."),
                H3K4me3_personalized_peaks = peaks.pers.narrow_H3K4me3_LC[j] %>% str_extract("CEMT_..."),
                jac = do_bedtools_jaccard(read_narrowpeaks(peaks.wasp.narrow_H3K4me3_LC[i]), 
                                          read_narrowpeaks(peaks.pers.narrow_H3K4me3_LC[j])) %>% as.data.frame() %>% pull(jaccard))
   results_H3K4me3_wasp_v_pers <- bind_rows(results_H3K4me3_wasp_v_pers, results_row_ij)
}
}
##############################################################################################################################
##############################################################################################################################
# Plotting 
# hg38 vs pers
results_H3K4me3_hg38_v_pers %>% 
  pivot_wider(names_from = H3K4me3_personalized_peaks, values_from = jac) %>% 
  column_to_rownames(var = "H3K4me3_hg38_peaks") %>% 
  get_lower_tri() %>% 
  rownames_to_column(var = "H3K4me3_hg38_peaks") %>% 
  pivot_longer(cols = 2:last_col(), names_to = "H3K4me3_personalized_peaks", values_to = "jac") %>% 
  ggplot(aes(x = H3K4me3_hg38_peaks, y = H3K4me3_personalized_peaks, fill = jac)) + 
  geom_tile(color = "white") + 
  geom_text(aes(label = round(jac, 2))) +
  coord_fixed() +
  theme_minimal() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", na.value = "white",
                       midpoint = 0, limit = c(0,1), space = "Lab", 
                       name="Jaccard index") + 
  theme(axis.text.x = element_text(angle = 30, 
                                   vjust = 1, 
                                   hjust = 1),
        plot.title = element_text(hjust = 0.5)) +
  labs(title = "hg38 vs. personalized",
       x = "hg38 alignment peaks", 
       y = "personalized alignment peaks")
ggsave("plots/jaccard_H3K4me3_LC_hg38_v_pers.png")
###############################################################
###############################################################
# hg38 vs wasp
results_H3K4me3_wasp_v_hg38 %>% 
  pivot_wider(names_from = H3K4me3_wasp_peaks, values_from = jac) %>% 
  column_to_rownames(var = "H3K4me3_hg38_peaks") %>% 
  get_lower_tri() %>% 
  rownames_to_column(var = "H3K4me3_hg38_peaks") %>% 
  pivot_longer(cols = 2:last_col(), names_to = "H3K4me3_wasp_peaks", values_to = "jac") %>% 
  ggplot(aes(x = H3K4me3_hg38_peaks, y = H3K4me3_wasp_peaks, fill = jac)) + 
  geom_tile(color = "white") + 
  geom_text(aes(label = round(jac, 2))) +
  coord_fixed() +
  theme_minimal() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", na.value = "white",
                       midpoint = 0, limit = c(0,1), space = "Lab", 
                       name="Jaccard index") + 
  theme(axis.text.x = element_text(angle = 30, 
                                   vjust = 1, 
                                   hjust = 1),
        plot.title = element_text(hjust = 0.5)) + 
  labs(title = "hg38 vs. WASP",
       x = "hg38 alignment peaks", 
       y = "WASP alignment peaks")
ggsave("plots/jaccard_H3K4me3_LC_hg38_v_wasp.png")
###############################################################
###############################################################
# hg38 vs wasp
results_H3K4me3_wasp_v_pers %>% 
  pivot_wider(names_from = H3K4me3_personalized_peaks, values_from = jac) %>% 
  column_to_rownames(var = "H3K4me3_wasp_peaks") %>% 
  get_lower_tri() %>% 
  rownames_to_column(var = "H3K4me3_wasp_peaks") %>% 
  pivot_longer(cols = 2:last_col(), names_to = "H3K4me3_personalized_peaks", values_to = "jac") %>% 
  ggplot(aes(x = H3K4me3_wasp_peaks, y = H3K4me3_personalized_peaks, fill = jac)) + 
  geom_tile(color = "white") + 
  geom_text(aes(label = round(jac, 2))) +
  coord_fixed() +
  theme_minimal() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", na.value = "white",
                       midpoint = 0, limit = c(0,1), space = "Lab", 
                       name="Jaccard index") + 
  theme(axis.text.x = element_text(angle = 30, 
                                   vjust = 1, 
                                   hjust = 1),
        plot.title = element_text(hjust = 0.5)) + 

  labs(title = "WASP vs. personalized",
       x = "WASP alignment peaks", 
       y = "personalized alignment peaks")
ggsave("plots/jaccard_H3K4me3_LC_wasp_v_pers.png")
###############################################################
###############################################################

```

Null hypothesis testing
```{r}
###############################################
#                                             #
#            DATA LOADING ZONE                #
#                                             #
###############################################
const_canonical_chromosomes <- str_c("chr", c(1:22, "X", "Y"))
const_peakfile_colnames <- c("chr", "start", "end", "name", "score", "strand", "signalValue", "pValue", "qValue", "peak")

load("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/2/output2/spaas/raw/H3K4me3_SC_spaa.bed.RData")
consensus.spaa.bed.H3K4me3.SC <- consensus.spaa.bed
rm(consensus.spaa.bed)

# Calculate hg38 autosome + chrX + chrY genome length
hg38_size <- read.table("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/refs/chrom_info/hg38_no_alt.chromsizes.txt") %>% 
  slice(1:24) %>% 
  pull(V2) %>% 
  sum()

# Get all combinations of 8
permutations_spaa <- list()
for (i in 1:7) {
  permutations_spaa[[i]] <- c(rep(TRUE, i), rep(FALSE, 8-i)) %>% 
    permn() %>% 
    do.call(rbind, .) %>% 
    as.data.frame() %>% 
    distinct_all() %>% 
    t()
}
permutations_spaa <- permutations_spaa %>% do.call(cbind, .) %>% as.data.frame()

#########################################################################################################################
# Create merged VCFs and BEDs for H3K4me3 SC
system("bash create_merged_vcf.bash")
# Get number of successes for your particular SPAA search for H3K4me3 SC
valid_snvs.bed <- read.table("resource_merged_calls.bed", sep = "\t", col.names = c("chr", "start", "end")) %>% 
    filter(chr %in% const_canonical_chromosomes) %>% 
    convert2bed() %>% 
    bedr.sort.region(method = "lexicographical", engine = "bedtools")

system("bash create_valid_bed_coverage.bash")
valid_peak.bed <- read.table("resource_valid_bed_coverage.bed", sep = "\t", col.names = c("chr", "start", "end")) %>% 
    filter(chr %in% const_canonical_chromosomes) %>% 
    convert2bed() %>% 
    bedr.sort.region(method = "lexicographical", engine = "bedtools")
#########################################################################################################################
#########################################################################################################################
# Load in all VCFs
# VCFs
arg_VCFS <- read.table("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/2/scripts/filelists/vcf/breast_normal_vcfs.tsv") %>% pull()

arg_VCFS_LOADED <- list() # Initiate list
for(FILE in arg_VCFS) {
  arg_VCFS_LOADED[[FILE]] <- read.vcf(FILE) %>% 
    vcf2bed() %>%
    filter(chr %in% const_canonical_chromosomes) %>%
    bedr.sort.region(method = "lexicographical", engine = "bedtools")
}
#########################################################################################################################
# Load in peaks (H3K4me3 SC)
arg_PEAKS <- read.table("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/project/modules/2/scripts/filelists/peak/breast_normal_H3K4me3_SC.tsv") %>% pull()

arg_PEAKS_LOADED <- list()
for(FILE in arg_PEAKS) {
  arg_PEAKS_LOADED[[FILE]] <- read.table(FILE, sep = "\t", col.names = const_peakfile_colnames) %>% 
    filter(chr %in% const_canonical_chromosomes) %>% 
    select(chr, start, end) %>% 
    convert2bed() %>% 
    bedr.sort.region(method = "lexicographical", engine = "bedtools")
}

#########################################################################################################################
#########################################################################################################################
#########################################################################################################################
# Initialize results dataframe
hypergeometric_p_vals <- data.frame()
#####################################################################################################
# Count number of actual successes for each modality
for (i in 1:ncol(permutations_spaa)) {
  H3K4me3_SC_successes <- consensus.spaa.bed.H3K4me3.SC %>% 
    filter(Individual_14_17_LP_DNA       == permutations_spaa[1, i] &
           Individual_14_18_BC__356K_RNA == permutations_spaa[2, i] &
           Individual_11_18_BC_RNA_DNA   == permutations_spaa[3, i] &
           Individual_22_18_BC_RNA_DNA   == permutations_spaa[4, i] &
           Individual_24_18_BC_RNA_DNA   == permutations_spaa[5, i] &
           Individual_38_18_LC_RNA_DNA   == permutations_spaa[6, i] &
           Individual_30_18_LC_RNA_DNA   == permutations_spaa[7, i] &
           Individual_15_18_LC_RNA_DNA   == permutations_spaa[8, i]) %>% nrow() %>% as.double()
  ####################################################################################################
  # Reinitialize possible peaks from your merged consensus peaks
  current_valid_snvs.bed <- valid_snvs.bed %>% makeGRangesFromDataFrame()
  current_valid_peak.bed <- valid_peak.bed %>% makeGRangesFromDataFrame()
  ####################################################################################################
  # Keep or remove valid regions depending on combo
  # In order to create valid SNVs and ranges that would be possible to create an SPAA of the current modality with
  for (j in 1:nrow(permutations_spaa)) {
  if (permutations_spaa[j, i] == TRUE) {
    current_valid_snvs.bed <- do_bedtools_intersect(current_valid_snvs.bed, 
                                                    makeGRangesFromDataFrame(arg_VCFS_LOADED[[j]]),
                                                    sortout = TRUE)
    
    current_valid_peak.bed <- do_bedtools_intersect(current_valid_peak.bed, 
                                                    makeGRangesFromDataFrame(arg_PEAKS_LOADED[[j]]),
                                                    sortout = TRUE)
  } else {
    current_valid_snvs.bed <- setdiff_ranges(current_valid_snvs.bed, 
                                             makeGRangesFromDataFrame(arg_VCFS_LOADED[[j]]))
    
    current_valid_peak.bed <- setdiff_ranges(current_valid_peak.bed, 
                                             makeGRangesFromDataFrame(arg_PEAKS_LOADED[[j]]))
  }
  }
  
  # Count coverage of SNVs and peaks in sample that are valid for this modality, taking into account half-closed BED format by subtracting 1 from width GRanges gives
  H3K4me3_SC.spaa.number.snvs <- current_valid_snvs.bed %>% width() %>% `-`(1) %>% sum()
  H3K4me3_SC.spaa.peak.coverage <- current_valid_peak.bed %>% width() %>% `-`(1) %>% sum()
  
  # Make dataframe containing hypergeometric test p_value for each modality
  # Contains chance that, for any given SPAA modality (a.k.a SPAAs of H3K4me3 SC where Ind_1 = TRUE, Ind_2 = FALSE, Ind_3 = FALSE, etc...)
  # The p-value for the test that experimental (actual) number of discovered SPAAs is more than would be expected given the number of variants and coverage of peaks
  # That are "available" to that modality, i.e. which could possibly form an SPAA of that modality, if those were distributed at random
  current_p_val <- data.frame(combo = i,
                              n_individuals_involved = sum(permutations_spaa[, i]),
                              p_val = phyper(H3K4me3_SC_successes, 
                                            H3K4me3_SC.spaa.peak.coverage, 
                                            hg38_size - H3K4me3_SC.spaa.peak.coverage, 
                                            H3K4me3_SC.spaa.number.snvs, 
                                            lower.tail = FALSE))
  
  hypergeometric_p_vals <- bind_rows(hypergeometric_p_vals, current_p_val)
}

# Create adjusted for FDR column
hypergeometric_p_vals <- hypergeometric_p_vals %>% 
  mutate(p_val_fdr_adj = p.adjust(p_val, method = "fdr"))

# Graph unadjusted p values
hypergeometric_p_vals %>% 
  ggplot(aes(x = as.factor(n_individuals_involved), y = p_val)) + 
  geom_violin() + 
  geom_point(size = 0.5) +
  geom_hline(yintercept = 0.05, linetype = "dashed", color = "red") +
  labs(title = "Actual SPAA hits tested against expected hypergeometric distribution of hits", x = "Combinations of Individuals with Variant/Peak Intersection in SPAA", y = "p-value (hypergeometric test)") +
  theme_bw()
ggsave("plots/hypergeometric_H3K4me3_SC.png")

# Graph adjusted p values
hypergeometric_p_vals %>% 
  ggplot(aes(x = as.factor(n_individuals_involved), y = p_val_fdr_adj)) + 
  geom_violin() + 
  geom_point(size = 0.5) +
  geom_hline(yintercept = 0.05, linetype = "dashed", color = "red") +
  labs(title = "Actual SPAA hits tested against expected hypergeometric distribution of hits", x = "Combinations of Individuals with Variant/Peak Intersection in SPAA", y = "p-value (hypergeometric test, FDR adjusted)") +
  theme_bw()
ggsave("plots/hypergeometric_H3K4me3_SC_adjusted.png")

```
Annotate SPAAs with rare/common variant column
```{r}

const_dbSNP_common_rsIDs <- read.vcf("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/genome_data/dbSNP/common/00-common_all_chr.vcf.gz") %>% 
  vcf2bed(other = c("ID")) %>%                                                   # Include the other rows in your output BED
  filter(chr %in% const_canonical_chromosomes) %>%                               # get rid of the non-canonical chromosomes
  pull(ID)
  
consensus.all.spaas.rpkm.bed <- consensus.all.spaas.rpkm.bed %>% 
  mutate(is_common_variant = rs %in% const_dbSNP_common_rsIDs, 
         is_novel_variant = rs == "NA",
         .after = rs)

```

Explore top hits
```{r}

consensus.all.spaas.rpkm.bed %>% 
  filter(t_test_p_val_fdr_adj < 0.01) %>% 
  arrange(RPKM_variance) %>% 
  write_csv("data/top_spaas.csv")

```


Count number of individuals in singleton events
```{r}

consensus.all.spaas.rpkm.bed %>% 
  filter(individuals_involved == 1) %>% 
  filter(Individual_14_17_LP_DNA == F,
         Individual_14_18_BC__356K_RNA == F,
         Individual_11_18_BC_RNA_DNA == F,
         Individual_22_18_BC_RNA_DNA == F,
         Individual_24_18_BC_RNA_DNA == F,
         Individual_38_18_LC_RNA_DNA == F,
         Individual_30_18_LC_RNA_DNA == T,
         Individual_15_18_LC_RNA_DNA == F) %>% 
  nrow()
  

```

