# job 1

#!/gsc/software/linux-x86_64-centos7/R-4.1.0/lib64/R/bin/R
# R 4.1.0
# x86_64-centos7-linux-gnu
library(plyranges)
library(VariantAnnotation)
library(HelloRanges)
library(MutationalPatterns)
library(genomation)
library(Gviz)
library(BSgenome.Hsapiens.UCSC.hg38)
library(biomaRt)
library(LDlinkR)
library(tidyverse)
##############################################################################################################################################################################################
##############################################################################################################################################################################################
# Inverse Jaccard similarity index
jaccard_distance <- function(gr1, gr2) {
    1 - do_bedtools_jaccard(gr1, gr2)$jaccard
}

# Non-redundant 2-individual combinations
individual_combos <- combn(vector_individuals, 2) %>% t()


# Instantiate dataframe
cluster_matrix_long_histones2 <- data.frame()

# Test every combination of 
for (MODALITY in names(list_peak_wasp)) {
    for (COMBINATION_ROW in 1:nrow(individual_combos)) {
        
        current_frame <- data.frame(modality = MODALITY,
                                    individual1 = individual_combos[COMBINATION_ROW, 1],
                                    individual2 = individual_combos[COMBINATION_ROW, 2],
                                    jaccard_dist = jaccard_distance(list_peak_wasp[[MODALITY]][[individual_combos[COMBINATION_ROW, 1]]],
                                                                    list_peak_wasp[[MODALITY]][[individual_combos[COMBINATION_ROW, 2]]]))
        
        cluster_matrix_long_histones2 <- bind_rows(cluster_matrix_long_histones2, current_frame)
        
    }
}

cluster_matrix_short_histones2 <- cluster_matrix_long_histones2 %>% 
    group_by(individual1, individual2) %>% 
    summarize(mean_jaccard = mean(jaccard_dist)) %>%
    mutate(individual1 = individual1 %>% factor(vector_individuals),
           individual2 = individual2 %>% factor(vector_individuals)) %>%
    arrange(desc(individual1), desc(individual2)) %>% 
    pivot_wider(names_from = individual2, values_from = mean_jaccard) %>% 
    column_to_rownames("individual1") %>% 
    as.dist()

