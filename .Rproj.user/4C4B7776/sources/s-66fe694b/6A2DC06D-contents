---
title: "CRISPR Designs"
output: html_notebook
---
```{r}
#!/gsc/software/linux-x86_64-centos7/R-4.1.3/lib64/R/bin/R
# R 4.1.3
# x86_64-centos7-linux-gnu
library(plyranges)
library(VariantAnnotation)
library(MutationalPatterns)
library(genomation)
library(Gviz)
library(BSgenome.Hsapiens.UCSC.hg38)
library(TxDb.Hsapiens.UCSC.hg38.knownGene)
library(systemPipeR)
library(biomaRt)
library(LDlinkR)
library(AllelicImbalance)
library(broom)
library(gt)
library(gtsummary)
library(UpSetR)
library(tidyverse)

const_canonical_chromosomes <- str_c("chr", c(1:22, "X", "Y"))

vector_marks <- c("H3K4me3", "H3K4me1", "H3K27ac", "H3K9me3", "H3K27me3", "H3K36me3")
vector_celltypes <- c("BC", "LP", "LC", "SC")
vector_individuals <- c("Individual_14_17_LP_DNA",
                        "Individual_14_18_BC__356K_RNA",
                        "Individual_11_18_BC_RNA_DNA",
                        "Individual_22_18_BC_RNA_DNA",
                        "Individual_24_18_BC_RNA_DNA",
                        "Individual_38_18_LC_RNA_DNA",
                        "Individual_30_18_LC_RNA_DNA",
                        "Individual_15_18_LC_RNA_DNA")


```

Get alleles
```{r}
final_ranges <- GRanges()
for (i in 1:8) {
  
  current_ranges <- list_variant_calls[[i]] %>% join_overlap_intersect(top_hits_ranges) %>% plyranges::select(rs, ref, alt)
  final_ranges   <- bind_ranges(final_ranges, current_ranges)
  
}



```

Check the zygosity of all top hit variants to figure out how you want to do your knock-in
```{r}
final_var_ranges <- GRanges()
for (i in seq_along(names(list_variant_calls))) {
 
  current_var_ranges <-
    list_variant_calls[[i]] %>% 
    join_overlap_intersect(top_hits_ranges)
  
  final_var_ranges <- bind_ranges(final_var_ranges, current_var_ranges)
  
}
  
final_var_ranges %>% plyranges::select(sampleNames, rs, QUAL, AC, AF, refDepth, altDepth)

```


rs1948 gRNA
```{r}
BSgenome.Hsapiens.UCSC.hg38 %>% getSeq(plyranges::filter(top_hits_ranges, rs == "rs75071948") %>% head(1) %>% anchor_start() %>% stretch(50) %>% anchor_end() %>% stretch(50))


```

Check top hit cis-hBTLs for nearby variants that could affect sgRNA or ssODN design
```{r}
# No hits that affect near the variants you are knocking in
cl_pipeline_variant_calls$mcf10a %>% 
  join_overlap_intersect(top_hits_ranges %>% reduce_ranges() %>% anchor_start() %>% stretch(51) %>% anchor_end() %>% stretch(51))
```

Check top hit cis-hBTLs for nearby variants that could affect primer design
```{r}
cl_pipeline_variant_calls$mcf10a %>% 
  join_overlap_intersect(top_hits_ranges %>% reduce_ranges() %>% anchor_start() %>% stretch(500) %>% anchor_end() %>% stretch(500))
```

Get sequences for primer design
```{r}
BSgenome.Hsapiens.UCSC.hg38 %>% getSeq(plyranges::filter(top_hits_ranges, rs == "rs75071948") %>% head(1) %>% anchor_start() %>% stretch(500) %>% anchor_end() %>% stretch(500))
```





