#!/gsc/software/linux-x86_64-centos7/R-4.1.3/lib64/R/bin/R
# R 4.1.3
# x86_64-centos7-linux-gnu
library(plyranges)
library(VariantAnnotation)
library(MutationalPatterns)
library(genomation)
library(Gviz)
library(BSgenome.Hsapiens.UCSC.hg38)
library(TxDb.Hsapiens.UCSC.hg38.knownGene)
library(systemPipeR)
library(biomaRt)
library(LDlinkR)
library(AllelicImbalance)
library(broom)
library(gt)
library(gtsummary)
library(UpSetR)
library(tidyverse)
library(ggdendro)

const_canonical_chromosomes <- str_c("chr", c(1:22, "X"))

vector_marks <- c("H3K4me3", "H3K4me1", "H3K27ac", "H3K9me3", "H3K27me3", "H3K36me3")
vector_celltypes <- c("BC", "LP", "LC", "SC")
vector_individuals <- c("Individual_14_17_LP_DNA",
                        "Individual_14_18_BC__356K_RNA",
                        "Individual_11_18_BC_RNA_DNA",
                        "Individual_22_18_BC_RNA_DNA",
                        "Individual_24_18_BC_RNA_DNA",
                        "Individual_38_18_LC_RNA_DNA",
                        "Individual_30_18_LC_RNA_DNA",
                        "Individual_15_18_LC_RNA_DNA")

vector_individuals_encoded <- c("Individual_1",
                                "Individual_2",
                                "Individual_3",
                                "Individual_4",
                                "Individual_5",
                                "Individual_6",
                                "Individual_7",
                                "Individual_8")

##############################################################################################################################################################################################
##############################################################################################################################################################################################
# Read in all cohort variants by merging & collapsing the variant calls from all individuals
gtex_list_variant_calls_merged <-
  list_variant_calls %>% 
  unlist() %>% 
  reduce_ranges() %>% 
  plyranges::mutate(cemt_cohort_variant = TRUE) %>% 
  join_overlap_left(consensus.all.spaas.rpkm.bed) %>%  # add SPAA annotations
  plyranges::mutate(cis_hBTL_present  = !is.na(region_identifier)) %>% 
  keepSeqlevels(const_canonical_chromosomes, pruning.mode = "coarse") %>% 
  plyranges::select(-c(6:34)) # remove unnecessary annotation columns to save on memory

# Read in key table linking GTEx SNP_IDs to dbSNP 151 rsIDs
gtex_snp_lookup_table <- 
  read_table("/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/genome_data/GTEx_v8/GTEx_Analysis_2017-06-05_v8_WholeGenomeSeq_838Indiv_Analysis_Freeze.lookup_table.txt.gz")

# Loop through all GTEx tissue types to perform test
# Set up GTEx indexing information
gtex_data_dir <- "/projects/epigenomics3/epigenomics3_results/users/ahauduc/arp/genome_data/GTEx_v8/eqtls/"

gtex_tissue_names <- 
  list.files(gtex_data_dir, pattern = "*.v8.EUR.signif_pairs.txt.gz") %>% 
  str_remove(".v8.EUR.signif_pairs.txt.gz")

gtex_eqtls_file_suffix <- ".v8.EUR.signif_pairs.txt.gz"

# Initialize signif_pairs data
gtex_signif_pairs <- list()

# Initialize results dataframe
gtex_fisher_tests <- tibble()

# Loop through GTEx tissues
for (i in seq_along(gtex_tissue_names)) {
  # Announce tissue type
  message(str_c("Assembling variant positions for GTEx Tissue #", i, " ", gtex_tissue_names[i]))
  
  # Read in GTEx tissue data, annotate with lookup table, turn into GRanges, then create a column with the name of the tissue containing all TRUE, and select that column only
  gtex_signif_pairs[[gtex_tissue_names[i]]] <- 
    read_table(str_c(gtex_data_dir, gtex_tissue_names[i], gtex_eqtls_file_suffix)) %>% 
    left_join(gtex_snp_lookup_table, by = "variant_id") %>% 
    makeGRangesFromDataFrame(seqnames.field = "chr",
                             start.field = "variant_pos",
                             end.field = "variant_pos",
                             keep.extra.columns = TRUE,
                             seqinfo = seqinfo(BSgenome.Hsapiens.UCSC.hg38)) %>% 
    plyranges::mutate("{gtex_tissue_names[i]}" := TRUE) %>%  # add SPAA annotations
    plyranges::select(last_col()) %>% 
    keepSeqlevels(const_canonical_chromosomes, pruning.mode = "coarse")
  
  # Intersect the all TRUE column with the loci specific to the tissue, and replace the NAs with FALSEs
  gtex_list_variant_calls_merged <-
    gtex_list_variant_calls_merged %>% 
    join_overlap_left(gtex_signif_pairs[[gtex_tissue_names[i]]]) %>% 
    plyranges::mutate("{gtex_tissue_names[i]}" := !is.na(get(gtex_tissue_names[i])))
  
  # Add rows to gtex_fisher_tests with the test results for each type of Fisher test  
  # Announce Fisher Tests
  message(str_c("Performing Fisher Exact Tests for ", i, " ", gtex_tissue_names[i]))
  
  # Add rows with the different tests - All
  current_gtex_fisher_test <- 
    gtex_list_variant_calls_merged %>% 
    as_tibble() %>% 
    group_by(cis_hBTL_present, get(gtex_tissue_names[i])) %>% 
    summarize(n = n()) %>% 
    xtabs(n ~ cis_hBTL_present + `get(gtex_tissue_names[i])`, data = .) %>% 
    fisher.test(alternative = "greater") %>% 
    broom::tidy() %>% 
    mutate(gtex_tissue = gtex_tissue_names[i], fisher_test_type = "All", .before = 1)
  
  gtex_fisher_tests <- 
    gtex_fisher_tests %>% 
    bind_rows(current_gtex_fisher_test)
  
  # H3K4me3
  current_gtex_fisher_test <- 
    gtex_list_variant_calls_merged %>%
    as_tibble() %>% 
    mutate(cis_hBTL_with_desired_mark_present = case_when(mark == "H3K4me3" ~ TRUE,
                                                          mark != "H3K4me3" ~ FALSE,
                                                          is.na(mark)       ~ FALSE)) %>% 
    group_by(cis_hBTL_with_desired_mark_present, get(gtex_tissue_names[i])) %>% 
    summarize(n = n()) %>% 
    xtabs(n ~ cis_hBTL_with_desired_mark_present + `get(gtex_tissue_names[i])`, data = .) %>% 
    fisher.test(alternative = "greater") %>% 
    broom::tidy() %>% 
    mutate(gtex_tissue = gtex_tissue_names[i], fisher_test_type = "H3K4me3", .before = 1)
  
  gtex_fisher_tests <- 
    gtex_fisher_tests %>% 
    bind_rows(current_gtex_fisher_test)
  
  # H3K27ac
  current_gtex_fisher_test <- 
    gtex_list_variant_calls_merged %>%
    as_tibble() %>% 
    mutate(cis_hBTL_with_desired_mark_present = case_when(mark == "H3K27ac" ~ TRUE,
                                                          mark != "H3K27ac" ~ FALSE,
                                                          is.na(mark)       ~ FALSE)) %>% 
    group_by(cis_hBTL_with_desired_mark_present, get(gtex_tissue_names[i])) %>% 
    summarize(n = n()) %>% 
    xtabs(n ~ cis_hBTL_with_desired_mark_present + `get(gtex_tissue_names[i])`, data = .) %>% 
    fisher.test(alternative = "greater") %>% 
    broom::tidy() %>% 
    mutate(gtex_tissue = gtex_tissue_names[i], fisher_test_type = "H3K27ac", .before = 1)
  
  gtex_fisher_tests <- 
    gtex_fisher_tests %>% 
    bind_rows(current_gtex_fisher_test)
  
  # H3K4me1
  current_gtex_fisher_test <- 
    gtex_list_variant_calls_merged %>%
    as_tibble() %>% 
    mutate(cis_hBTL_with_desired_mark_present = case_when(mark == "H3K4me1" ~ TRUE,
                                                          mark != "H3K4me1" ~ FALSE,
                                                          is.na(mark)       ~ FALSE)) %>% 
    group_by(cis_hBTL_with_desired_mark_present, get(gtex_tissue_names[i])) %>% 
    summarize(n = n()) %>% 
    xtabs(n ~ cis_hBTL_with_desired_mark_present + `get(gtex_tissue_names[i])`, data = .) %>% 
    fisher.test(alternative = "greater") %>% 
    broom::tidy() %>% 
    mutate(gtex_tissue = gtex_tissue_names[i], fisher_test_type = "H3K4me1", .before = 1)
  
  gtex_fisher_tests <- 
    gtex_fisher_tests %>% 
    bind_rows(current_gtex_fisher_test)
  
  # H3K9me3
  current_gtex_fisher_test <- 
    gtex_list_variant_calls_merged %>%
    as_tibble() %>% 
    mutate(cis_hBTL_with_desired_mark_present = case_when(mark == "H3K9me3" ~ TRUE,
                                                          mark != "H3K9me3" ~ FALSE,
                                                          is.na(mark)       ~ FALSE)) %>% 
    group_by(cis_hBTL_with_desired_mark_present, get(gtex_tissue_names[i])) %>% 
    summarize(n = n()) %>% 
    xtabs(n ~ cis_hBTL_with_desired_mark_present + `get(gtex_tissue_names[i])`, data = .) %>% 
    fisher.test(alternative = "greater") %>% 
    broom::tidy() %>% 
    mutate(gtex_tissue = gtex_tissue_names[i], fisher_test_type = "H3K9me3", .before = 1)
  
  gtex_fisher_tests <- 
    gtex_fisher_tests %>% 
    bind_rows(current_gtex_fisher_test)
  
  # H3K27me3
  current_gtex_fisher_test <- 
    gtex_list_variant_calls_merged %>%
    as_tibble() %>% 
    mutate(cis_hBTL_with_desired_mark_present = case_when(mark == "H3K27me3" ~ TRUE,
                                                          mark != "H3K27me3" ~ FALSE,
                                                          is.na(mark)       ~ FALSE)) %>% 
    group_by(cis_hBTL_with_desired_mark_present, get(gtex_tissue_names[i])) %>% 
    summarize(n = n()) %>% 
    xtabs(n ~ cis_hBTL_with_desired_mark_present + `get(gtex_tissue_names[i])`, data = .) %>% 
    fisher.test(alternative = "greater") %>% 
    broom::tidy() %>% 
    mutate(gtex_tissue = gtex_tissue_names[i], fisher_test_type = "H3K27me3", .before = 1)
  
  gtex_fisher_tests <- 
    gtex_fisher_tests %>% 
    bind_rows(current_gtex_fisher_test)
  
  # H3K36me3
  current_gtex_fisher_test <- 
    gtex_list_variant_calls_merged %>%
    as_tibble() %>% 
    mutate(cis_hBTL_with_desired_mark_present = case_when(mark == "H3K36me3" ~ TRUE,
                                                          mark != "H3K36me3" ~ FALSE,
                                                          is.na(mark)       ~ FALSE)) %>% 
    group_by(cis_hBTL_with_desired_mark_present, get(gtex_tissue_names[i])) %>% 
    summarize(n = n()) %>% 
    xtabs(n ~ cis_hBTL_with_desired_mark_present + `get(gtex_tissue_names[i])`, data = .) %>% 
    fisher.test(alternative = "greater") %>% 
    broom::tidy() %>% 
    mutate(gtex_tissue = gtex_tissue_names[i], fisher_test_type = "H3K36me3", .before = 1)
  
  gtex_fisher_tests <- 
    gtex_fisher_tests %>% 
    bind_rows(current_gtex_fisher_test)
  
  # BC
  current_gtex_fisher_test <- 
    gtex_list_variant_calls_merged %>% 
    as_tibble() %>% 
    mutate(cis_hBTL_with_desired_celltype_present = case_when(celltype == "BC" ~ TRUE,
                                                              celltype != "BC" ~ FALSE,
                                                              is.na(celltype)  ~ FALSE)) %>% 
    group_by(cis_hBTL_with_desired_celltype_present, get(gtex_tissue_names[i])) %>% 
    summarize(n = n()) %>% 
    xtabs(n ~ cis_hBTL_with_desired_celltype_present + `get(gtex_tissue_names[i])`, data = .) %>% 
    fisher.test(alternative = "greater") %>% 
    broom::tidy() %>% 
    mutate(gtex_tissue = gtex_tissue_names[i], fisher_test_type = "BC", .before = 1)
  
  gtex_fisher_tests <- 
    gtex_fisher_tests %>% 
    bind_rows(current_gtex_fisher_test)
  
  # LP
  current_gtex_fisher_test <- 
    gtex_list_variant_calls_merged %>% 
    as_tibble() %>% 
    mutate(cis_hBTL_with_desired_celltype_present = case_when(celltype == "LP" ~ TRUE,
                                                              celltype != "LP" ~ FALSE,
                                                              is.na(celltype)  ~ FALSE)) %>% 
    group_by(cis_hBTL_with_desired_celltype_present, get(gtex_tissue_names[i])) %>% 
    summarize(n = n()) %>% 
    xtabs(n ~ cis_hBTL_with_desired_celltype_present + `get(gtex_tissue_names[i])`, data = .) %>% 
    fisher.test(alternative = "greater") %>% 
    broom::tidy() %>% 
    mutate(gtex_tissue = gtex_tissue_names[i], fisher_test_type = "LP", .before = 1)
  
  gtex_fisher_tests <- 
    gtex_fisher_tests %>% 
    bind_rows(current_gtex_fisher_test)
  
  # LC
  current_gtex_fisher_test <- 
    gtex_list_variant_calls_merged %>% 
    as_tibble() %>% 
    mutate(cis_hBTL_with_desired_celltype_present = case_when(celltype == "LC" ~ TRUE,
                                                              celltype != "LC" ~ FALSE,
                                                              is.na(celltype)  ~ FALSE)) %>% 
    group_by(cis_hBTL_with_desired_celltype_present, get(gtex_tissue_names[i])) %>% 
    summarize(n = n()) %>% 
    xtabs(n ~ cis_hBTL_with_desired_celltype_present + `get(gtex_tissue_names[i])`, data = .) %>% 
    fisher.test(alternative = "greater") %>% 
    broom::tidy() %>% 
    mutate(gtex_tissue = gtex_tissue_names[i], fisher_test_type = "LC", .before = 1)
  
  gtex_fisher_tests <- 
    gtex_fisher_tests %>% 
    bind_rows(current_gtex_fisher_test)
  
  # SC
  current_gtex_fisher_test <- 
    gtex_list_variant_calls_merged %>% 
    as_tibble() %>% 
    mutate(cis_hBTL_with_desired_celltype_present = case_when(celltype == "SC" ~ TRUE,
                                                              celltype != "SC" ~ FALSE,
                                                              is.na(celltype)  ~ FALSE)) %>% 
    group_by(cis_hBTL_with_desired_celltype_present, get(gtex_tissue_names[i])) %>% 
    summarize(n = n()) %>% 
    xtabs(n ~ cis_hBTL_with_desired_celltype_present + `get(gtex_tissue_names[i])`, data = .) %>% 
    fisher.test(alternative = "greater") %>% 
    broom::tidy() %>% 
    mutate(gtex_tissue = gtex_tissue_names[i], fisher_test_type = "SC", .before = 1)
  
  gtex_fisher_tests <- 
    gtex_fisher_tests %>% 
    bind_rows(current_gtex_fisher_test)
  
  # Remove the last column of gtex_list_variant_calls_merged to save memory and prevent expanding the dataframe
  gtex_list_variant_calls_merged <-
    gtex_list_variant_calls_merged %>% 
    plyranges::select(-last_col())
  
  # Remove current signif pairs to save memory
  gtex_signif_pairs[[gtex_tissue_names[i]]] <- "Done"
}
