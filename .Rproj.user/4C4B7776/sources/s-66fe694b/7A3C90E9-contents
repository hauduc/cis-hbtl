---
title: "LD Link Analysis"
output: html_notebook
---
```{r}
#!/gsc/software/linux-x86_64-centos7/R-4.1.0/lib64/R/bin/R
# R 4.1.0
# x86_64-centos7-linux-gnu
library(plyranges)
library(VariantAnnotation)
library(MutationalPatterns)
library(genomation)
library(Gviz)
library(BSgenome.Hsapiens.UCSC.hg38)
library(biomaRt)
library(LDlinkR)
library(gt)
library(tidyverse)
```

API token (from web login)
```{r}
ldlinkr_api_token <- "4609d834dac8"
```

Linkage and GTEx eQTL linkage analysis
```{r}
# Get SNPs in tight linkage with variant in first top hit
ldlink_top1_linked_snps <- 
  LDproxy(snp = top_hits[1],
          pop = "CEU",
          r2d = "r2",
          token = ldlinkr_api_token)
```

Pull out GTEx Breast_Mammary_Tissue eQTL genes 
```{r}
# Get Breast_Mammary_Tissue eQTLs for top hits and their linked snps
ldlink_top_hits_eqtls <-
  LDexpress(snps = top_hits,
            pop = "CEU",
            tissue = "Breast_Mammary_Tissue",
            token = ldlinkr_api_token)
```

Create a pie chart of the genes
```{r}
# Look at most frequent eQTLs by gene
ldlink_top_hits_eqtls_summary <- ldlink_top_hits_eqtls %>% 
  group_by(Gene_Symbol) %>% 
  summarize(n = n()) %>% 
  arrange(desc(n))

# Format for easy pie chart viewing
# Change low freq rows to "other"
for (i in seq_along(ldlink_top_hits_eqtls_summary$n)) {
  if (ldlink_top_hits_eqtls_summary$n[i] >= 25) {
    ldlink_top_hits_eqtls_summary$Gene_Symbol[i] <- ldlink_top_hits_eqtls_summary$Gene_Symbol[i]
  } else {
    ldlink_top_hits_eqtls_summary$Gene_Symbol[i] <- "other"
  }
}

# Collapse the row "other"
ldlink_top_hits_eqtls_summary <- ldlink_top_hits_eqtls_summary %>%
  group_by(Gene_Symbol) %>% 
  summarize(n = sum(n)) %>% 
  arrange(desc(n))

# Make "other" last and convert Gene_Symbol to factor to allow for custom pie chart order
ldlink_top_hits_eqtls_summary <- 
  bind_rows(ldlink_top_hits_eqtls_summary %>% filter(Gene_Symbol != "other"),
            ldlink_top_hits_eqtls_summary %>% filter(Gene_Symbol == "other")) %>% 
  mutate(Gene_Symbol = factor(Gene_Symbol, levels = Gene_Symbol))

# Make a pie chart of top results
ldlink_top_hits_eqtls_summary %>% 
  ggplot(aes(x = "", y = n, fill = Gene_Symbol)) +
  geom_bar(width = 1, stat = "identity") + 
  coord_polar("y", start = 0) +
  scale_fill_brewer(palette = "Dark2") +
  geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
  theme_void()

ggsave("plots/pie_eqtl_genes.png")
```

Create table of top hits that are linked to eQTLs
```{r}
ldlink_top_hits_eqtls %>% 
  group_by(Query, Gene_Symbol) %>% 
  summarize(Number_of_Variants_in_LD_that_are_eQTLs = n()) %>% 
  arrange(desc(Number_of_Variants_in_LD_that_are_eQTLs)) %>%
  gt() %>% 
  tab_options(heading.title.font.weight = "bold",
              row_group.font.weight = "bold",
              row_group.background.color = "gray",
              #column_labels.border.lr.style = "solid",
              column_labels.vlines.style = "solid",
              #heading.border.lr.style = "solid",
              column_labels.vlines.width = 1,
              column_labels.font.weight =  "light") %>% 
  gtsave("plots/table_top_hits_eqtls.png")
```

Write table of top genes
```{r}
# Pull out top eQTL genes for online GO analysis
ldlink_top_hits_eqtls %>% 
  pull(Gene_Symbol) %>% 
  unique() %>% 
  write.table("data/ldlink_top_hit_eqtl_genes.csv",
              quote = FALSE,
              row.names = FALSE,
              col.names = FALSE)

```

~~~~~~~~~~~
pbSNP cis-hBTLs top hits
```{r}
ldlink_top_hits_eqtls_for_pbSNPs <- 
  LDexpress(snps = read.table("data/yan_pbSNP_cell_type_specific_top_hits.tsv") %>% pull(),
            pop = "CEU",
            tissue = "Breast_Mammary_Tissue",
            token = ldlinkr_api_token)
```

Create table of pbSNP top hits that are linked to eQTLs
```{r}
ldlink_top_hits_eqtls_for_pbSNPs %>% 
  group_by(Query, Gene_Symbol) %>% 
  summarize(Number_of_Variants_in_LD_that_are_eQTLs = n()) %>% 
  arrange(desc(Number_of_Variants_in_LD_that_are_eQTLs)) %>%
  gt() %>% 
  tab_options(heading.title.font.weight = "bold",
              row_group.font.weight = "bold",
              row_group.background.color = "gray",
              #column_labels.border.lr.style = "solid",
              column_labels.vlines.style = "solid",
              #heading.border.lr.style = "solid",
              column_labels.vlines.width = 1,
              column_labels.font.weight =  "light") %>% 
  gtsave("plots/table_top_pbSNP_hits_eqtls.png")
```


