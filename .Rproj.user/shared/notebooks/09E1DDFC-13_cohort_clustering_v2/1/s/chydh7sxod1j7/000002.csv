"0","make_cohort_roi_table <- function(mark, rois_granges, blacklist_regions_gr = blacklist_encode) {"
"0","  # Establish tiled regions of interest GRanges"
"0","  # Remove blacklisted areas"
"0","  rois_gr_clean <- "
"0","    rois_granges %>% "
"0","    keepSeqlevels(const_canonical_chromosomes, pruning.mode = ""coarse"") %>%"
"0","    setdiff_ranges(blacklist_regions_gr)"
"0","  "
"0","  # Tile promoter ranges into 150bp tiles"
"0","  rois_gr_tiled <-"
"0","    rois_gr_clean %>% "
"0","    tile_ranges(width = 150) %>% "
"0","    plyranges::mutate(tile_id = seq_along(.))"
"0","  "
"0","  # Create GRanges to receive mean per-tile bigWig scores for all bigWigs"
"0","  rois_bw_filled <- rois_gr_tiled"
"0","  "
"0","  # Create table containing mean_treatment_pileup in roi tiles for entire cohort"
"0","  for (current_sample in names(list_treat_pileup_bw_wasp_files_v2[[mark]])) {"
"0","  "
"0","  # Read in bigWig corresponding to current sample being worked on"
"0","  current_bw <- read_bigwig(list_treat_pileup_bw_wasp_files_v2[[mark]][[current_sample]]) %>% keepSeqlevels(const_canonical_chromosomes, pruning.mode = ""coarse"")"
"0","  "
"0","  # Add bw column to rois GRanges"
"0","  current_rois_bw_column <-"
"0","    current_bw %>% "
"0","    join_overlap_intersect(rois_gr_clean %>% tile_ranges(width = 1)) %>% "
"0","    join_overlap_left(rois_gr_tiled) %>% "
"0","    as_tibble() %>% "
"0","    group_by(tile_id) %>% "
"0","    summarize(mean_pileup_depth = mean(score))"
"0","  "
"0","  # Backfill empty tiles as NAs on full list of tile IDs by joining by tile ID"
"0","  current_rois_bw_column_depth_correct_length <-"
"0","    left_join(as_tibble(rois_bw_filled), current_rois_bw_column, by = ""tile_id"") %>% "
"0","    pull(mean_pileup_depth)"
"0","  "
"0","  # Add mean pileup depth per tile for current sample to rois_bw_filled as a new column"
"0","  rois_bw_filled <- "
"0","    rois_bw_filled %>% "
"0","    plyranges::mutate(""{current_sample}"" := current_rois_bw_column_depth_correct_length)"
"0","  }"
"0","  "
"0","  # Return completed table"
"0","  rois_bw_filled"
"0","}"
