"0","# Calculate (rowwise) mean, relative standard deviation (RSD), and variance-to-mean ratio for each tile"
"0","# Testing on H3K4me3"
"0","make_n_top_varying_regions_from_cohort_roi_table_for_mean_treat_pileup <- function(rois_filtered_tiled_populated, n_regions = 2000) {"
"0","  # Single-shot process on rois table filled with bigWig information"
"0","  rois_filtered_tiled_populated %>% "
"0","    as_tibble() %>% "
"0","    rowwise() %>% # Calculate rowwise for each tile"
"0","    mutate(samples_mean = mean(c_across(Individual_1_BC:hTERT_L2)),"
"0","           samples_RSD  = (100 * sd(c_across(Individual_1_BC:hTERT_L2)))/samples_mean) %>% # Calculate RSD to find top-varying tiles, unaffected by mean"
"0","    ungroup() %>% "
"0","    filter(samples_mean > 1) %>% # keep only areas with a large mean to ignore sparse regions"
"0","    arrange(desc(samples_RSD)) %>%  # choose top-varying regions"
"0","    head(n_regions) %>% # Prioritize n top-varying regions and create GRanges containing just top-varying regions"
"0","    select(-width, -strand) %>% # Make conversion to GRanges possible"
"0","    makeGRangesFromDataFrame(keep.extra.columns = TRUE, ignore.strand = TRUE, starts.in.df.are.0based = FALSE, seqinfo = seqinfo(BSgenome.Hsapiens.UCSC.hg38)) %>%"
"0","    keepSeqlevels(const_canonical_chromosomes, pruning.mode = ""coarse"") %>% "
"0","    sort() # Make back into proper sorted GRanges with hg38 genome and only canonical chromosomes"
"0","}"
