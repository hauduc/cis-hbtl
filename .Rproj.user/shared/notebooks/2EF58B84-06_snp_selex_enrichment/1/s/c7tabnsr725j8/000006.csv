"0","# Label Yan pbSNPs by cell type within disrupted TF is enriched"
"0","yan_pbSNPs <- yan_pbSNPs %>% "
"0","  mutate(`Cell type TF enriched in` = case_when(`TF affected` %>% str_detect(""(p63|p53|TEAD4|TEAD2)"")                 ~ ""BC"","
"0","                                                `TF affected` %>% str_detect(""(EHF|ELF5|ELF1|GRHL2|SPDEF)"")           ~ ""LP"","
"0","                                                `TF affected` %>% str_detect(""(?!JUND)(FOXA1|FOXA2|JUN|FOXP1|BACH2)"") ~ ""LC"")) # Add a negative look-around to exclude JUND-only rows"
"0",""
"0","# No BC test because none of the BC-upregulated TFs were tested in Yan et al."
"0",""
"0","# LP"
"0","yan_vars <- yan_vars %>%"
"0","  mutate(LP_cis_hBTL = `rs number` %in% plyranges::filter(consensus.all.spaas.rpkm.bed, celltype == ""LP"")$rs,"
"0","         LP_pbSNP    = `rs number` %in% filter(yan_pbSNPs, `Cell type TF enriched in` == ""LP"")$`rs number`)"
"0",""
"0",""
"0","# Conclusion: LP cis-hBTLs are significantly more likely to be pbSNPs that disrupt LP-linked TFs than not"
"0","yan_vars %>% "
"0","  group_by(LP_cis_hBTL, LP_pbSNP) %>%"
"0","  summarize(n = n()) %>% "
"0","  xtabs(n ~ LP_cis_hBTL + LP_pbSNP, data = .) %>% "
"0","  fisher.test()"
"1","[38;5;252m`summarise()` has grouped output by 'LP_cis_hBTL'. You can override using the `.groups` argument.[39m
"
"1","
"
"1","	Fisher's Exact Test for Count Data"
"1","
"
"1","
"
"1","data:  "
"1",""
"1","."
"1",""
"1","
"
"1","p-value = 0.01856"
"1","
"
"1","alternative hypothesis: "
"1","true "
"1",""
"1","odds ratio"
"1",""
"1"," is "
"1",""
"1","not equal to"
"1",""
"1"," "
"1",""
"1","1"
"1",""
"1","
"
"1","95"
"1",""
"1"," percent confidence interval:
"
"1",""
"1"," "
"1",""
"1","1.072792 6.563318"
"1",""
"1","
"
"1","sample estimates:
"
"1","odds ratio "
"1","
"
"1","  2.960151 "
"1","
"
"1","
"
"0","# Print contingency table"
"0","yan_vars %>% "
"0","  mutate(LP_cis_hBTL = LP_cis_hBTL %>% factor(c(""TRUE"", ""FALSE"")),"
"0","         LP_pbSNP    = LP_pbSNP    %>% factor(c(""TRUE"", ""FALSE""))) %>% "
"0","  tbl_cross(row = LP_cis_hBTL,"
"0","            col = LP_pbSNP,"
"0","            percent = ""cell"") %>% "
"0","  bold_labels() %>% "
"0","  as_gt() %>% "
"0","  gtsave(""plots/table_contingency_LP_cis_hBTL_pbSNP_enrichment.png"")"
"0",""
"0",""
"0","# LC"
"0","yan_vars <- yan_vars %>%"
"0","  mutate(LC_cis_hBTL = `rs number` %in% plyranges::filter(consensus.all.spaas.rpkm.bed, celltype == ""LC"")$rs,"
"0","         LC_pbSNP    = `rs number` %in% filter(yan_pbSNPs, `Cell type TF enriched in` == ""LC"")$`rs number`)"
"0",""
"0","# Print contingency table"
"0","yan_vars %>% "
"0","  mutate(LC_cis_hBTL = LC_cis_hBTL %>% factor(c(""TRUE"", ""FALSE"")),"
"0","         LC_pbSNP    = LC_pbSNP    %>% factor(c(""TRUE"", ""FALSE""))) %>% "
"0","  tbl_cross(row = LC_cis_hBTL,"
"0","            col = LC_pbSNP,"
"0","            percent = ""cell"") %>% "
"0","  bold_labels() %>% "
"0","  as_gt() %>% "
"0","  gtsave(""plots/table_contingency_LC_cis_hBTL_pbSNP_enrichment.png"")"
"0",""
"0","# Same as above, but trends rather than being significant"
"0","yan_vars %>% "
"0","  group_by(LC_cis_hBTL, LC_pbSNP) %>%"
"0","  summarize(n = n()) %>% "
"0","  xtabs(n ~ LC_cis_hBTL + LC_pbSNP, data = .) %>% "
"0","  fisher.test()"
"1","[38;5;252m`summarise()` has grouped output by 'LC_cis_hBTL'. You can override using the `.groups` argument.[39m
"
"1","
"
"1","	Fisher's Exact Test for Count Data"
"1","
"
"1","
"
"1","data:  "
"1",""
"1","."
"1",""
"1","
"
"1","p-value = 1"
"1","
"
"1","alternative hypothesis: "
"1","true "
"1",""
"1","odds ratio"
"1",""
"1"," is "
"1",""
"1","not equal to"
"1",""
"1"," "
"1",""
"1","1"
"1",""
"1","
"
"1","95"
"1",""
"1"," percent confidence interval:
"
"1",""
"1"," "
"1",""
"1","0.02387187 5.41207179"
"1",""
"1","
"
"1","sample estimates:
"
"1","odds ratio "
"1","
"
"1","  0.951414 "
"1","
"
"1","
"
