{"frames":[{"func":"getBM(attributes = c(\"chromosome_name\", \"start_position\", \"end_position\", \n    \"hgnc_symbol\", \"ensembl_gene_id\", \"ensembl_transcript_id\"), \n    mart = useEnsembl(biomart = \"genes\", dataset = \"hsapiens_gene_ensembl\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"martCheck(mart)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"useEnsembl(biomart = \"genes\", dataset = \"hsapiens_gene_ensembl\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".useMart(biomart = biomart, dataset = dataset, host = host, verbose = verbose, \n    port = port, ensemblRedirect = ensemblRedirect, httr_config = httr_config)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"useDataset(mart = mart, dataset = dataset, verbose = verbose)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".getAttributes(mart, verbose = verbose)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".getAttrFilt(mart = mart, verbose = verbose, type = \"attributes\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"bmRequest(request = request, httr_config = martHTTRConfig(mart), \n    verbose = verbose)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(httr::GET(request, config = httr_config, content_type(\"text/plain\"), \n    timeout(10)), error = function(c) {\n    \"timeout\"\n})","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"httr::GET(request, config = httr_config, content_type(\"text/plain\"), \n    timeout(10))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"request_perform(req, hu$handle$handle)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"request_fetch(req$output, req$url, handle)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"request_fetch.write_memory(req$output, req$url, handle)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"curl::curl_fetch_memory(url, handle = handle)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"no loop for break/next, jumping to top level"}