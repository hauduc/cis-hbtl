ggplot(aes(x = "", y = n, fill = Gene_Symbol)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_brewer(palette = "Dark2") +
geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_label_repel(aes(label = n)) +
theme_void()
# Make a pie chart of top results
ldlink_top_hits_eqtls_summary %>%
ggplot(aes(x = "", y = n, fill = Gene_Symbol)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_brewer(palette = "Dark2") +
#geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_label_repel(aes(label = n)) +
theme_void()
# Make a pie chart of top results
ldlink_top_hits_eqtls_summary %>%
ggplot(aes(x = "", y = n, fill = Gene_Symbol)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_brewer(palette = "Dark2") +
#geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_label_repel(aes(label = n), size=5, show.legend = F, nudge_x = 1) +
theme_void()
# Make a pie chart of top results
ldlink_top_hits_eqtls_summary %>%
ggplot(aes(x = "", y = n, fill = Gene_Symbol)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_brewer(palette = "Dark2") +
geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
#geom_label_repel(aes(label = n), size=5, show.legend = F, nudge_x = 1) +
theme_void()
View(ldlink_top_hits_eqtls)
nrow(ldlink_top_hits_eqtls_summary)
seq_along(nrow(ldlink_top_hits_eqtls_summary))
nrow(ldlink_top_hits_eqtls_summary)
rownames(ldlink_top_hits_eqtls_summary)
rownames(ldlink_top_hits_eqtls_summary) %>% seq_along()
ldlink_top_hits_eqtls_summary %>% seq_along()
dim(ldlink_top_hits_eqtls_summary)
dim(ldlink_top_hits_eqtls_summary)[1]
dim(ldlink_top_hits_eqtls_summary)[1] %>% seq_along()
?seq_along
seq(1, 11, 2)
seq(1, 11, 1.5)
`:`(1, 5)
`:`(1, 10)
seq_along(ldlink_top_hits_eqtls_summary$Gene_Symbol)
top_hits_merged %>% rownames()
top_hits_merged_long %>% rownames()
# Look at most frequent eQTLs by gene
ldlink_top_hits_eqtls_summary <- ldlink_top_hits_eqtls %>%
group_by(Gene_Symbol) %>%
summarize(n = n()) %>%
arrange(desc(n))
# Format for easy pie chart viewing
# Change low freq rows to "other"
for (i in seq_along(rownames(ldlink_top_hits_eqtls_summary))) {
if (ldlink_top_hits_eqtls_summary$n[i] > 25) {
ldlink_top_hits_eqtls_summary$Gene_Symbol[i] <- ldlink_top_hits_eqtls_summary$Gene_Symbol[i]
} else {
ldlink_top_hits_eqtls_summary$Gene_Symbol[i] <- "other"
}
}
# Collapse the row "other"
ldlink_top_hits_eqtls_summary <- ldlink_top_hits_eqtls_summary %>%
group_by(Gene_Symbol) %>%
summarize(n = sum(n)) %>%
arrange(desc(n))
# Make "other" last and convert Gene_Symbol to factor to allow for custom pie chart order
ldlink_top_hits_eqtls_summary <-
bind_rows(ldlink_top_hits_eqtls_summary %>% filter(Gene_Symbol != "other"),
ldlink_top_hits_eqtls_summary %>% filter(Gene_Symbol == "other")) %>%
mutate(Gene_Symbol = factor(Gene_Symbol, levels = Gene_Symbol))
# Make a pie chart of top results
ldlink_top_hits_eqtls_summary %>%
ggplot(aes(x = "", y = n, fill = Gene_Symbol)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_brewer(palette = "Dark2") +
geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
#geom_label_repel(aes(label = n), size=5, show.legend = F, nudge_x = 1) +
theme_void()
ggsave("plots/pie_eqtl_genes.png")
1
3
# Look at most frequent eQTLs by gene
ldlink_top_hits_eqtls_summary <- ldlink_top_hits_eqtls %>%
group_by(Gene_Symbol) %>%
summarize(n = n()) %>%
arrange(desc(n))
# Format for easy pie chart viewing
# Change low freq rows to "other"
for (i in seq_along(rownames(ldlink_top_hits_eqtls_summary))) {
if (ldlink_top_hits_eqtls_summary$n[i] > 25) {
ldlink_top_hits_eqtls_summary$Gene_Symbol[i] <- ldlink_top_hits_eqtls_summary$Gene_Symbol[i]
} else {
ldlink_top_hits_eqtls_summary$Gene_Symbol[i] <- "other"
}
}
# Collapse the row "other"
ldlink_top_hits_eqtls_summary <- ldlink_top_hits_eqtls_summary %>%
group_by(Gene_Symbol) %>%
summarize(n = sum(n)) %>%
arrange(desc(n))
# Make "other" last and convert Gene_Symbol to factor to allow for custom pie chart order
ldlink_top_hits_eqtls_summary <-
bind_rows(ldlink_top_hits_eqtls_summary %>% filter(Gene_Symbol != "other"),
ldlink_top_hits_eqtls_summary %>% filter(Gene_Symbol == "other")) %>%
mutate(Gene_Symbol = factor(Gene_Symbol, levels = Gene_Symbol))
# Make a pie chart of top results
ldlink_top_hits_eqtls_summary %>%
ggplot(aes(x = "", y = n, fill = Gene_Symbol)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_brewer(palette = "Dark2") +
geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
theme_void()
ggsave("plots/pie_eqtl_genes.png")
# Look at most frequent eQTLs by gene
ldlink_top_hits_eqtls_summary <- ldlink_top_hits_eqtls %>%
group_by(Gene_Symbol) %>%
summarize(n = n()) %>%
arrange(desc(n))
# Format for easy pie chart viewing
# Change low freq rows to "other"
for (i in seq_along(rownames(ldlink_top_hits_eqtls_summary))) {
if (ldlink_top_hits_eqtls_summary$n[i] > 25) {
ldlink_top_hits_eqtls_summary$Gene_Symbol[i] <- ldlink_top_hits_eqtls_summary$Gene_Symbol[i]
} else {
ldlink_top_hits_eqtls_summary$Gene_Symbol[i] <- "other"
}
}
# Collapse the row "other"
ldlink_top_hits_eqtls_summary <- ldlink_top_hits_eqtls_summary %>%
group_by(Gene_Symbol) %>%
summarize(n = sum(n)) %>%
arrange(desc(n))
# Make "other" last and convert Gene_Symbol to factor to allow for custom pie chart order
ldlink_top_hits_eqtls_summary <-
bind_rows(ldlink_top_hits_eqtls_summary %>% filter(Gene_Symbol != "other"),
ldlink_top_hits_eqtls_summary %>% filter(Gene_Symbol == "other")) %>%
mutate(Gene_Symbol = factor(Gene_Symbol, levels = Gene_Symbol))
# Make a pie chart of top results
ldlink_top_hits_eqtls_summary %>%
ggplot(aes(x = "", y = n, fill = Gene_Symbol)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_brewer(palette = "Set3") +
geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
theme_void()
ggsave("plots/pie_eqtl_genes.png")
# Look at most frequent eQTLs by gene
ldlink_top_hits_eqtls_summary <- ldlink_top_hits_eqtls %>%
group_by(Gene_Symbol) %>%
summarize(n = n()) %>%
arrange(desc(n))
# Format for easy pie chart viewing
# Change low freq rows to "other"
for (i in seq_along(rownames(ldlink_top_hits_eqtls_summary))) {
if (ldlink_top_hits_eqtls_summary$n[i] > 25) {
ldlink_top_hits_eqtls_summary$Gene_Symbol[i] <- ldlink_top_hits_eqtls_summary$Gene_Symbol[i]
} else {
ldlink_top_hits_eqtls_summary$Gene_Symbol[i] <- "other"
}
}
# Collapse the row "other"
ldlink_top_hits_eqtls_summary <- ldlink_top_hits_eqtls_summary %>%
group_by(Gene_Symbol) %>%
summarize(n = sum(n)) %>%
arrange(desc(n))
# Make "other" last and convert Gene_Symbol to factor to allow for custom pie chart order
ldlink_top_hits_eqtls_summary <-
bind_rows(ldlink_top_hits_eqtls_summary %>% filter(Gene_Symbol != "other"),
ldlink_top_hits_eqtls_summary %>% filter(Gene_Symbol == "other")) %>%
mutate(Gene_Symbol = factor(Gene_Symbol, levels = Gene_Symbol))
# Make a pie chart of top results
ldlink_top_hits_eqtls_summary %>%
ggplot(aes(x = "", y = n, fill = Gene_Symbol)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_brewer(palette = "Dark1") +
geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
theme_void()
ggsave("plots/pie_eqtl_genes.png")
# Look at most frequent eQTLs by gene
ldlink_top_hits_eqtls_summary <- ldlink_top_hits_eqtls %>%
group_by(Gene_Symbol) %>%
summarize(n = n()) %>%
arrange(desc(n))
# Format for easy pie chart viewing
# Change low freq rows to "other"
for (i in seq_along(rownames(ldlink_top_hits_eqtls_summary))) {
if (ldlink_top_hits_eqtls_summary$n[i] > 25) {
ldlink_top_hits_eqtls_summary$Gene_Symbol[i] <- ldlink_top_hits_eqtls_summary$Gene_Symbol[i]
} else {
ldlink_top_hits_eqtls_summary$Gene_Symbol[i] <- "other"
}
}
# Collapse the row "other"
ldlink_top_hits_eqtls_summary <- ldlink_top_hits_eqtls_summary %>%
group_by(Gene_Symbol) %>%
summarize(n = sum(n)) %>%
arrange(desc(n))
# Make "other" last and convert Gene_Symbol to factor to allow for custom pie chart order
ldlink_top_hits_eqtls_summary <-
bind_rows(ldlink_top_hits_eqtls_summary %>% filter(Gene_Symbol != "other"),
ldlink_top_hits_eqtls_summary %>% filter(Gene_Symbol == "other")) %>%
mutate(Gene_Symbol = factor(Gene_Symbol, levels = Gene_Symbol))
# Make a pie chart of top results
ldlink_top_hits_eqtls_summary %>%
ggplot(aes(x = "", y = n, fill = Gene_Symbol)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_brewer(palette = "Set3") +
geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
theme_void()
ggsave("plots/pie_eqtl_genes.png")
# Look at most frequent eQTLs by gene
ldlink_top_hits_eqtls_summary <- ldlink_top_hits_eqtls %>%
group_by(Gene_Symbol) %>%
summarize(n = n()) %>%
arrange(desc(n))
# Format for easy pie chart viewing
# Change low freq rows to "other"
for (i in seq_along(ldlink_top_hits_eqtls_summary$n)) {
if (ldlink_top_hits_eqtls_summary$n[i] > 25) {
ldlink_top_hits_eqtls_summary$Gene_Symbol[i] <- ldlink_top_hits_eqtls_summary$Gene_Symbol[i]
} else {
ldlink_top_hits_eqtls_summary$Gene_Symbol[i] <- "other"
}
}
# Collapse the row "other"
ldlink_top_hits_eqtls_summary <- ldlink_top_hits_eqtls_summary %>%
group_by(Gene_Symbol) %>%
summarize(n = sum(n)) %>%
arrange(desc(n))
# Make "other" last and convert Gene_Symbol to factor to allow for custom pie chart order
ldlink_top_hits_eqtls_summary <-
bind_rows(ldlink_top_hits_eqtls_summary %>% filter(Gene_Symbol != "other"),
ldlink_top_hits_eqtls_summary %>% filter(Gene_Symbol == "other")) %>%
mutate(Gene_Symbol = factor(Gene_Symbol, levels = Gene_Symbol))
# Make a pie chart of top results
ldlink_top_hits_eqtls_summary %>%
ggplot(aes(x = "", y = n, fill = Gene_Symbol)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_brewer(palette = "Dark2") +
geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
theme_void()
ggsave("plots/pie_eqtl_genes.png")
ldlink_top_hits_eqtls_summary %>% nrow()
1:nrow(ldlink_top_hits_eqtls_summary)
1
2
view(top_hits_ranges)
top_hits_ranges %>% plyranges::filter(rs == "rs2721933")
top_hits_ranges %>% plyranges::filter(rs == "rs2721933") %>% view()
ldlink_top_hits_eqtls$Gene_Symbol %>% unique()
1
2
ldlink_top_hits_eqtls_summary
ldlink_top_hits_eqtls_summary[1]
ldlink_top_hits_eqtls_summary[1, ]
ldlink_top_hits_eqtls_summary[ldlink_top_hits_eqtls_summary$Gene_Symbol == "SCIMP", ]
ldlink_top_hits_eqtls_summary$Gene_Symbol == "SCIMP"
ldlink_top_hits_eqtls %>% group_by(Query, Gene_Symbol) %>% summarize(n = n())
ldlink_top_hits_eqtls %>% group_by(Query, Gene_Symbol) %>% summarize(n = n())
# Look at most frequent eQTLs by gene
ldlink_top_hits_eqtls_summary <- ldlink_top_hits_eqtls %>%
group_by(Gene_Symbol) %>%
summarize(n = n()) %>%
arrange(desc(n))
# Format for easy pie chart viewing
# Change low freq rows to "other"
for (i in seq_along(ldlink_top_hits_eqtls_summary$n)) {
if (ldlink_top_hits_eqtls_summary$n[i] >= 1) {
ldlink_top_hits_eqtls_summary$Gene_Symbol[i] <- ldlink_top_hits_eqtls_summary$Gene_Symbol[i]
} else {
ldlink_top_hits_eqtls_summary$Gene_Symbol[i] <- "other"
}
}
# Collapse the row "other"
ldlink_top_hits_eqtls_summary <- ldlink_top_hits_eqtls_summary %>%
group_by(Gene_Symbol) %>%
summarize(n = sum(n)) %>%
arrange(desc(n))
# Make "other" last and convert Gene_Symbol to factor to allow for custom pie chart order
ldlink_top_hits_eqtls_summary <-
bind_rows(ldlink_top_hits_eqtls_summary %>% filter(Gene_Symbol != "other"),
ldlink_top_hits_eqtls_summary %>% filter(Gene_Symbol == "other")) %>%
mutate(Gene_Symbol = factor(Gene_Symbol, levels = Gene_Symbol))
# Make a pie chart of top results
ldlink_top_hits_eqtls_summary %>%
ggplot(aes(x = "", y = n, fill = Gene_Symbol)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_brewer(palette = "Dark2") +
geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
theme_void()
ggsave("plots/pie_eqtl_genes.png")
# Look at most frequent eQTLs by gene
ldlink_top_hits_eqtls_summary <- ldlink_top_hits_eqtls %>%
group_by(Gene_Symbol) %>%
summarize(n = n()) %>%
arrange(desc(n))
# Format for easy pie chart viewing
# Change low freq rows to "other"
for (i in seq_along(ldlink_top_hits_eqtls_summary$n)) {
if (ldlink_top_hits_eqtls_summary$n[i] >= 10) {
ldlink_top_hits_eqtls_summary$Gene_Symbol[i] <- ldlink_top_hits_eqtls_summary$Gene_Symbol[i]
} else {
ldlink_top_hits_eqtls_summary$Gene_Symbol[i] <- "other"
}
}
# Collapse the row "other"
ldlink_top_hits_eqtls_summary <- ldlink_top_hits_eqtls_summary %>%
group_by(Gene_Symbol) %>%
summarize(n = sum(n)) %>%
arrange(desc(n))
# Make "other" last and convert Gene_Symbol to factor to allow for custom pie chart order
ldlink_top_hits_eqtls_summary <-
bind_rows(ldlink_top_hits_eqtls_summary %>% filter(Gene_Symbol != "other"),
ldlink_top_hits_eqtls_summary %>% filter(Gene_Symbol == "other")) %>%
mutate(Gene_Symbol = factor(Gene_Symbol, levels = Gene_Symbol))
# Make a pie chart of top results
ldlink_top_hits_eqtls_summary %>%
ggplot(aes(x = "", y = n, fill = Gene_Symbol)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_brewer(palette = "Dark2") +
geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
theme_void()
ggsave("plots/pie_eqtl_genes.png")
# Look at most frequent eQTLs by gene
ldlink_top_hits_eqtls_summary <- ldlink_top_hits_eqtls %>%
group_by(Gene_Symbol) %>%
summarize(n = n()) %>%
arrange(desc(n))
# Format for easy pie chart viewing
# Change low freq rows to "other"
for (i in seq_along(ldlink_top_hits_eqtls_summary$n)) {
if (ldlink_top_hits_eqtls_summary$n[i] >= 25) {
ldlink_top_hits_eqtls_summary$Gene_Symbol[i] <- ldlink_top_hits_eqtls_summary$Gene_Symbol[i]
} else {
ldlink_top_hits_eqtls_summary$Gene_Symbol[i] <- "other"
}
}
# Collapse the row "other"
ldlink_top_hits_eqtls_summary <- ldlink_top_hits_eqtls_summary %>%
group_by(Gene_Symbol) %>%
summarize(n = sum(n)) %>%
arrange(desc(n))
# Make "other" last and convert Gene_Symbol to factor to allow for custom pie chart order
ldlink_top_hits_eqtls_summary <-
bind_rows(ldlink_top_hits_eqtls_summary %>% filter(Gene_Symbol != "other"),
ldlink_top_hits_eqtls_summary %>% filter(Gene_Symbol == "other")) %>%
mutate(Gene_Symbol = factor(Gene_Symbol, levels = Gene_Symbol))
# Make a pie chart of top results
ldlink_top_hits_eqtls_summary %>%
ggplot(aes(x = "", y = n, fill = Gene_Symbol)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_brewer(palette = "Dark2") +
geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
theme_void()
ggsave("plots/pie_eqtl_genes.png")
ldlink_top_hits_eqtls %>% group_by(Query, Gene_Symbol) %>% summarize(n = n()) %>% arrange(n)
ldlink_top_hits_eqtls %>% group_by(Query, Gene_Symbol) %>% summarize(n = n()) %>% arrange(desc(n))
ldlink_top_hits_eqtls %>% group_by(Query, Gene_Symbol) %>% summarize(Number_Variants_in_LD_that_are_eQTLs = n()) %>% arrange(desc(n))
ldlink_top_hits_eqtls %>% group_by(Query, Gene_Symbol) %>% summarize(Number_Variants_in_LD_that_are_eQTLs = n()) %>% arrange(desc(Number_Variants_in_LD_that_are_eQTLs))
ldlink_top_hits_eqtls %>%
group_by(Query, Gene_Symbol) %>%
summarize(Number_Variants_in_LD_that_are_eQTLs = n()) %>%
arrange(desc(Number_Variants_in_LD_that_are_eQTLs)) %>%
gt()
library(gt)
ldlink_top_hits_eqtls %>%
group_by(Query, Gene_Symbol) %>%
summarize(Number_Variants_in_LD_that_are_eQTLs = n()) %>%
arrange(desc(Number_Variants_in_LD_that_are_eQTLs)) %>%
gt()
ldlink_top_hits_eqtls %>%
group_by(Query, Gene_Symbol) %>%
summarize(Number_Variants_in_LD_that_are_eQTLs = n()) %>%
arrange(desc(Number_Variants_in_LD_that_are_eQTLs)) %>%
ungroup %>%
gt()
ldlink_top_hits_eqtls %>%
group_by(Query, Gene_Symbol) %>%
summarize(Number_Variants_in_LD_that_are_eQTLs = n()) %>%
arrange(desc(Number_Variants_in_LD_that_are_eQTLs)) %>%
gt()
ldlink_top_hits_eqtls %>%
group_by(Query, Gene_Symbol) %>%
summarize(Number_Variants_in_LD_that_are_eQTLs = n()) %>%
arrange(desc(Number_Variants_in_LD_that_are_eQTLs)) %>%
gt() %>%
gtsave("plots/table_top_hits_eqtls.png")
ldlink_top_hits_eqtls %>%
group_by(Query, Gene_Symbol) %>%
summarize(Number_Variants_in_LD_that_are_eQTLs = n()) %>%
arrange(desc(Number_Variants_in_LD_that_are_eQTLs)) %>%
gt() %>%
tab_options(heading.title.font.weight = "bold",
column_labels.font.weight =  "light") %>%
cols_align(align = "left", columns = everything()) %>%
gtsave("plots/table_top_hits_eqtls.png")
ldlink_top_hits_eqtls %>%
group_by(Query, Gene_Symbol) %>%
summarize(Number_Variants_in_LD_that_are_eQTLs = n()) %>%
arrange(desc(Number_Variants_in_LD_that_are_eQTLs)) %>%
gt() %>%
tab_options(heading.title.font.weight = "bold",
column_labels.font.weight =  "light") %>%
gtsave("plots/table_top_hits_eqtls.png")
?tab_options
ldlink_top_hits_eqtls %>%
group_by(Query, Gene_Symbol) %>%
summarize(Number_Variants_in_LD_that_are_eQTLs = n()) %>%
arrange(desc(Number_Variants_in_LD_that_are_eQTLs)) %>%
gt() %>%
tab_options(heading.title.font.weight = "bold",
row_group.font.weight = "bold",
column_labels.font.weight =  "light") %>%
gtsave("plots/table_top_hits_eqtls.png")
ldlink_top_hits_eqtls %>%
group_by(Query, Gene_Symbol) %>%
summarize(Number_Variants_in_LD_that_are_eQTLs = n()) %>%
arrange(desc(Number_Variants_in_LD_that_are_eQTLs)) %>%
gt() %>%
tab_options(heading.title.font.weight = "bold",
row_group.font.weight = "bold",
row_group.background.color = "light gray",
column_labels.font.weight =  "light") %>%
gtsave("plots/table_top_hits_eqtls.png")
ldlink_top_hits_eqtls %>%
group_by(Query, Gene_Symbol) %>%
summarize(Number_Variants_in_LD_that_are_eQTLs = n()) %>%
arrange(desc(Number_Variants_in_LD_that_are_eQTLs)) %>%
gt() %>%
tab_options(heading.title.font.weight = "bold",
row_group.font.weight = "bold",
row_group.background.color = "gray",
column_labels.font.weight =  "light") %>%
gtsave("plots/table_top_hits_eqtls.png")
ldlink_top_hits_eqtls %>%
group_by(Query, Gene_Symbol) %>%
summarize(Number_of_Variants_in_LD_that_are_eQTLs = n()) %>%
arrange(desc(Number_of_Variants_in_LD_that_are_eQTLs)) %>%
gt() %>%
tab_options(heading.title.font.weight = "bold",
row_group.font.weight = "bold",
row_group.background.color = "gray",
column_labels.font.weight =  "light") %>%
gtsave("plots/table_top_hits_eqtls.png")
ldlink_top_hits_eqtls %>%
group_by(Query, Gene_Symbol) %>%
summarize(Number_of_Variants_in_LD_that_are_eQTLs = n()) %>%
arrange(desc(Number_of_Variants_in_LD_that_are_eQTLs)) %>%
gt() %>%
tab_options(heading.title.font.weight = "bold",
row_group.font.weight = "bold",
row_group.background.color = "gray",
column_labels.vlines.width = 1,
column_labels.font.weight =  "light") %>%
gtsave("plots/table_top_hits_eqtls.png")
ldlink_top_hits_eqtls %>%
group_by(Query, Gene_Symbol) %>%
summarize(Number_of_Variants_in_LD_that_are_eQTLs = n()) %>%
arrange(desc(Number_of_Variants_in_LD_that_are_eQTLs)) %>%
gt() %>%
tab_options(heading.title.font.weight = "bold",
row_group.font.weight = "bold",
row_group.background.color = "gray",
column_labels.border.lr.style = "solid",
column_labels.vlines.style = "solid",
heading.border.lr.style = "solid",
column_labels.vlines.width = 1,
column_labels.font.weight =  "light") %>%
gtsave("plots/table_top_hits_eqtls.png")
ldlink_top_hits_eqtls %>%
group_by(Query, Gene_Symbol) %>%
summarize(Number_of_Variants_in_LD_that_are_eQTLs = n()) %>%
arrange(desc(Number_of_Variants_in_LD_that_are_eQTLs)) %>%
gt() %>%
tab_options(heading.title.font.weight = "bold",
row_group.font.weight = "bold",
row_group.background.color = "gray",
#column_labels.border.lr.style = "solid",
column_labels.vlines.style = "solid",
#heading.border.lr.style = "solid",
column_labels.vlines.width = 1,
column_labels.font.weight =  "light") %>%
gtsave("plots/table_top_hits_eqtls.png")
view(top_hits_ranges)
1
2
3
write.table(as.data.frame(top_hits_ranges), "data/top_hits_ranges.csv", sep = ",", quote = F)
4+4
install.packages(c("backports", "cli", "commonmark", "desc", "dplyr", "fs", "glue", "gt", "jsonlite", "openssl", "pracma", "Rcpp", "RcppThread", "readr", "rlang", "rmarkdown", "RSQLite", "testthat", "tidyselect", "tinytex", "uuid", "waldo", "withr", "xfun", "XML", "yaml"))
install.packages("dplyr")
install.packages("rlang")
install.packages(c("backports", "cli", "dplyr", "fs", "glue", "gt", "jsonlite", "Rcpp", "readr", "rlang", "RSQLite", "testthat", "tidyselect", "tinytex", "waldo", "xfun", "yaml"))
install.packages("tidymodels")
plot(1)
plot(1)
plot(1)
plot(1)
